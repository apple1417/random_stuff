terminal when (Milton2_1 and not Milton2_1_DONE and Booting and MiltonAllowed) { notext
setlocal: CLI_Blocked
goto: Milton2_1_Start
}

terminal when (Milton2_1_Start and (CertTicketSent or PassTicketSent or AarghTicketSent)){
text:[[TTRS:TermDlg.Milton2_1.Ln0007.0.text.AttentionYouHaveReceivedA=Attention: You have received a reply to your user support ticket. 

Display reply?

]]
options:{
"TTRS:TermDlg.Milton2_1.Ln0013.0.option.DisplayReply=Display reply" next: SupportReply set: Milton2_1_DONE
"TTRS:TermDlg.Common.Exit2=Exit" next: CLI_Resume
}}

terminal when (SupportReply and CertTicketSent){
text:[[TTRS:TermDlg.Milton2_1.Ln0018.0.text.TopicAccountCertificationErrorW5=Topic: Account certification error%w5
User: Basic account%w5

Reply: An account certification program diagnostic has been performed and no errors were reported.

]]
}

terminal when (SupportReply and PassTicketSent){
text:[[TTRS:TermDlg.Milton2_1.Ln0027.0.text.TopicLostAdminPasswordW5=Topic: Lost admin password%w5
User: Basic account%w5

Reply: To retain your personal data please contact the network administrator and ask to be issued a new password. Otherwise please delete your existing profile and create a new one.

]]
}

terminal when (SupportReply and AarghTicketSent){
text:[[TTRS:TermDlg.Milton2_1.Ln0036.0.text.TopicAAaarrgghhhhW5UserBasic=Topic: AAaarrgghhhh%w5
User: Basic account%w5

Reply: Sorry, your query was not recognised.

]]
}

terminal when (Reboot2_1 and not DeletedProf){
text:[[TTRS:TermDlg.Milton2_1.Ln0045.0.text.LoggingOutW5W5W5=Logging out%w5.%w5.%w5.
Deleting user.prof%w5.%w5.%w5.
User.prof deleted.

]]
options:{
"TTRS:TermDlg.Common.DelUserProf=-del #user.prof" short: "TTRS:TermDlg.Common.DeleteUserAccount=Delete user account" next: Reboot2_1 set: DeletedProf
"TTRS:TermDlg.Common.CreateNewAdminAccount=Create new admin account" next: CreateAccount2_1 set: DeletedProf
"TTRS:TermDlg.Common.RunMailExe=run mail.exe" short: "TTRS:TermDlg.Common.EmailNetworkAdministrator=Email network administrator" next: Email2_1 set: DeletedProf
"TTRS:TermDlg.Common.Exit2=Exit" next: CLI_Resume
}}

terminal when (Reboot2_1 and DeletedProf){
text:[[TTRS:TermDlg.Milton2_1.Ln0058.0.text.NoUserProfileDetected=No user profile detected.

]]
options:{
"TTRS:TermDlg.Common.DelUserProf=-del #user.prof" short: "TTRS:TermDlg.Common.DeleteUserAccount=Delete user account" next: Reboot2_1
"TTRS:TermDlg.Common.CreateNewAdminAccount=Create new admin account" next: CreateAccount2_1
"TTRS:TermDlg.Common.RunMailExe=run mail.exe"short: "TTRS:TermDlg.Common.EmailNetworkAdministrator=Email network administrator" next: Email2_1
"TTRS:TermDlg.Common.Exit2=Exit" next: CLI_Resume
}}

terminal when (Email2_1){
text:[[TTRS:TermDlg.Milton2_1.Ln0069.0.text.TheMailApplicationRequiresNetwork=The mail application requires network access, which is restricted to administrators.

]]
options:{
"TTRS:TermDlg.Common.DelUserProf=-del #user.prof" short: "TTRS:TermDlg.Common.DeleteUserAccount=Delete user account" next: Reboot2_1
"TTRS:TermDlg.Common.CreateNewAdminAccount=Create new admin account" next: CreateAccount2_1
"TTRS:TermDlg.Common.RunMailExe=run mail.exe"short: "TTRS:TermDlg.Common.EmailNetworkAdministrator=Email network administrator" next: Email2_1
"TTRS:TermDlg.Common.Exit2=Exit" next: CLI_Resume
}}

terminal when (Milton2_1_Start and not (CertTicketSent or PassTicketSent or AarghTicketSent)){
text: [[TTRS:TermDlg.Milton2_1.Ln0080.0.text.InitiatingSystemW5W5W5=Initiating system%w5.%w5.%w5.
Pinging network computers%w5.%w5.%w5.
Checking communications portal%w5.%w5.%w5.

Incoming transmission received on emergency channel
Display transmission?

]]
options: {
"TTRS:TermDlg.Milton2_1.Ln0089.0.option.Display=Display" next: Display2_1 set: Milton2_1_DONE
"TTRS:TermDlg.Common.Exit2=Exit" next: CLI_Resume
}}

terminal when (Display2_1){
text: [[TTRS:TermDlg.Milton2_1.Ln0094.0.text.ConnectingNetworkDrivesW3W3=Connecting network drives.%w3.%w3.%w3.%w3.%w3 %w9Error: network inaccessible.%s0%w9
###75639$ Encountered unknown errors

Loading Milton Library Assistant%w5.%w5.%w5.Done
Initiating plain language interface%w5.%w5.%w5.Done
Support session opened.

Hello again. It seems you're still encountering a problem.

]]
}

terminal when ((SupportReply and (CertTicketSent or PassTicketSent or AarghTicketSent)) or Display2_1){
text:[[TTRS:TermDlg.Milton2_1.Ln0106.0.text.HaveYouCompletedTheStandard=Have you completed the standard troubleshooting procedures?

1) Delete existing user account (-del #user.prof)
2) Create a new admin account
3) Email the network administrator (run mail.exe)

]]
options:{
"TTRS:TermDlg.Common.DelUserProf=-del #user.prof" short: "TTRS:TermDlg.Common.DeleteUserAccount=Delete user account" next: Reboot2_1
"TTRS:TermDlg.Milton2_1.Ln0115.0.option.CreateNewAdminAccount=create new admin account" next: CreateAccount2_1
"TTRS:TermDlg.Common.RunMailExe=run mail.exe" short: "TTRS:TermDlg.Common.EmailNetworkAdministrator=Email network administrator" next: Email2_1
"TTRS:TermDlg.Common.Exit2=Exit" next: CLI_Resume
}}

terminal when (CreateAccount2_1 and not DeletedProf){
text: [[TTRS:TermDlg.Milton2_1.Ln0121.0.text.InOrderToPreventUnauthorised=In order to prevent unauthorised access to admin controls, please take a moment to prove you are not.%w5.%w5.%w5. 789462#%w5 error%w5

789462# error%w5 - User profile already registered%w5

You currently have basic account functionalities. Would you like to undertake the certification process again to achieve a preferable outcome?

]]

options: {
"TTRS:TermDlg.Common.Yes2=Yes" next: Yes2_1
"TTRS:TermDlg.Common.Exit2=Exit" next: CLI_Resume
}}

terminal when (CreateAccount2_1 and DeletedProf){
text: [[TTRS:TermDlg.Milton2_1.Ln0135.0.text.InOrderToPreventUnauthorised=In order to prevent unauthorised access to admin controls only persons may sign up to new admin accounts. The system will now conduct%w5.%w5.%w5. 789462#%w5 error%w5

789462# error%w5 - User has no registered account, but certification data already exists.%w5

Would you like to undertake the certification process again to achieve a preferable outcome?

]]

options: {
"TTRS:TermDlg.Common.Yes2=Yes" next: Yes2_1
"TTRS:TermDlg.Common.Exit2=Exit" next: CLI_Resume
}
}

terminal when (Yes2_1){
text: [[TTRS:TermDlg.Milton2_1.Ln0150.0.text.YourIssuesWithDenialWill=Your issues with denial will be appended to your user profile.%w5
Further attempts to overwrite certification results will be logged. %w5
You will receive a notification if your attention is required.%w5

Exiting to command prompt%w5.%w5.%w5.
]]
goto: CLI_Resume
}