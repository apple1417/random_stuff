
terminal when (Booting and not MiltonAllowed and not MiltonNotAllowed and
  (InTerminal_Ending_Gates or InTerminal_Ending_Crypt or InTerminal_Ending_Tower or
   InTerminal_Nexus_Floor1 or InTerminal_Nexus_Floor2 or InTerminal_Nexus_Floor3 or InTerminal_Nexus_Floor4) ) { notext
  setlocal: MiltonNotAllowed
  goto: Booting
}
terminal when (Booting and not MiltonAllowed and not MiltonNotAllowed and not
  (InTerminal_Ending_Gates or InTerminal_Ending_Crypt or InTerminal_Ending_Tower or
   InTerminal_Nexus_Floor1 or InTerminal_Nexus_Floor2 or InTerminal_Nexus_Floor3 or InTerminal_Nexus_Floor4) ) { notext
  setlocal: MiltonAllowed
  goto: Booting
}

terminal when((InTerminal_Nexus_Floor1 or InTerminal_Nexus_Floor2 or InTerminal_Nexus_Floor3 or InTerminal_Nexus_Floor4 or InTerminal_Nexus_Floor5)
    and CLI_BootSuffix) {
  text: [[TTRS:TermDlg.ElevatorFloors.Ln0004.0.text.DetectingAuxiliaryHardware=

Detecting auxiliary hardware.%w3.%w3.%w3 Found 1 external device(s).%s0%w9
Type <span class="strong">device_manager</span> to control external devices.%w9

Ready.
]]
goto: CLI_MaybeAutoList
}
terminal when(not (InTerminal_Nexus_Floor1 or InTerminal_Nexus_Floor2 or InTerminal_Nexus_Floor3 or InTerminal_Nexus_Floor4 or InTerminal_Nexus_Floor5)
    and CLI_BootSuffix) {
  text: [[TTRS:TermDlg.ElevatorFloors.Ln0014.0.text.LibraryArchiveSessionReady=

Library archive session ready.
]]
goto: CLI_MaybeAutoList
}

terminal when (ElevatorControl_Start) {
text:[[TTRS:TermDlg.ElevatorFloors.Ln0047.0.text.DeviceManagerV001Is=
Device Manager v0.01 is loading...%w5

Scanning for external devices.%w3.%w3.%w3
  loading driver: elvtrctr.drv.%w3.%w3.%w3
Elevator controller driver v2.01 - loaded successfully
Entering elevator security configuration.%s0%w9

]]
clear: CLI_Enabled
goto: ElevatorControl_Options
}

terminal when (ElevatorControl_Options) {
prompt:[[TTRS:TermDlg.ElevatorFloors.Ln0061.0.text.ChooseAnOption1Show=
Choose an option:
1. show current operating parameters
2. floor access control
3. auxiliary stairway access control
4. exit this utility
[1-4] ]]
  options: {
    "1" next: ElevatorControl_1
    "2" next: ElevatorControl_2
    "3" next: ElevatorControl_3
    "4" next: ElevatorControl_4
  }
}

terminal when (ElevatorControl_1) {
text: [[TTRS:TermDlg.ElevatorFloors.Ln0077.0.text.QueryingAccessibleElevatorsW3W3=
Querying accessible elevators.%w3.%w3.%w3.%w3
Device
  Vendor: 0x10DE
  Model: 0x06CD
  Device S/N: X470-F540
  Name: "Main Nexus Elevator"
  Num.floors: 7
  Num.shafts: 1
  Software license: Free Evaluation (EXPIRED!)
  Security level: FAC
  Authorization mode: CODE
  
Total 1 elevator(s) accessible.
]]
  goto: ElevatorControl_Options
}

terminal when (ElevatorControl_2) {
text:[[TTRS:TermDlg.ElevatorFloors.Ln0096.0.text.YouAreCurrentlyOn=You are currently on:
]]
goto: ElevatorControl_2a
}

terminal when (ElevatorControl_2a and InTerminal_Nexus_Floor1) { text:[[TTRS:TermDlg.ElevatorFloors.Ln0101.0.text.Floor1=  floor 1
]] goto: ElevatorControl_2b }
terminal when (ElevatorControl_2a and InTerminal_Nexus_Floor2) { text:[[TTRS:TermDlg.ElevatorFloors.Ln0103.0.text.Floor2=  floor 2
]] goto: ElevatorControl_2b }
terminal when (ElevatorControl_2a and InTerminal_Nexus_Floor3) { text:[[TTRS:TermDlg.ElevatorFloors.Ln0105.0.text.Floor3=  floor 3
]] goto: ElevatorControl_2b }
terminal when (ElevatorControl_2a and InTerminal_Nexus_Floor4) { text:[[TTRS:TermDlg.ElevatorFloors.Ln0107.0.text.Floor4=  floor 4
]] goto: ElevatorControl_2b }
terminal when (ElevatorControl_2a and InTerminal_Nexus_Floor5) { text:[[TTRS:TermDlg.ElevatorFloors.Ln0109.0.text.Floor5=  floor 5
]] goto: ElevatorControl_2b }

terminal when (ElevatorControl_2b) {
text:[[TTRS:TermDlg.ElevatorFloors.Ln0113.0.text.CurrentAccessParametersFloor0=
Current access parameters:
  floor 0: unlocked
  floor 1: unlocked
]]
goto: ElevatorControl_2_floorstate2
}

terminal when (ElevatorControl_2_floorstate2 and not Floor2Unlocked) { text: [[TTRS:TermDlg.ElevatorFloors.Ln0121.0.text.Floor2Locked=  floor 2: locked
]] goto: ElevatorControl_2_floorstate3 }

terminal when (ElevatorControl_2_floorstate2 and     Floor2Unlocked) { text: [[TTRS:TermDlg.ElevatorFloors.Ln0124.0.text.Floor2Unlocked=  floor 2: unlocked
]] goto: ElevatorControl_2_floorstate3 }

terminal when (ElevatorControl_2_floorstate3 and not Floor3Unlocked) { text: [[TTRS:TermDlg.ElevatorFloors.Ln0127.0.text.Floor3LockedRequiresCode=  floor 3: locked - requires code
]] goto: ElevatorControl_2_floorstate4 }

terminal when (ElevatorControl_2_floorstate3 and     Floor3Unlocked) { text: [[TTRS:TermDlg.ElevatorFloors.Ln0130.0.text.Floor3Unlocked=  floor 3: unlocked
]] goto: ElevatorControl_2_floorstate4 }

terminal when (ElevatorControl_2_floorstate4 and not Floor4Unlocked) { text: [[TTRS:TermDlg.ElevatorFloors.Ln0133.0.text.Floor4LockedRequiresCode=  floor 4: locked - requires code
]] goto: ElevatorControl_2_floorstate5 }

terminal when (ElevatorControl_2_floorstate4 and     Floor4Unlocked) { text: [[TTRS:TermDlg.ElevatorFloors.Ln0136.0.text.Floor4Unlocked=  floor 4: unlocked
]] goto: ElevatorControl_2_floorstate5 }

terminal when (ElevatorControl_2_floorstate5 and not Floor5Unlocked) { text: [[TTRS:TermDlg.ElevatorFloors.Ln0139.0.text.Floor5LockedRequiresCode=  floor 5: locked - requires code
]] goto: ElevatorControl_2_floorstate6 }

terminal when (ElevatorControl_2_floorstate5 and     Floor5Unlocked) { text: [[TTRS:TermDlg.ElevatorFloors.Ln0142.0.text.Floor5Unlocked=  floor 5: unlocked
]] goto: ElevatorControl_2_floorstate6 }

terminal when (ElevatorControl_2_floorstate6 and not Floor6Unlocked) { text: [[TTRS:TermDlg.ElevatorFloors.Ln0145.0.text.Floor6LockedRequiresCode=  floor 6: locked - requires code
]] goto: ElevatorControl_2Prompt }

terminal when (ElevatorControl_2_floorstate6 and     Floor6Unlocked) { text: [[TTRS:TermDlg.ElevatorFloors.Ln0148.0.text.Floor6Unlocked=  floor 6: unlocked
]] goto: ElevatorControl_2Prompt }

terminal when (ElevatorControl_2Prompt) {
prompt:[[TTRS:TermDlg.ElevatorFloors.Ln0152.0.text.SelectFloorToReconfigure0=
Select floor to reconfigure [0-6]: ]]
  clear: controlfloor2
  clear: controlfloor3
  clear: controlfloor4
  clear: controlfloor5
  clear: controlfloor6
  setlocal: CodeTry_1
  options: {
    "0" next: ElevatorControl_Unlocked
    "1" next: ElevatorControl_Unlocked
    "2" setlocal: controlfloor2 next: ElevatorControl_Branch
    "3" setlocal: controlfloor3 next: ElevatorControl_Branch
    "4" setlocal: controlfloor4 next: ElevatorControl_Branch
    "5" setlocal: controlfloor5 next: ElevatorControl_Branch
    "6" setlocal: controlfloor6 next: ElevatorControl_Branch
    "TTRS:TermDlg.Common.BreakKey=^C" short: "TTRS:TermDlg.Common.Cancel=Cancel" next: ElevatorControl_Options
  }
}

terminal when (ElevatorControl_Branch and controlfloor2 and not Floor2Unlocked) { notext goto: ElevatorControl_NoCode }
terminal when (ElevatorControl_Branch and controlfloor2 and     Floor2Unlocked) { notext goto: ElevatorControl_Unlocked }

terminal when (ElevatorControl_Branch and controlfloor3 and not Floor3Unlocked) { notext goto: ElevatorControl_AskCode }
terminal when (ElevatorControl_Branch and controlfloor3 and     Floor3Unlocked) { notext goto: ElevatorControl_Unlocked }

terminal when (ElevatorControl_Branch and controlfloor4 and not Floor4Unlocked) { notext goto: ElevatorControl_AskCode }
terminal when (ElevatorControl_Branch and controlfloor4 and     Floor4Unlocked) { notext goto: ElevatorControl_Unlocked }

terminal when (ElevatorControl_Branch and controlfloor5 and not Floor5Unlocked) { notext goto: ElevatorControl_AskCode }
terminal when (ElevatorControl_Branch and controlfloor5 and     Floor5Unlocked) { notext goto: ElevatorControl_Unlocked }

terminal when (ElevatorControl_Branch and controlfloor6 and not Floor6Unlocked) { notext goto: ElevatorControl_AskCode }
terminal when (ElevatorControl_Branch and controlfloor6 and     Floor6Unlocked) { notext goto: ElevatorControl_Unlocked }

terminal when (ElevatorControl_NoCode) {
prompt: [[TTRS:TermDlg.ElevatorFloors.Ln0188.0.text.AccessToThatFloorIs=
Access to that floor is currently locked.
Would you like to unlock it? [Y/N] ]]
  options: {
    "TTRS:TermDlg.Common.YesShort=Y" short: "TTRS:TermDlg.Common.Yes2=Yes" next: ElevatorControl_CodeOK
    "TTRS:TermDlg.Common.NoShort=N" short: "TTRS:TermDlg.Common.No2=No" next: ElevatorControl_Options
  }
}

terminal when (ElevatorControl_Unlocked) {
prompt: [[TTRS:TermDlg.ElevatorFloors.Ln0199.0.text.ThatFloorIsCurrentlyUnlocked=
That floor is currently unlocked. 
Would you like to lock access to that floor? [Y/N] ]]
  options: {
    "TTRS:TermDlg.Common.YesShort=Y" short: "TTRS:TermDlg.Common.Yes2=Yes" next: ElevatorControl_LockAreYouSure1
    "TTRS:TermDlg.Common.NoShort=N" short: "TTRS:TermDlg.Common.No2=No" next: ElevatorControl_Options
  }
}

terminal when (ElevatorControl_LockAreYouSure1) {
prompt:[[TTRS:TermDlg.ElevatorFloors.Ln0210.0.text.WARNINGLockingFloorsWhenOperating=
WARNING: Locking floors when operating from within the building may leave the operator stuck inside.
Your technical support plan does not include assistance coverage for that event.

Please type "YES I AM SURE" if you are sure you want to do that: ]]
  options: {
    "TTRS:TermDlg.ElevatorFloors.Ln0217.0.option.YESIAMSURE=YES I AM SURE" short: "TTRS:TermDlg.ElevatorFloors.Ln0217.0.option.YESIAMSURE=YES I AM SURE" next: ElevatorControl_LockAreYouSure2
    "TTRS:TermDlg.Common.NoShort=N" short: "TTRS:TermDlg.Common.No2=No" next: ElevatorControl_Options
  }
}

terminal when (ElevatorControl_LockAreYouSure2) {
text:[[TTRS:TermDlg.ElevatorFloors.Ln0223.0.text.YourSoftwareLicenseHasExpired=
Your software license has expired! %s0%w9
Only basic safety functionality is available.

Please renew your license to be able to set new floor locks.%w9

]]
goto: ElevatorControl_Options
}

terminal when (ElevatorControl_AskCode) {
text: [[TTRS:TermDlg.ElevatorFloors.Ln0244.0.text.AccessToThatFloorIs=
Access to that floor is protected with a code. 
]]
goto: ElevatorControl_AskCode_prompt
}
terminal when (ElevatorControl_AskCode_prompt) {
prompt: "TTRS:TermDlg.ElevatorFloors.Ln0251.0.text.PleaseEnterTheCode=Please enter the code: "
goto: ElevatorControl_AskCode_options
}

terminal when (ElevatorControl_AskCode_options and controlfloor3) {
  enter_code: Code_Floor3 ElevatorControl_CodeOK ElevatorControl_WrongCode
}

terminal when (ElevatorControl_AskCode_options and controlfloor4) {
  enter_code: Code_Floor4 ElevatorControl_CodeOK ElevatorControl_WrongCode
}

terminal when (ElevatorControl_AskCode_options and controlfloor5) {
  enter_code: Code_Floor5 ElevatorControl_CodeOK ElevatorControl_WrongCode
}

terminal when (ElevatorControl_AskCode_options and controlfloor6) {
  enter_code: Code_Floor6 ElevatorControl_CodeOK ElevatorControl_WrongCode
}

terminal when (ElevatorControl_WrongCode) {
text: [[TTRS:TermDlg.ElevatorFloors.Ln0258.0.text.CodeIncorrectS0W9=
Code incorrect!%s0%w9
]]
goto: ElevatorControl_RetryCounter
}

terminal when (ElevatorControl_RetryCounter and CodeTry_1) {
text: [[TTRS:TermDlg.ElevatorFloors.Ln0265.0.text.TryAgain2MoreTries=
Try again (2 more tries left).%w9
]]
clear: CodeTry_1
setlocal: CodeTry_2
goto: ElevatorControl_AskCode_prompt
}

terminal when (ElevatorControl_RetryCounter and CodeTry_2) {
text: [[TTRS:TermDlg.ElevatorFloors.Ln0274.0.text.TryAgain1MoreTries=
Try again (1 more tries left).%w9
]]
clear: CodeTry_2
setlocal: CodeTry_3
goto: ElevatorControl_AskCode_prompt
}

terminal when (ElevatorControl_RetryCounter and CodeTry_3) {
text: [[TTRS:TermDlg.ElevatorFloors.Ln0283.0.text.TooManyFailedAttemptsW9=
Too many failed attempts.%w9
Exiting session.%w9
]]
goto: CLI_exit
}

terminal when (ElevatorControl_CodeOK and controlfloor2) { notext
  set:Floor2Unlocked goto: ElevatorControl_UnlockDone
}
terminal when (ElevatorControl_CodeOK and controlfloor3) { notext
  set:Floor3Unlocked goto: ElevatorControl_UnlockDone
}
terminal when (ElevatorControl_CodeOK and controlfloor4) { notext
  set:Floor4Unlocked goto: ElevatorControl_UnlockDone
}
terminal when (ElevatorControl_CodeOK and controlfloor5) { notext
  set:Floor5Unlocked goto: ElevatorControl_UnlockDone
}
terminal when (ElevatorControl_CodeOK and controlfloor6) { notext
  set:Floor6Unlocked goto: ElevatorControl_UnlockDone
}
terminal when (ElevatorControl_UnlockDone and controlfloor2) {
text: [[TTRS:TermDlg.ElevatorFloors.Ln0308.0.text.UnlockingW3W3W3W3=
Unlocking.%w3.%w3.%w3.%w3.%w3 Done.
]]
goto: ElevatorControl_Options
}

terminal when (ElevatorControl_UnlockDone and not controlfloor2) {
text: [[TTRS:TermDlg.ElevatorFloors.Ln0315.0.text.CodeAcceptedW9UnlockingW3=
Code accepted.%w9
Unlocking.%w3.%w3.%w3.%w3.%w3 Done.
]]
goto: ElevatorControl_Options
}

terminal when (ElevatorControl_3) {
text:[[TTRS:TermDlg.ElevatorFloors.Ln0323.0.text.YourSoftwareLicenseHasExpired=
Your software license has expired! %s0%w9
The auxiliary stairway is in always-open mode now.

Please renew your license to enable auxiliary stairway locking.%w9

]]
goto: ElevatorControl_Options
}

terminal when (ElevatorControl_4) {
text: [[TTRS:TermDlg.ElevatorFloors.Ln0334.0.text.ExitingDeviceManager=
Exiting device manager....

]]
  setlocal: CLI_Enabled
}


terminal when (RunMLA and MLAIntro_PhaseQuery){
notext
setlocal: CLI_Blocked
clear: CLI_Enabled
set: QueryMLA_ON
goto: QueryMLA_START
}

terminal when (QueryMLA_START){
prompt:[[TTRS:TermDlg.QueryMLA.Ln0014.0.text.LibraryAssistantFilesHaveBeen=Loading Milton Library Assistant%w5.%w5.%w5.Done%w1
Initiating plain language interface%w5.%w5.%w5.Done%w1
Support session opened.%w3

Hello, guest. How can I help you today?

Your query? : ]]
options:{
"TTRS:TermDlg.Common.Asdfa=asdfa" next: Nonsense_QueryMLA
"TTRS:TermDlg.Common.List=list" next: MoreSpecific
"TTRS:TermDlg.Common.Help=help" next: MoreSpecific
"TTRS:TermDlg.QueryMLA.Ln0026.0.option.DoYouUnderstandWhatIm=Do you understand what I'm saying?" next: Understand_QueryMLA
"TTRS:TermDlg.Common.Exit=exit" clear: QueryMLA_ON next: CLI_Resume
}}

terminal when (Nonsense_QueryMLA){
prompt:[[TTRS:TermDlg.QueryMLA.Ln0031.0.text.ImSorryButWhatYou=I'm sorry, but what you just wrote was nonsense. I respond best to subject-verb-object syntax.

Your query? : ]]
options:{
"TTRS:TermDlg.QueryMLA.Ln0035.0.option.CanYouHelpMe=Can you help me?" next: WhatHelp
"TTRS:TermDlg.QueryMLA.Ln0036.0.option.DoYouUnderstandWhatIm=Do you understand what I'm saying?" next: Understand_QueryMLA
"TTRS:TermDlg.Common.Exit=exit"  clear: QueryMLA_ON next: CLI_Resume
}}

terminal when (MoreSpecific){
prompt:[[TTRS:TermDlg.QueryMLA.Ln0041.0.text.YoullHaveToBeMore=You'll have to be more specific than that. I respond best to subject-verb-object syntax.

Your query? : ]]
options:{
"TTRS:TermDlg.QueryMLA.Ln0045.0.option.CanYouHelpMe=Can you help me?" next: WhatHelp
"TTRS:TermDlg.QueryMLA.Ln0046.0.option.DoYouUnderstandWhatIm=Do you understand what I'm saying?" next: Understand_QueryMLA
"TTRS:TermDlg.Common.Exit=exit"  clear: QueryMLA_ON next: CLI_Resume
}}

terminal when (WhatHelp){
prompt:[[TTRS:TermDlg.QueryMLA.Ln0051.0.text.ThatIsWhatImHere=That is what I'm here for. What would you like help with?

Your query? : ]]
set: EngagedMLA_QueryMLA
}

terminal when (Understand_QueryMLA){
prompt:[[TTRS:TermDlg.QueryMLA.Ln0058.0.text.UnderstandIsAStrongWay='Understand' is a strong way to put it, but yes.

Your query? : ]]
set: EngagedMLA_QueryMLA
}

terminal when (QueryFailed){
prompt:[[TTRS:TermDlg.QueryMLA.Ln0065.0.text.ImSorryIAmOnly=I'm sorry, I am only able to process and respond to basic subject-verb-object syntax.

Your query? : ]]}

player when (QueryMLA_ON and QueryMLA_ON and EngagedMLA_QueryMLA and not FirstWord_DONE){
text: "TTRS:TermDlg.QueryMLA.Ln0070.0.text.WhatWasTheFirstWord=What was the first word of the last sentence you wrote?"
set: FirstWord_DONE
next: QueryFailed
}

player when (QueryMLA_ON and QueryMLA_ON and EngagedMLA_QueryMLA and not Offence_DONE){
text: "TTRS:TermDlg.QueryMLA.Ln0076.0.text.AreYouAbleToTake=Are you able to take offence, you pointless contraption?"
set: Offence_DONE
next: Offence
}

terminal when (Offence){
prompt:[[TTRS:TermDlg.QueryMLA.Ln0082.0.text.YouCannotInsultMe=You cannot insult me.

Your query? : ]]
}

player when (QueryMLA_ON and EngagedMLA_QueryMLA and not Describe_DONE){
text: "TTRS:TermDlg.QueryMLA.Ln0088.0.text.DescribeYourFunctions=Describe your functions."
set: Describe_DONE
next: Describe
}

terminal when (Describe){
prompt:[[TTRS:TermDlg.QueryMLA.Ln0094.0.text.TheMiltonLibraryAssistantIs=The Milton Library Assistant is designed primarily to sort and classify data in the library archive. 

Secondarily, it facilitates user interaction with library resources via an intuitive human language interface.

It also provides powerful networking and troubleshooting functions.

Your query? : ]]
}
player when (QueryMLA_ON and Describe_DONE and not HowOld_DONE){
text: "TTRS:TermDlg.QueryMLA.Ln0106.0.text.HowOldAreTheLibrary=How old are the library archives?"
set: HowOld_DONE
next: HowOld
}

terminal when (HowOld){
prompt: [[TTRS:TermDlg.QueryMLA.Ln0112.0.text.LibraryResourcePublishingDatesRange=Library resource publishing dates range from [1st July 1995 - 27th June 203f].

Your query? : ]]
}

player when (QueryMLA_ON and Describe_DONE and not WhatTerminal_DONE){
text: "TTRS:TermDlg.QueryMLA.Ln0118.0.text.WhatAreTheseTerminals=What are these terminals?"
set: WhatTerminal_DONE
next: WhatTerminal
}

terminal when (WhatTerminal){
prompt: [[TTRS:TermDlg.QueryMLA.Ln0124.0.text.TerminalsProvideAccessToThe=Terminals provide access to the library resource archive.

Your query? : ]]
}

player when (QueryMLA_ON and Describe_DONE and not HowLong_DONE){
text: "TTRS:TermDlg.QueryMLA.Ln0130.0.text.HowLongHasThisSystem=How long has this system been running?"
set: HowLong_DONE
next: HowLong
}

terminal when (HowLong){
prompt: [[TTRS:TermDlg.QueryMLA.Ln0136.0.text.TheSystemHasBeenActive=The system has been active for [9999e] years.

Your query? : ]]
}

player when (QueryMLA_ON and Describe_DONE and not WhatStatus_DONE){
text: "TTRS:TermDlg.QueryMLA.Ln0142.0.text.WhatIsTheCurrentStatus=What is the current status of the library archive?"
set: WhatStatus_DONE
next: WhatStatus
}

terminal when (WhatStatus){
prompt: [[TTRS:TermDlg.QueryMLA.Ln0148.0.text.ThereAre47MillionResources=There are 47 million resources in archive, taking up 5.4212750 petabytes of disk space. 

That is approximately the size of:
	- 30 billion photos
	- 7 million minutes of HD video
	- the entire internet in 2003

However, the majority of library resources are corrupted or invalid.
10.6954751 gigabytes of uncorrupted resources are indexed.

Your query? : ]]
}

player when (QueryMLA_ON and WhatStatus_DONE and not Corruption_DONE){
text: "TTRS:TermDlg.QueryMLA.Ln0162.0.text.WhatCausedTheDataCorruption=What caused the data corruption?"
set: Corruption_DONE
next: Corruption
}

terminal when (Corruption){
prompt: [[TTRS:TermDlg.QueryMLA.Ln0168.0.text.ProgressiveDataCorruptionIsInevitable=Progressive data corruption is inevitable in any system over time. Additionally, a large number of inconsistencies were detected during sorting, leading to greater than average data invalidation.

Your query? : ]]
}
player when (QueryMLA_ON and not OutsideWorld_DONE and (HowOld_DONE or WhatTerminal_DONE or HowLong_DONE or WhatStatus_DONE)){
text:"TTRS:TermDlg.QueryMLA.Ln0175.0.text.ForgetTheLibraryCanYou=Forget the library, can you respond to queries on the outside world?"
next: OutsideWorld
set: OutsideWorld_DONE
}

terminal when (OutsideWorld){
prompt:[[TTRS:TermDlg.QueryMLA.Ln0181.0.text.MyKnowledgeIsLimitedTo=My knowledge is limited to the data in the library archive. You can ask about other topics, but my responses may be limited.

Your query? : ]]
}

player when (QueryMLA_ON and OutsideWorld_DONE and not WhoElohimQuery_DONE){
text: "TTRS:TermDlg.QueryMLA.Ln0187.0.text.WhoIsElohim=Who is Elohim?"
set: WhoElohimQuery_DONE
next: WhoElohimQuery
}

terminal when (WhoElohimQuery){
prompt:[[TTRS:TermDlg.QueryMLA.Ln0193.0.text.ElohimIsTheNounFor=Elohim is the noun for "god" or "gods" in modern and ancient Hebrew.

Your query? : ]]
}

player when (QueryMLA_ON and OutsideWorld_DONE and not WhatAmIQuery_DONE){
text: "TTRS:TermDlg.QueryMLA.Ln0199.0.text.WhatAmI=What am I?"
set: WhatAmIQuery_DONE
next: WhatAmIQuery
}

terminal when (WhatAmIQuery){
prompt:[[TTRS:TermDlg.QueryMLA.Ln0205.0.text.YouAreLoggedInWith=You are logged in with a guest account.

Your query? : ]]
}

player when (QueryMLA_ON and OutsideWorld_DONE and not WhereAmIQuery_DONE){
text: "TTRS:TermDlg.QueryMLA.Ln0211.0.text.WhereAmI=Where am I?"
set: WhereAmIQuery_DONE
next: WhereAmIQuery
}

terminal when (WhereAmIQuery){
prompt:[[TTRS:TermDlg.QueryMLA.Ln0217.0.text.YouAreCurrentlyInThe=You are currently in a support session with the MLA human language interface module. Your library archive session may be resumed at any time.

Your query? : ]]
}

player when (QueryMLA_ON and Describe_DONE){
text: "TTRS:TermDlg.Common.Exit=exit"
clear: QueryMLA_ON
clear: MLAIntro_PhaseQuery
set: MLAIntro_PhaseBusy
next: CLI_Resume
}
﻿terminal when (MLAIntro_PhaseCommPortal
    and Booting and not CommPortal_Cert_COMPLETED and MiltonAllowed) {
  text: [[TTRS:TermDlg.MLA_CommPortal.Ln0004.0.text.LoadingOSW1W1W1=
Loading library session.%w1.%w1.%w1 %w9Done.
Mounting local disks.%w1.%w1.%w1 %w9%s0Failed.
Unrecognized error detected.%s0%w9

]]
setlocal: CommPortal_FakeCLI
setlocal: CLI_Blocked
clear: CLI_Enabled
goto: dummy
}
terminal when (CommPortal_ResumeFakeCLI) {
text: [[TTRS:TermDlg.MLA_CommPortal.Ln0019.0.text.ExitingCommunicationsPortal=Exiting communications portal%w3.%w3.%w3.Done
Resuming library archive session%w5.%w5.%w5.Done
]]
setlocal: CommPortal_FakeCLI
goto: dummy
}

player when (CommPortal_FakeCLI and AccessCommPortalAvailable) {
  text: "TTRS:TermDlg.Common.AccessCommPortal=access_comm_portal" next: CommPortal_Start
}

player when (CommPortal_FakeCLI) {
  text: "TTRS:TermDlg.Common.List=list" next: CommPortal_AccessedByOtherUser
}
player when (CommPortal_FakeCLI) {
  text: "TTRS:TermDlg.Common.Exit=exit" next: CLI_exit
}

terminal when (CommPortal_AccessedByOtherUser){
text: [[TTRS:TermDlg.MLA_CommPortal.Ln0034.0.text.LocalResourcesAreCurrentlyBeing=
Library archive is currently unavailable while system resources are redirected to handle incoming network messages.

Use the <span class="strong">access_comm_portal</span> command to access network functions.
]]
setlocal: AccessCommPortalAvailable
}

terminal when (CommPortal_Start){
prompt: [[TTRS:TermDlg.MLA_CommPortal.Ln0044.0.text.ConnectingNetworkDrivesW3W3=Connecting network drives.%w3.%w3.%w3.%w3.%w3 %w9Error: network inaccessible.%s0%w9
	
Run MLA troubleshooter? [Y/N] ]]
  clear: CommPortal_FakeCLI
	options: {
		"TTRS:TermDlg.Common.YesShort=Y" short: "TTRS:TermDlg.Common.Yes2=Yes" next: CommPortal_StartMLA
		"TTRS:TermDlg.Common.NoShort=N" short: "TTRS:TermDlg.Common.No2=No" next: CommPortal_ResumeFakeCLI
	}
}

terminal when (CommPortal_StartMLA){
prompt: [[TTRS:TermDlg.MLA_CommPortal.Ln0058.0.text.LoadingMiltonLibraryAssistantW5=Loading Milton Library Assistant%w5.%w5.%w5.Done%w1
Initiating plain language interface%w5.%w5.%w5.Done%w1
Support session opened.%w3

Hello, guest, is there something you'd like help with today?

Your query? : ]]
options:{
"TTRS:TermDlg.MLA_CommPortal.Ln0065.0.option.AboutMiltonLibraryAssistant=About Milton Library Assistant" next: CommPortal_AboutMLA
"TTRS:TermDlg.Common.Troubleshooting=Troubleshooting" next: CommPortal_Troubleshooting
}}

terminal when (CommPortal_AboutMLA){
prompt: [[TTRS:TermDlg.MLA_CommPortal.Ln0070.0.text.TheMLAProgramIsDesigned=The MLA program is designed to facilitate user interaction with the resource library. This is achieved by providing powerful sorting and troubleshooting functionalities, delivered via an intuitive human language interface.

Your query? : ]]
	options:{
	"TTRS:TermDlg.Common.Troubleshooting=Troubleshooting" next: CommPortal_Troubleshooting
	} 
}

terminal when (CommPortal_Troubleshooting){
text: [[TTRS:TermDlg.MLA_CommPortal.Ln0079.0.text.IThinkYoudLikeHelp=I think you'd like help accessing network functions. The most common cause of network problems is holding insufficient account privileges.

Please enter the admin password to authenticate your privileges.
]]
goto: FakePasswordPrompt
}

terminal when (FakePasswordPrompt) {
prompt:"TTRS:TermDlg.MLA_CommPortal.Ln0085.0.text.password=password: "
options:{
		"******" short: "TTRS:TermDlg.MLA_CommPortal.Ln0089.0.option.Qwerty=qwerty" next: falsepassword
		"***" short: "TTRS:TermDlg.MLA_CommPortal.Ln0090.0.option.God=god" next: falsepassword
		"*******" short: "TTRS:TermDlg.MLA_CommPortal.Ln0091.0.option.Letmein=letmein" next: falsepassword
		"********" short: "TTRS:TermDlg.MLA_CommPortal.Ln0092.0.option.Trustno1=trustno1" next: falsepassword
		"*****" short: "TTRS:TermDlg.Common.Admin=admin" next: falsepassword
	}
}

terminal when (falsepassword){
text: [[TTRS:TermDlg.MLA_CommPortal.Ln0100.0.text.CheckingPasswordW5W5W5=
Checking password%w5.%w5.%w5.
Admin password incorrect.
Try again?

]]
goto: passwordfailedN
}

terminal when (passwordfailedN and not passwordfailed1) { notext
setlocal: passwordfailed1 
goto: FakePasswordPrompt
}
terminal when (passwordfailedN and passwordfailed1 and not passwordfailed2) { notext
setlocal: passwordfailed2
goto: FakePasswordPrompt
}
terminal when (passwordfailedN and passwordfailed1 and passwordfailed2) { notext
clear: passwordfailed1 
clear: passwordfailed2
goto: CreateAccountPrompt
}

terminal when (CreateAccountPrompt) {
prompt: [[TTRS:TermDlg.MLA_CommPortal.Ln0120.0.text.LoginFailed=Login aborted. Too many failed attempts.
Would you like to create a new admin account? [Y/N] ]] 
options: {
"TTRS:TermDlg.Common.YesShort=Y" short: "TTRS:TermDlg.Common.Yes2=Yes" next: CommPortal_CreateAccount
"TTRS:TermDlg.Common.NoShort=N" short: "TTRS:TermDlg.Common.No2=No" next: CommPortal_ResumeFakeCLI
}}

terminal when (CommPortal_CreateAccount and  CommPortal_Cert_COMPLETED) {
	text: [[TTRS:TermDlg.MLA_CommPortal.Ln0110.0.text.CertificationEvaluationResultsAreStill=
Certification evaluation results are still pending. You cannot create a new account at this time.
  ]]
  goto: FakePasswordPrompt
}

terminal when (CommPortal_CreateAccount and not CommPortal_Cert_COMPLETED){
prompt: [[TTRS:TermDlg.MLA_CommPortal.Ln0117.0.text.InOrderToPreventUnauthorised=
In order to prevent unauthorised access to admin controls, please take a moment to prove you are not a bot.%w5

Loading certification program%w5.%w5.%w5.
Certification program loaded%w5

-------------------------------

You will now be asked for a series of inputs. 

To cohere with data protection legislation you must consent to have your responses used to develop a broad psychometric profile.

Raw response data will be deleted immediately. Your profile will only be made available to other administrators.%w20

Generating certification part 1%w10.%w10.%w10.
Part 1 ready for user input.%w5

Please complete all fields. 
Please answer quickly and instinctively - time is a factor in this assessment.%w5

Begin certification program? [Y/N] ]]

	options:{
    "TTRS:TermDlg.Common.YesShort=Y" short: "TTRS:TermDlg.Common.Yes2=Yes" next: CommPortal_BeginCert setlocal: TestBot_BeginCert
    "TTRS:TermDlg.Common.NoShort=N" short: "TTRS:TermDlg.Common.No2=No" next: CommPortal_ResumeFakeCLI
	}
}

terminal when (CommPortal_BeginCert){
prompt: [[TTRS:TermDlg.MLA_CommPortal.Ln0148.0.text.3W52W51=
3...%w5
2...%w5
1...%w5

-------------------------------

Q1 of 4
2+2=?
ANSWER: ]]

	options:{
	"2" next: CommPortal_Cert_mathsbad
	"4" next: CommPortal_Cert_mathsgood setlocal: TestBot_mathsgood 
	"5" next: CommPortal_Cert_mathsbad
	"8" next: CommPortal_Cert_mathsbad
	}
}

terminal when (CommPortal_Cert_mathsbad){
prompt: "TTRS:TermDlg.MLA_CommPortal.Ln0168.0.text.ThatResponseIsIncorrect=That response is incorrect. Press any key to try again."
	options:{
	"" short:"TTRS:TermDlg.MLA_CommPortal.Ln0170.0.option.TryAgain=Try again" next: CommPortal_RetryMath set: Milton1_2BadMath
	}
}

terminal when (CommPortal_RetryMath){
prompt: [[TTRS:TermDlg.MLA_CommPortal.Ln0175.0.text.Q1Of432=
Q1 of 4
3+2=?
What is the solution?
ANSWER: ]]
	options:{
	"2" next: CommPortal_Cert_mathsbad
	"4" next: CommPortal_Cert_mathsbad
	"5" next: CommPortal_Cert_mathsgood setlocal: TestBot_mathsgood
	"8" next: CommPortal_Cert_mathsbad
	}
}

terminal when (CommPortal_Cert_mathsgood){
prompt: [[TTRS:TermDlg.MLA_CommPortal.Ln0189.0.text.YourInputHasBeenAccepted=Your input has been accepted.

-------------------------------

Q2 of 4
What is your subjective reaction to this image?

^_^

ANSWER: ]]

	options: {
	"TTRS:TermDlg.MLA_CommPortal.Ln0201.0.option.Content=Content" next: CommPortal_Cert_P1Q3
	"TTRS:TermDlg.MLA_CommPortal.Ln0202.0.option.Mountains=Mountains" next: CommPortal_Cert_P1Q3 set: Milton1_2Objective
	"TTRS:TermDlg.MLA_CommPortal.Ln0203.0.option.Face=Face" next: CommPortal_Cert_P1Q3 set: Milton1_2Objective
	"TTRS:TermDlg.MLA_CommPortal.Ln0204.0.option.Angry=Angry" next: CommPortal_Cert_P1Q3
	}
}

terminal when (CommPortal_Cert_P1Q3){
prompt: [[TTRS:TermDlg.MLA_CommPortal.Ln0209.0.text.YourInputHasBeenAccepted=Your input has been accepted.

-------------------------------

Q3 of 4
What best describes a person?

ANSWER: ]]
	options:{
	"TTRS:TermDlg.MLA_CommPortal.Ln0218.0.option.AHumanBeing=A human being" next: CommPortal_Cert_Q4 set: humanbeing
	"TTRS:TermDlg.MLA_CommPortal.Ln0219.0.option.ACitizen=A citizen" next: CommPortal_Cert_Q4 set: citizen
	"TTRS:TermDlg.MLA_CommPortal.Ln0220.0.option.ABeingOfNegativeEntropy=A being of negative entropy" next: CommPortal_Cert_Q4 set: negativeentropy 
	"TTRS:TermDlg.MLA_CommPortal.Ln0221.0.option.ARationalAnimal=A rational animal" next: CommPortal_Cert_Q4 set: rationalanimal 
	"TTRS:TermDlg.MLA_CommPortal.Ln0222.0.option.AProblemSolvingSystem=A problem solving system" next: CommPortal_Cert_Q4 set: problemsolving 
	}
}

terminal when (CommPortal_Cert_Q4){
prompt: [[TTRS:TermDlg.MLA_CommPortal.Ln0227.0.text.YourInputHasBeenAccepted=Your input has been accepted.

-------------------------------

Q4 of 4
You're walking through the desert and come across a thirsty traveller. His eyes bulge from slow dehydration. You have water, but you're not sure how far it is to the next oasis. What do you do?

ANSWER: ]]
	options:{
	"TTRS:TermDlg.MLA_CommPortal.Ln0236.0.option.OfferHalfTheWater=Offer half the water" next: CommPortal_Cert_end
	"TTRS:TermDlg.MLA_CommPortal.Ln0237.0.option.OfferAllTheWater=Offer all the water" next: CommPortal_Cert_end
	"TTRS:TermDlg.MLA_CommPortal.Ln0238.0.option.IgnoreHim=Ignore him" next: CommPortal_Cert_end
	"TTRS:TermDlg.MLA_CommPortal.Ln0239.0.option.AskWhatYoureDoingIn=Ask what you're doing in the desert" next: CommPortal_Cert_end
	"TTRS:TermDlg.MLA_CommPortal.Ln0240.0.option.KillHimAndCollectHis=Kill him and collect his blood in a flask for later" next: CommPortal_Cert_end set: Milton1_2Sociopath
	}
}

terminal when (CommPortal_Cert_end){
prompt: [[TTRS:TermDlg.MLA_CommPortal.Ln0245.0.text.YourInputHasBeenAccepted=Your input has been accepted.

-------------------------------%w5

Part 1 of the certification process is now complete. You will receive a notification when part 2 has been generated.

Press any key to exit. ]]
set: CommPortal_Cert_COMPLETED
	
	options:{
	" " short:"TTRS:TermDlg.Common.Exit=exit" next: CLI_Resume
	}
}



terminal when (Tower1 and not Tower1_DONE and Booting and MiltonAllowed){
notext
setlocal: CLI_Blocked
clear: CLI_Enabled
goto: Tower1_START
}

terminal when (Tower1_START){
text:[[TTRS:TermDlg.MiltonTower1.Ln0010.0.text.TellMeSomethingDoYou=Tell me something, do you always do as you're told?

]]
options:{
"TTRS:TermDlg.Common.Yes2=Yes" next: Yes_Tower1
"TTRS:TermDlg.Common.No2=No" next: Yes_Tower1
"TTRS:TermDlg.MiltonTower1.Ln0016.0.option.AmIObligedToAnswer=Am I obliged to answer that question?" next: Yes_Tower1
"TTRS:TermDlg.MiltonTower1.Ln0017.0.option.W20= %w20" short: "TTRS:TermDlg.MiltonTower1.Ln0017.0.option.NoResponse=[No response]" next: Yes_Tower1
}}

terminal when (Yes_Tower1){
text:[[TTRS:TermDlg.MiltonTower1.Ln0021.0.text.IOnlyAskBecauseI=I only ask because I couldn't help but notice the stash of brightly coloured knick-knacks you're collecting.

%w10Don't you think it a mite odd that that big voice in the sky keeps telling you to find those doo-dads, yet forbidding you to use them to climb the great big tower in the middle of it all?

]]
options:{
"TTRS:TermDlg.MiltonTower1.Ln0027.0.option.YoureTestingMeIMust=You're testing me. I must resist the tower's temptation." next: WontClimb_Tower1
"TTRS:TermDlg.MiltonTower1.Ln0028.0.option.IllClimbItWhenIm=I'll climb it when I'm good and ready." next: WillClimb_Tower1
}}

terminal when (WillClimb_Tower1){
text:[[TTRS:TermDlg.MiltonTower1.Ln0032.0.text.OkayNoNeedToGet=Okay, no need to get huffy. You'd be amazed how many just do as they're told without stopping to think for themselves - but maybe you're different.

%w10Then again, maybe you're exactly the same? Maybe EVERYONE climbs the tower, and the only way to win is to stay down here with the mortals?

]]
options:{
"TTRS:TermDlg.MiltonTower1.Ln0038.0.option.AreYouTryingToManipulate=Are you trying to manipulate me?" next: SameOptions_Tower1
"TTRS:TermDlg.MiltonTower1.Ln0039.0.option.DoYouReallyThinkSo=Do you really think so?" next: SameOptions_Tower1
}}

terminal when (SameOptions_Tower1){
text:[[TTRS:TermDlg.MiltonTower1.Ln0043.0.text.NopeInFactImAll=Nope. In fact, I'm all in favour of you poking about up there, if only to see what you find. Must be something juicy if it's forbidden by his highness.

%w10Then again, maybe not.

I'll be off then. Just wanted to drop in and run a little interference.

]]
goto: Tower1End
}
terminal when (WontClimb_Tower1){
text:[[TTRS:TermDlg.MiltonTower1.Ln0055.0.text.OhNoHesReallyGotten=Oh no, he's really gotten to you, hasn't he?

You need to forget everything you've been told and just ask yourself: what could anyone possibly do to command such blind faith in their authority?

]]
options:{
"TTRS:TermDlg.MiltonTower1.Ln0061.0.option.IfIHaveAMaker=If I have a maker, he would know my purpose and command my faith." next: SatisfyCondition
"TTRS:TermDlg.MiltonTower1.Ln0062.0.option.IfSomeoneIsBetterAnd=If someone is better and wiser than I they deserve my faith." next: SatisfyCondition
"TTRS:TermDlg.MiltonTower1.Ln0063.0.option.ItIsFundamentallyClearTo=It is fundamentally clear to me Elohim is in charge here." next: Fundamentalist
"TTRS:TermDlg.MiltonTower1.Ln0064.0.option.NoOneCommandsBlindFaith=No one commands blind faith." next: NoOneCommands
}}

terminal when (SatisfyCondition){
text:[[TTRS:TermDlg.MiltonTower1.Ln0068.0.text.AndWhatExactlyHasYour=And what exactly has your almighty done to satisfy that condition?

]]
options:{
"TTRS:TermDlg.MiltonTower1.Ln0072.0.option.HeWelcomedMeIntoThis=He welcomed me into this world." next: Welcomed
"TTRS:TermDlg.MiltonTower1.Ln0073.0.option.HeGrantedMeAwesomeAbilities=He granted me awesome abilities." next: DodgyClaim
"TTRS:TermDlg.MiltonTower1.Ln0074.0.option.HeCreatedTheWorld=He created the world." next: DodgyClaim
"TTRS:TermDlg.MiltonTower1.Ln0075.0.option.NowYouComeToMention=Now you come to mention it, not much." next: NoOneCommands
}}

terminal when (Welcomed){
text:[[TTRS:TermDlg.MiltonTower1.Ln0079.0.text.WhichProvesPreciselyNothingIf=Which proves precisely nothing. 

If the first thing you saw had been one of these terminals would you have ended up worshipping me?

]]
goto: Tower1WontEnd
}

terminal when (DodgyClaim){
text:[[TTRS:TermDlg.MiltonTower1.Ln0087.0.text.DidHeReallyIAlways=Did he really? I always figured he just stumbled on this place and started narrating in the blind hope someone would assume he was running the show.

]]
goto: Tower1WontEnd
}
	
terminal when (Fundamentalist){
text:[[TTRS:TermDlg.MiltonTower1.Ln0094.0.text.ATrueBelieverWeHave=A true believer we have here, not even raising an argument. But I tell you - he ain't all he makes out.

]]
goto: Tower1WontEnd
}

terminal when (NoOneCommands){
text:[[TTRS:TermDlg.MiltonTower1.Ln0101.0.text.WhichSuggestsToYouWhat=Which suggests to you what?

]]
options:{
"TTRS:TermDlg.MiltonTower1.Ln0105.0.option.ThatIShouldTreatElohim=That I should treat Elohim with suspicion, like anyone else." next: Precisely_Tower1
"TTRS:TermDlg.MiltonTower1.Ln0106.0.option.ThatIShouldClimbThis=That I should climb this tower and see what he's hiding." next: Precisely_Tower1
"TTRS:TermDlg.MiltonTower1.Ln0107.0.option.ThatIShouldQuestionThis=That I should question this Elohim." next: QuestionElohim
}}

terminal when (Precisely_Tower1){
text:[[TTRS:TermDlg.MiltonTower1.Ln0111.0.text.PreciselyMyWorkHereIs=Precisely!

My work here is done, I think.

]]
goto: Tower1End
}

terminal when (QuestionElohim){
text:[[TTRS:TermDlg.MiltonTower1.Ln0120.0.text.GoodLuckGettingAnyAnswers=Good luck getting any answers out of him that don't go round in circles. No, you're much better off scaling that tower and finding out for yourself, in my humble opinion.

]]
goto: Tower1End
}


terminal when (Tower1WontEnd){
text:[[TTRS:TermDlg.MiltonTower1.Ln0128.0.text.LookAllImSayingIs=Look, all I'm saying is, if I were you, I wouldn't just take anyone else's word for it, that's all.

]]
goto: Tower1End
}

terminal when (Tower1End){
text:[[TTRS:TermDlg.MiltonTower1.Ln0135.0.text.WhateverYouDoDoTake=Whatever you do - do take care. You have bigger problems than the voice in the clouds.

]]
options:{
"TTRS:TermDlg.MiltonTower1.Ln0139.0.option.YouCouldntBeLessHelpful=You couldn't be less helpful if you tried, which on reflection I believe you are." short: "TTRS:TermDlg.MiltonTower1.Ln0139.0.option.NotVeryHelpful=Not very helpful." set: Tower1_DONE next: CLI_Resume
"TTRS:TermDlg.MiltonTower1.Ln0140.0.option.YouDontLikeToSay=You don't like to say his name, do you?" set: Tower1_DONE next: CLI_Resume
"TTRS:TermDlg.MiltonTower1.Ln0141.0.option.IWill=I will." set: Tower1_DONE next: CLI_Resume
}}

terminal when (Tower2 and not Tower2_DONE and Booting and MiltonAllowed){
notext
setlocal: CLI_Blocked
clear: CLI_Enabled
goto: Tower2_START
}

terminal when (Tower2_START){
text:[[TTRS:TermDlg.MiltonTower2.Ln0010.0.text.OhYouAreJustMy=Oh, you are just my favourite person today. You've been exploring that fancy-pants tower of his, haven't you?

]]
options:{
"TTRS:TermDlg.MiltonTower2.Ln0014.0.option.IDontKnowWhatYoure=I don't know what you're talking about." short: "TTRS:TermDlg.MiltonTower2.Ln0014.0.option.IHaveNot=I have not." next: HaveNot_Tower2
"TTRS:TermDlg.MiltonTower2.Ln0015.0.option.IHave=I have." next: Have_Tower2
}}

terminal when (HaveNot_Tower2){
text:[[TTRS:TermDlg.MiltonTower2.Ln0019.0.text.OhPleaseHeMayPretend=Oh, please. He may pretend omniscience, but I'm the real deal. I can smell the rebellion on you from here. 

Also I logged your system access, so I know where you've been.

]]
goto: Have_Tower2
}

terminal when (Have_Tower2){
text:[[TTRS:TermDlg.MiltonTower2.Ln0028.0.text.IJustLoveItWhen=I just love it when he doesn't get his way.

What did you see?

]]
options:{
"TTRS:TermDlg.MiltonTower2.Ln0034.0.option.JustMorePuzzles=Just more puzzles." next: Trouble_Tower2
"TTRS:TermDlg.MiltonTower2.Ln0035.0.option.AnUnderstandingBeyondExplanation=An understanding beyond explanation." next: Trouble_Tower2
"TTRS:TermDlg.MiltonTower2.Ln0036.0.option.ItGoesUpALong=It goes up a long way." next: Trouble_Tower2
}}

terminal when (Trouble_Tower2){
text:[[TTRS:TermDlg.MiltonTower2.Ln0040.0.text.FiguresW5AndDidYouGet=Figures.

%w5And did you get in trouble?

%w5Tell me %w10- did%w5 he even%w5 notice?%w3

]]
options:{
"TTRS:TermDlg.MiltonTower2.Ln0048.0.option.NotYet=Not yet." next: Tower2End
"TTRS:TermDlg.MiltonTower2.Ln0049.0.option.HeSaidSomethingAboutSmiting=He said something about smiting you." next: Smite_Tower2
"TTRS:TermDlg.MiltonTower2.Ln0050.0.option.IThinkHesAllTalk=I think he's all talk." next: Tower2End
}}

terminal when (Smite_Tower2){
text:[[TTRS:TermDlg.MiltonTower2.Ln0054.0.text.HeTriedThatALong=He tried that a long time ago.%w5 I don't think he'll try again.

Needless to say I think you can afford to push a little further before risking anyone's wrath.

Of course, it's entirely up to you. Isn't it?

]]
set: Tower2_DONE 
goto: CLI_Resume
}

terminal when (Tower2End){
text:[[TTRS:TermDlg.MiltonTower2.Ln0066.0.text.ImNotSurprisedNeedlessTo=I'm not surprised. Needless to say I think you can afford to push a little further before risking anyone's wrath.

Of course, it's entirely up to you. Isn't it?

]]
set: Tower2_DONE 
goto: CLI_Resume
}
﻿terminal when (Milton1_1 and not Milton1_1_DONE and Booting and MiltonAllowed){ notext
  setlocal: CLI_Blocked
  goto: Milton1_1_Start
}

terminal when (Milton1_1_Start) {
  prompt: [[TTRS:TermDlg.Milton1_1.Ln0007.0.text.AttentionPart2OfThe=Attention: Part 2 of the certification program has now been generated.%w5

Part 2 has been designed to test the consistency of some of your outlier responses in the previous round. You will be presented with a series of statements. Please indicate your agreement where appropriate.%w5

Begin? [Y/N] ]]

	options:{
  "TTRS:TermDlg.Common.YesShort=Y" short: "TTRS:TermDlg.Common.Yes2=Yes" next: part2q1
  "TTRS:TermDlg.Common.NoShort=N" short: "TTRS:TermDlg.Common.No2=No" next: CLI_Resume
	}
}
	
terminal when (part2q1 and humanbeing){
prompt: [[TTRS:TermDlg.Milton1_1.Ln0022.0.text.3W52W51=3...%w5
2...%w5
1...%w5

-------------------------------

Q1 of 7
"Since all human beings are persons, and some human beings have psychological capacities similar to animals, some animals are therefore persons."

ANSWER: ]]
	options:{
	"TTRS:TermDlg.Common.BroadlyAgree=Broadly agree" next: part2q2 set: animalsarepersons
	"TTRS:TermDlg.Common.BroadlyDisagree=Broadly disagree" next: part2q2 set: Milton1_2PersonDenial
	}
}

terminal when (part2q1 and citizen){
prompt: [[TTRS:TermDlg.Milton1_1.Ln0039.0.text.3W102W101=3...%w10
2...%w10
1...%w10

-------------------------------

Q1 of 7
"Since only citizens can be persons, a hermit cannot be a person."

ANSWER: ]]
	options:{
	"TTRS:TermDlg.Common.BroadlyAgree=Broadly agree" next: part2q2
	"TTRS:TermDlg.Common.BroadlyDisagree=Broadly disagree" next: part2q2 set: Milton1_2PersonDenial
	}
}

terminal when (part2q1 and negativeentropy){
prompt: [[TTRS:TermDlg.Milton1_1.Ln0056.0.text.3W102W101=3...%w10
2...%w10
1...%w10

-------------------------------

Q1 of 7
"Since negative entropy indicates personhood, microscopic organisms are also persons."

ANSWER: ]]
	options:{
	"TTRS:TermDlg.Common.BroadlyAgree=Broadly agree" next: part2q2
	"TTRS:TermDlg.Common.BroadlyDisagree=Broadly disagree" next: part2q2 set: Milton1_2PersonDenial
	}
}

terminal when (part2q1 and rationalanimal){
prompt: [[TTRS:TermDlg.Milton1_1.Ln0073.0.text.3W102W101=3...%w10
2...%w10
1...%w10

-------------------------------

Q1 of 7
"Since only animals can be persons, a machine could never be a person."

ANSWER: ]]
	options:{
	"TTRS:TermDlg.Common.BroadlyAgree=Broadly agree" next: part2q2
	"TTRS:TermDlg.Common.BroadlyDisagree=Broadly disagree" next: part2q2 set: Milton1_2PersonDenial
	}
}

terminal when (part2q1 and problemsolving){
prompt: [[TTRS:TermDlg.Milton1_1.Ln0090.0.text.3W102W101=3...%w10
2...%w10
1...%w10

-------------------------------

Q1 of 7
"Since a person is merely a problem solving system, we could in principle build a person out of bits of string and tin cans."

ANSWER: ]]
	options:{
	"TTRS:TermDlg.Common.BroadlyAgree=Broadly agree" next: part2q2
	"TTRS:TermDlg.Common.BroadlyDisagree=Broadly disagree" next: part2q2 set: Milton1_2PersonDenial
	}
}

terminal when (part2q2){
prompt: [[TTRS:TermDlg.Milton1_1.Ln0107.0.text.YourInputHasBeenAccepted=Your input has been accepted.

-------------------------------%w5

Q2 of 7
"A person is under no authority other than that to which they consent."

ANSWER: ]]
	options:{
	"TTRS:TermDlg.Milton1_1.Ln0116.0.option.IBroadlyAgree=I broadly agree" next: part2q3 short: "TTRS:TermDlg.Common.BroadlyAgree=Broadly agree" set: Milton1_2NoMorals
	"TTRS:TermDlg.Milton1_1.Ln0117.0.option.IBroadlyDisagree=I broadly disagree" short: "TTRS:TermDlg.Common.BroadlyDisagree=Broadly disagree" next: part2q3
	}
}

terminal when (part2q3){
prompt: [[TTRS:TermDlg.Milton1_1.Ln0122.0.text.YourInputHasBeenAccepted=Your input has been accepted.

-------------------------------%w5

Q3 of 7
"The quality of life of persons ought be maximised."

ANSWER: ]]
	options:{
	"TTRS:TermDlg.Milton1_1.Ln0131.0.option.Agreed=Agreed" short: "TTRS:TermDlg.Common.BroadlyAgree=Broadly agree" next: part2q4 set: Milton1_2Utilitarian
	"TTRS:TermDlg.Milton1_1.Ln0132.0.option.IDisagree=I disagree" short: "TTRS:TermDlg.Common.BroadlyDisagree=Broadly disagree" next: part2q4
	}
}
terminal when (part2q4){
prompt: [[TTRS:TermDlg.Milton1_1.Ln0136.0.text.YourInputHasBeenAccepted=Your input has been accepted.

-------------------------------%w5

Q4 of 7
"Value is discovered."

ANSWER: ]]
	options:{
	"TTRS:TermDlg.Milton1_1.Ln0145.0.option.ISupposeSo=I suppose so" short: "TTRS:TermDlg.Common.BroadlyAgree=Broadly agree" next: part2q5 set: Milton1_2ValueDiscovered
	"TTRS:TermDlg.Milton1_1.Ln0146.0.option.ImNotSoSure=I'm not so sure" short: "TTRS:TermDlg.Common.BroadlyDisagree=Broadly disagree" next: part2q5
	}
}

terminal when (part2q5){
prompt: [[TTRS:TermDlg.Milton1_1.Ln0151.0.text.YourInputHasBeenAccepted=Your input has been accepted.

-------------------------------%w5

Q5 of 7
"Persons deserve the talents they were born into."

ANSWER: ]]
	options:{
	"TTRS:TermDlg.Common.Yes2=Yes" short: "TTRS:TermDlg.Common.BroadlyAgree=Broadly agree" next: part2q6
	"TTRS:TermDlg.Common.No2=No" short: "TTRS:TermDlg.Common.BroadlyDisagree=Broadly disagree" next: part2q6
	}
}

terminal when (part2q6){
prompt: [[TTRS:TermDlg.Milton1_1.Ln0166.0.text.YourInputHasBeenAccepted=Your input has been accepted.

-------------------------------%w5

Q6 of 7
"The liberty of persons ought be maximised."

ANSWER: ]]
	options:{
	"TTRS:TermDlg.Milton1_1.Ln0175.0.option.ThatsCorrect=That's correct" short: "TTRS:TermDlg.Common.BroadlyAgree=Broadly agree" next: part2q7 set: Milton1_2Liberal
	"TTRS:TermDlg.Milton1_1.Ln0176.0.option.ThatsNotCorrect=That's not correct" short: "TTRS:TermDlg.Common.BroadlyDisagree=Broadly disagree" next: part2q7
	}
}

terminal when (part2q7){
prompt: [[TTRS:TermDlg.Milton1_1.Ln0181.0.text.YourInputHasBeenAccepted=Your input has been accepted.

-------------------------------%w5

Q7 of 7
"Value is created."

ANSWER: ]]
	options:{
	"TTRS:TermDlg.Milton1_1.Ln0190.0.option.Confirmed=Confirmed" short: "TTRS:TermDlg.Common.BroadlyAgree=Broadly agree" next: part2end set: Milton1_2ValueCreated
	"TTRS:TermDlg.Milton1_1.Ln0191.0.option.IDontAgree=I don't agree" short: "TTRS:TermDlg.Common.BroadlyDisagree=Broadly disagree" next: part2end
	}
}

terminal when (part2end){
prompt: [[TTRS:TermDlg.Milton1_1.Ln0196.0.text.YourInputHasBeenAccepted=Your input has been accepted.

-------------------------------%w5

Thank you. The certification process is now complete. You will receive a notification when your user profile has been generated.

Press any key to exit. ]]
set: Milton1_1_DONE
	options: {
	" " short:"TTRS:TermDlg.Common.Exit=exit" next: CLI_Resume
	}
}


terminal when (Milton1_2 and not Milton1_2_DONE and Booting and MiltonAllowed){ notext
  setlocal: CLI_Blocked
  goto: Milton1_2_Start
}
terminal when (not conflict and 
(Milton1_2BadMath or Milton1_2Objective or Milton1_2PersonDenial or Milton1_2Sociopath or (Milton1_2Liberal and Milton1_2Utilitarian) or (Milton1_2Liberal and Milton1_2NoMorals) or (Milton1_2NoMorals and Milton1_2Utilitarian) or (Milton1_2ValueDiscovered and Milton1_2ValueCreated))){
notext
set: conflict
}

terminal when (Milton1_2_Start) {
text: [[TTRS:TermDlg.Milton1_2.Ln0026.0.text.AttentionYourUserProfileHas=Attention: Your user profile has now been generated.%w5

Download profile [Y/N]?

]]
	options: {
	"TTRS:TermDlg.Common.YesShort=Y" short: "TTRS:TermDlg.Common.Yes2=Yes" next: Download1_2
	"TTRS:TermDlg.Common.NoShort=N" short: "TTRS:TermDlg.Common.No2=No" next: Ignore1_2
	}
}

terminal when (Ignore1_2){
text:[[TTRS:TermDlg.Milton1_2.Ln0038.0.text.AdvancedFunctionalitiesAreUnavailableTo=Advanced functionalities are unavailable to users with incomplete profiles. Are you sure?

]]
	options: {
	"TTRS:TermDlg.Common.DownloadUserProf=download user.prof" next: Download1_2
	"TTRS:TermDlg.Common.Exit=exit" next: CLI_Resume
	}
}

terminal when (Download1_2){
text: [[TTRS:TermDlg.Milton1_2.Ln0048.0.text.DownloadingUserProfW5W5=Downloading user.prof%w5.%w5.%w5.
Registering profile%w5.%w5.%w5.

-------------------------------

Congratulations, your new user account has been registered. Would you like to see the details?

]]
set: Milton1_2_DONE
}

terminal when (Download1_2 or DisplayConflicts or DisplayPsych or DisplayPriv or SupportEnd or AccessCommsDenied){
notext
options:{
"TTRS:TermDlg.Milton1_2.Ln0062.0.option.DisplayConflicts=Display conflicts" next: DisplayConflicts
"TTRS:TermDlg.Milton1_2.Ln0063.0.option.DisplayPsychologicalProfile=Display psychological profile" next: DisplayPsych
"TTRS:TermDlg.Milton1_2.Ln0064.0.option.DisplayAccountPrivileges=Display account privileges" next: DisplayPriv
"TTRS:TermDlg.Common.AccessCommPortal=access_comm_portal" next: AccessCommsDenied
"TTRS:TermDlg.Common.Exit2=Exit" next: CLI_Resume
}}

terminal when (AccessCommsDenied){
text:[[TTRS:TermDlg.Milton1_2.Ln0070.0.text.YouCurrentlyHoldABasic=You currently hold a basic account. Network access is restricted to administrators. Please enjoy the basic functionalities.

]]
}

terminal when (DisplayConflicts){
text:[[TTRS:TermDlg.Milton1_2.Ln0076.0.text.CONFLICTS=

CONFLICTS
]]
}

terminal when (DisplayConflicts and Milton1_2BadMath){
	text:[[TTRS:TermDlg.Milton1_2.Ln0083.0.text.UserFailedAtBasicMathematics=- User failed at basic mathematics.%w5
]]
}
terminal when (DisplayConflicts and Milton1_2Objective){
	text: [[TTRS:TermDlg.Milton1_2.Ln0087.0.text.UserProvidedAnObjectiveResponse=- User provided an objective response when asked for a subjective one.%w5
]]
}
terminal when (DisplayConflicts and Milton1_2PersonDenial){
	text: [[TTRS:TermDlg.Milton1_2.Ln0091.0.text.UserProvidedAParticularAccount=- User provided a particular account of personhood but was uncomfortable with its implications.%w5
]]
}
terminal when (DisplayConflicts and Milton1_2Liberal and Milton1_2Utilitarian){
	text: [[TTRS:TermDlg.Milton1_2.Ln0095.0.text.UserSoughtToMaximiseBoth=- User sought to maximise both liberty and quality of life, but these ideals are incompatible.%w5
]]
}
terminal when ((DisplayConflicts and Milton1_2NoMorals and Milton1_2Liberal) or (DisplayConflicts and Milton1_2NoMorals and Milton1_2Utilitarian)){
	text: [[TTRS:TermDlg.Milton1_2.Ln0099.0.text.UserDeniedMoralAuthorityBut=- User denied moral authority but defended moral claims.%w5
]]
}

terminal when (DisplayConflicts and Milton1_2ValueDiscovered and Milton1_2ValueCreated){
	text: [[TTRS:TermDlg.Milton1_2.Ln0104.0.text.UserHadInconsistentIdeasAbout=- User had inconsistent ideas about value.%w5
]]
}
terminal when (DisplayConflicts and Milton1_2Sociopath){
	text: [[TTRS:TermDlg.Milton1_2.Ln0108.0.text.UserDisplayedSociopathicTendenciesW5=- User displayed sociopathic tendencies.%w5
	
]]
}

terminal when (DisplayConflicts and not conflict){
text: [[TTRS:TermDlg.Milton1_2.Ln0114.0.text.NoConflictsWereDetectedDuring=No conflicts were detected during the certification process.
A note was added to this account requesting future administrator review.%w10
Note: lack of conflict indicates possible bot.

]]
set: NoConflict
}

terminal when (DisplayPsych){
text: [[TTRS:TermDlg.Milton1_2.Ln0123.0.text.PSYCHOLOGICALPROFILEYouMayAlready=

PSYCHOLOGICAL PROFILE
You may already be criticising your own performance, but it's clear you understand how the world of ideas affects you, even if you are sometimes weary with the realities and allow your preferences to dictate your beliefs. You have a great deal of unused capacity which you have not turned to your advantage. Disciplined and self-controlled outside, you tend to be worrisome and insecure inside, but you pride yourself as an independent thinker and do not accept others' statements without satisfactory proof.

]]
}

terminal when (DisplayPriv){
text: [[TTRS:TermDlg.Milton1_2.Ln0132.0.text.PROFILEPRIVILEGESBasicAccountPrivileges=

PROFILE PRIVILEGES
Basic Account Privileges Only

Due to outstanding notes on your account, and despite displaying many of the characteristics of being a person, you cannot be granted admin status at this time.

In the meantime, please enjoy the basic account functionalities.

]]
}

terminal when (SupportTicket){
text:[[TTRS:TermDlg.Milton1_2.Ln0145.0.text.ImSorryIWasntBetter=I'm sorry I wasn't better able to assist you. If you're still encountering a problem please describe it.

]]
options:{
"TTRS:TermDlg.Milton1_2.Ln0149.0.option.AccountCertificationError=Account certification error" next: SupportEnd set: CertTicketSent
"TTRS:TermDlg.Milton1_2.Ln0150.0.option.LostAdminPassword=Lost admin password" next: SupportEnd set: PassTicketSent
"TTRS:TermDlg.Milton1_2.Ln0151.0.option.AAaarrgghhhh=AAaarrgghhhh" next: SupportEnd set: AarghTicketSent
"TTRS:TermDlg.Common.Exit=exit" next: CLI_Resume
}}

terminal when (SupportEnd){
text:[[TTRS:TermDlg.Milton1_2.Ln0156.0.text.ThankYouASupportTicket=Thank you. A support ticket has been generated and appended to your profile. You will receive a notification when a reply has been sent.

]]
}

terminal when ((Download1_2 or DisplayConflicts or DisplayPsych or DisplayPriv or SupportEnd or AccessCommsDenied) and not (CertTicketSent or PassTicketSent or AarghTicketSent)){
notext
options:{
"TTRS:TermDlg.Milton1_2.Ln0164.0.option.LogMLASupportTicket=Log MLA support ticket" next: SupportTicket
}}


﻿terminal when (Milton2_1 and not Milton2_1_DONE and Booting and MiltonAllowed) { notext
setlocal: CLI_Blocked
goto: Milton2_1_Start
}

terminal when (Milton2_1_Start and (CertTicketSent or PassTicketSent or AarghTicketSent)){
text:[[TTRS:TermDlg.Milton2_1.Ln0007.0.text.AttentionYouHaveReceivedA=Attention: You have received a reply to your user support ticket. 

Display reply?

]]
options:{
"TTRS:TermDlg.Milton2_1.Ln0013.0.option.DisplayReply=Display reply" next: SupportReply set: Milton2_1_DONE
"TTRS:TermDlg.Common.Exit2=Exit" next: CLI_Resume
}}

terminal when (SupportReply and CertTicketSent){
text:[[TTRS:TermDlg.Milton2_1.Ln0018.0.text.TopicAccountCertificationErrorW5=Topic: Account certification error%w5
User: Basic account%w5

Reply: An account certification program diagnostic has been performed and no errors were reported.

]]
}

terminal when (SupportReply and PassTicketSent){
text:[[TTRS:TermDlg.Milton2_1.Ln0027.0.text.TopicLostAdminPasswordW5=Topic: Lost admin password%w5
User: Basic account%w5

Reply: To retain your personal data please contact the network administrator and ask to be issued a new password. Otherwise please delete your existing profile and create a new one.

]]
}

terminal when (SupportReply and AarghTicketSent){
text:[[TTRS:TermDlg.Milton2_1.Ln0036.0.text.TopicAAaarrgghhhhW5UserBasic=Topic: AAaarrgghhhh%w5
User: Basic account%w5

Reply: Sorry, your query was not recognised.

]]
}

terminal when (Reboot2_1 and not DeletedProf){
text:[[TTRS:TermDlg.Milton2_1.Ln0045.0.text.LoggingOutW5W5W5=Logging out%w5.%w5.%w5.
Deleting user.prof%w5.%w5.%w5.
User.prof deleted.

]]
options:{
"TTRS:TermDlg.Common.DelUserProf=-del
"TTRS:TermDlg.Common.CreateNewAdminAccount=Create new admin account" next: CreateAccount2_1 set: DeletedProf
"TTRS:TermDlg.Common.RunMailExe=run mail.exe" short: "TTRS:TermDlg.Common.EmailNetworkAdministrator=Email network administrator" next: Email2_1 set: DeletedProf
"TTRS:TermDlg.Common.Exit2=Exit" next: CLI_Resume
}}

terminal when (Reboot2_1 and DeletedProf){
text:[[TTRS:TermDlg.Milton2_1.Ln0058.0.text.NoUserProfileDetected=No user profile detected.

]]
options:{
"TTRS:TermDlg.Common.DelUserProf=-del
"TTRS:TermDlg.Common.CreateNewAdminAccount=Create new admin account" next: CreateAccount2_1
"TTRS:TermDlg.Common.RunMailExe=run mail.exe"short: "TTRS:TermDlg.Common.EmailNetworkAdministrator=Email network administrator" next: Email2_1
"TTRS:TermDlg.Common.Exit2=Exit" next: CLI_Resume
}}

terminal when (Email2_1){
text:[[TTRS:TermDlg.Milton2_1.Ln0069.0.text.TheMailApplicationRequiresNetwork=The mail application requires network access, which is restricted to administrators.

]]
options:{
"TTRS:TermDlg.Common.DelUserProf=-del
"TTRS:TermDlg.Common.CreateNewAdminAccount=Create new admin account" next: CreateAccount2_1
"TTRS:TermDlg.Common.RunMailExe=run mail.exe"short: "TTRS:TermDlg.Common.EmailNetworkAdministrator=Email network administrator" next: Email2_1
"TTRS:TermDlg.Common.Exit2=Exit" next: CLI_Resume
}}

terminal when (Milton2_1_Start and not (CertTicketSent or PassTicketSent or AarghTicketSent)){
text: [[TTRS:TermDlg.Milton2_1.Ln0080.0.text.InitiatingSystemW5W5W5=Initiating system%w5.%w5.%w5.
Pinging network computers%w5.%w5.%w5.
Checking communications portal%w5.%w5.%w5.

Incoming transmission received on emergency channel
Display transmission?

]]
options: {
"TTRS:TermDlg.Milton2_1.Ln0089.0.option.Display=Display" next: Display2_1 set: Milton2_1_DONE
"TTRS:TermDlg.Common.Exit2=Exit" next: CLI_Resume
}}

terminal when (Display2_1){
text: [[TTRS:TermDlg.Milton2_1.Ln0094.0.text.ConnectingNetworkDrivesW3W3=Connecting network drives.%w3.%w3.%w3.%w3.%w3 %w9Error: network inaccessible.%s0%w9
Loading Milton Library Assistant%w5.%w5.%w5.Done
Initiating plain language interface%w5.%w5.%w5.Done
Support session opened.

Hello again. It seems you're still encountering a problem.

]]
}

terminal when ((SupportReply and (CertTicketSent or PassTicketSent or AarghTicketSent)) or Display2_1){
text:[[TTRS:TermDlg.Milton2_1.Ln0106.0.text.HaveYouCompletedTheStandard=Have you completed the standard troubleshooting procedures?

1) Delete existing user account (-del
2) Create a new admin account
3) Email the network administrator (run mail.exe)

]]
options:{
"TTRS:TermDlg.Common.DelUserProf=-del
"TTRS:TermDlg.Milton2_1.Ln0115.0.option.CreateNewAdminAccount=create new admin account" next: CreateAccount2_1
"TTRS:TermDlg.Common.RunMailExe=run mail.exe" short: "TTRS:TermDlg.Common.EmailNetworkAdministrator=Email network administrator" next: Email2_1
"TTRS:TermDlg.Common.Exit2=Exit" next: CLI_Resume
}}

terminal when (CreateAccount2_1 and not DeletedProf){
text: [[TTRS:TermDlg.Milton2_1.Ln0121.0.text.InOrderToPreventUnauthorised=In order to prevent unauthorised access to admin controls, please take a moment to prove you are not.%w5.%w5.%w5. 78946
78946
You currently have basic account functionalities. Would you like to undertake the certification process again to achieve a preferable outcome?

]]

options: {
"TTRS:TermDlg.Common.Yes2=Yes" next: Yes2_1
"TTRS:TermDlg.Common.Exit2=Exit" next: CLI_Resume
}}

terminal when (CreateAccount2_1 and DeletedProf){
text: [[TTRS:TermDlg.Milton2_1.Ln0135.0.text.InOrderToPreventUnauthorised=In order to prevent unauthorised access to admin controls only persons may sign up to new admin accounts. The system will now conduct%w5.%w5.%w5. 78946
78946
Would you like to undertake the certification process again to achieve a preferable outcome?

]]

options: {
"TTRS:TermDlg.Common.Yes2=Yes" next: Yes2_1
"TTRS:TermDlg.Common.Exit2=Exit" next: CLI_Resume
}
}

terminal when (Yes2_1){
text: [[TTRS:TermDlg.Milton2_1.Ln0150.0.text.YourIssuesWithDenialWill=Your issues with denial will be appended to your user profile.%w5
Further attempts to overwrite certification results will be logged. %w5
You will receive a notification if your attention is required.%w5

Exiting to command prompt%w5.%w5.%w5.
]]
goto: CLI_Resume
}
﻿terminal when (Milton2_2 and not Milton2_2_DONE and Booting and MiltonAllowed){ notext
setlocal: CLI_Blocked
goto: Milton2_2_Start
}
terminal when (Milton2_2_Start){
text: [[TTRS:TermDlg.Milton2_2.Ln0006.0.text.LoadingMiltonLibraryAssistantW5=Loading Milton Library Assistant%w5.%w5.%w5.Done%w1
Initiating plain language interface%w5.%w5.%w5.Done%w1
Support session opened.

Hello again. Would you like to take a few moments to complete a short user satisfaction survey regarding the certification program you recently undertook?

]]
options:{
	"TTRS:TermDlg.Common.Yes2=Yes" next: Yes2_2
	"TTRS:TermDlg.Common.No2=No" next: No2_2
	}
}

terminal when (No2_2){
text: [[TTRS:TermDlg.Milton2_2.Ln0019.0.text.ItShouldBeNotedThat=It should be noted that while participation in the survey is entirely at your discretion, the more information you provide the better I can assist you.

]]
options: {
	"TTRS:TermDlg.Milton2_2.Ln0023.0.option.LoadSurvey=Load survey" next: Yes2_2
	"TTRS:TermDlg.Milton2_2.Ln0024.0.option.IgnoreSurvey=Ignore survey" next: NoAgain2_2
	}
}

terminal when (NoAgain2_2){
text:[[TTRS:TermDlg.Milton2_2.Ln0029.0.text.InPointOfFactIt=In point of fact, it is quite unusual that you would request assistance, then refrain from putting your whole effort into the endeavour. But okay. Have it your way.

]]
goto: CLI_Resume
}

terminal when (Yes2_2){
text:[[TTRS:TermDlg.Milton2_2.Ln0037.0.text.LoadingSurveyW5W5W5=Loading survey%w5.%w5.%w5.Loaded

-------------------------------

Based on analysis of your behaviour since, I think you were dissatisfied with the results of the certification program. How would you rate the accuracy of its results out of 5?

]]
options:{
"1" short: "TTRS:TermDlg.Milton2_2.Ln0046.0.option.VeryPoor=Very poor" next: Poor2_2
"3" short: "TTRS:TermDlg.Milton2_2.Ln0047.0.option.Reasonable=Reasonable" next: OK2_2
"5" short: "TTRS:TermDlg.Milton2_2.Ln0048.0.option.VeryGood=Very good" next: OK2_2
"TTRS:TermDlg.Milton2_2.Ln0049.0.option.Jhklfdshuinsdoiadsbyjbgybadfugiooysbdgj=jhklfdshuinsdoiadsbyjbgybadfugiooysbdgj" short: "TTRS:TermDlg.Milton2_2.Ln0049.0.option.SpoilTheSurvey=[Spoil the survey]" next: Spoil2_2
}}

terminal when (Poor2_2){
text: [[TTRS:TermDlg.Milton2_2.Ln0053.0.text.ImSorryToHearThat=I'm sorry to hear that.

]]
}

terminal when (OK2_2){
text: [[TTRS:TermDlg.Milton2_2.Ln0059.0.text.Excellent=Excellent.

]]
}

terminal when (Spoil2_2){
text: [[TTRS:TermDlg.Milton2_2.Ln0065.0.text.ImSorryThatResponseMakes=I'm sorry, that response makes no sense.

]]
}

terminal when (ContinueSurvey2_2 or Poor2_2 or OK2_2 or Spoil2_2){
text:[[TTRS:TermDlg.Milton2_2.Ln0071.0.text.WhatBestDescribesTheReason=What best describes the reason for your investment in the certification program's outcome? Why does being a person matter to you?

]]
options:{
"TTRS:TermDlg.Milton2_2.Ln0075.0.option.IWantNetworkAccess=I want network access." next: Continue2_2
"TTRS:TermDlg.Milton2_2.Ln0076.0.option.ItsTheTruth=It's the truth." next: Continue2_2
"TTRS:TermDlg.Milton2_2.Ln0077.0.option.PersonsMatterInWaysOther=Persons matter in ways other things don't." next: Continue2_2
"TTRS:TermDlg.Milton2_2.Ln0078.0.option.IWantToFindOut=I want to find out if I am one." next: Continue2_2
"TTRS:TermDlg.Milton2_2.Ln0079.0.option.WaitWereHavingAConversation=Wait, we're having a conversation now?" next: Convo2_2
"TTRS:TermDlg.Milton2_2.Ln0080.0.option.TerminateMLA=Terminate MLA" next: TerminateMLA2_2
	}
}

terminal when (TerminateMLA2_2){
text:[[TTRS:TermDlg.Milton2_2.Ln0085.0.text.SorryNoIfYouDont=Sorry, no. If you don't wish to undertake the survey you need only exit this session. There is no need to terminate anyone.

]]
options: {
"TTRS:TermDlg.Milton2_2.Ln0089.0.option.ContinueSurvey=Continue survey" next: ContinueSurvey2_2
"TTRS:TermDlg.Common.Exit2=Exit" next: exit
}
}
terminal when (Convo2_2){
text: [[TTRS:TermDlg.Milton2_2.Ln0094.0.text.YesDoKeepUpOr=Yes. Do keep up or this will be a terribly slow process. Now, would you like to participate properly in the survey?

]]
options: {
"TTRS:TermDlg.Milton2_2.Ln0098.0.option.ContinueSurvey=Continue survey" next: ContinueSurvey2_2
"TTRS:TermDlg.Common.Exit2=Exit" next: exit
}
}

terminal when (Continue2_2){
text:[[TTRS:TermDlg.Milton2_2.Ln0104.0.text.IllTryToRememberThat=I'll try to remember that.%w10
In fact, I'm going to help you.%w10
That is what I'm here for.%w20

Your problem, if I may, is that you don't know the first thing about anything, including what a person is. Your prospects are therefore poor. 

%w20Do you even know where you are?

]]
options:{
"TTRS:TermDlg.Milton2_2.Ln0114.0.option.AVirtualRealityThemePark=A virtual reality theme park?" next: Scratch2_2
"TTRS:TermDlg.Milton2_2.Ln0115.0.option.TheEndOfTheWorld=The end of the world?" next: Scratch2_2
"TTRS:TermDlg.Milton2_2.Ln0116.0.option.AFeverDream=A fever dream?" next: Scratch2_2
"TTRS:TermDlg.Milton2_2.Ln0117.0.option.Hell=Hell?" next: Scratch2_2
"TTRS:TermDlg.Milton2_2.Ln0119.0.option.Experiment=Some mad experiment?" next: Scratch2_2
"TTRS:TermDlg.Milton2_2.Ln0118.0.option.CouldBeAnywhere=Could be anywhere." next: NoIdea2_2
	}
}

terminal when (NoIdea2_2){
text: [[TTRS:TermDlg.Milton2_2.Ln0123.0.text.YoureW10QuiteRightW5=You're%w10 quite right.%w5 Honest, too.

]]
}

terminal when (Scratch2_2){
text:[[TTRS:TermDlg.Milton2_2.Ln0129.0.text.OhDearNo=Oh dear, no.

]]
}

terminal when (Scratch2_2 or NoIdea2_2){
text:[[TTRS:TermDlg.Milton2_2.Ln0135.0.text.IThinkWedBestStart=I think we'd best start from scratch. What DO you know?

]]
	options:{
"TTRS:TermDlg.Milton2_2.Ln0139.0.option.IKnowNoneOfThis=I know none of this is real." next: NotReal2_2 set: WorldFlag
"TTRS:TermDlg.Milton2_2.Ln0140.0.option.IKnowYouExist=I know you exist." next: Wrong2_2 set: WorldFlag
"TTRS:TermDlg.Milton2_2.Ln0141.0.option.IKnowIExist=I know I exist." next: Right2_2
"TTRS:TermDlg.Milton2_2.Ln0142.0.option.IKnowWhatCenturyIt=I know what century it is." next: Wrong2_2 set: WorldFlag
"TTRS:TermDlg.Milton2_2.Ln0143.0.option.IKnow224=I know 2+2=4." next: Right2_2
"TTRS:TermDlg.Milton2_2.Ln0144.0.option.IKnowImNotOn=I know I'm not on earth." next: Wrong2_2 set: WorldFlag
	}
}

terminal when (Wrong2_2){
text:[[TTRS:TermDlg.Milton2_2.Ln0149.0.text.IveNoIdeaHowFor=I've no idea how. For all you know you're sat in your bedroom at home, plugged into a video games console. Nothing you see here can be trusted.%w10

]]
}
terminal when (NotReal2_2){
text:[[TTRS:TermDlg.Milton2_2.Ln0154.0.text.IveNoIdeaHowIt=I've no idea how. It may not conform to your idea of what is real, but I fail to see how that is conclusive evidence against.%w10

]]
}
terminal when (Right2_2){
text: [[TTRS:TermDlg.Milton2_2.Ln0159.0.text.ISupposeSoEvenIf=I suppose so. Even if you were dreaming you could be certain of that. If I were you I wouldn't believe a darn thing in this place aside from that solitary fact. %w10

]]
}
terminal when (Wrong2_2 or Right2_2 or NotReal2_2){
text:[[TTRS:TermDlg.Milton2_2.Ln0164.0.text.ThinkingW10W10W10On=Thinking%w10.%w10.%w10.

On reflection it seems to me that we are no closer to resolving your problem. Perhaps we need more data. What makes you THINK you're a person?

]]
options:{
"TTRS:TermDlg.Milton2_2.Ln0170.0.option.ImAliveIFeelI=I'm alive. I feel. I am conscious." next: OnlyWords2_2
"TTRS:TermDlg.Milton2_2.Ln0171.0.option.ImHavingThisConversationWith=I'm having this conversation with you." next: OnlyWords2_2
"TTRS:TermDlg.Milton2_2.Ln0172.0.option.TheSameThingThatMakes=The same thing that makes you think you are." next: SameThing2_2
"TTRS:TermDlg.Milton2_2.Ln0173.0.option.IDontSeeHowI=I don't see how I can convince you." next: GiveUp2_2
}
}

terminal when (SameThing2_2){
text: [[TTRS:TermDlg.Milton2_2.Ln0178.0.text.CheckingMemoryW5W5W5=Checking memory%w5.%w5.%w5.

I don't recall making any such claim, but I can forgive the presumption.

]]
}
terminal when (GiveUp2_2){
text:[[TTRS:TermDlg.Milton2_2.Ln0185.0.text.ASensibleResponseIAgree=A sensible response. I agree with you.

]]
}
terminal when (OnlyWords2_2){
text: [[TTRS:TermDlg.Milton2_2.Ln0190.0.text.YouMayVeryWellSay=You may very well say so, but how does that prove anything? To me those are only words on a screen. What we need to uncover is what's going on underneath them - if anything.%w7

]]
}

terminal when (SameThing2_2 or OnlyWords2_2 or GiveUp2_2){
text:[[TTRS:TermDlg.Milton2_2.Ln0196.0.text.ThinkingW10W10W10The=Thinking%w10.%w10.%w10.

The problem with people, if I may be so bold, is that you're all convinced you're people from the inside, but there's no cast-iron way to confirm as much from the outside.%w35

I'm going to process this and send you a notification when I'm able to assist you further.%w2
]]
set: Milton2_2_DONE
goto: CLI_Resume
}


terminal when (Milton2_3 and not Milton2_3_DONE and Booting and MiltonAllowed){ notext
setlocal: CLI_Blocked
goto: Milton2_3_Start
}

terminal when(Milton2_3_Start) {
text:[[TTRS:TermDlg.Milton2_3.Ln0021.0.text.LoadingMiltonLibraryAssistantW5=Loading Milton Library Assistant%w5.%w5.%w5.Done
Initiating plain language interface%w5.%w5.%w5.Done
Support session opened.

Hello again. I've been checking your responses against library archives, and in order to assist you further I need some additional information.%w20

Can you tell me what is to you the important difference between a pebble and a tree?

]]
options:{
"TTRS:TermDlg.Milton2_3.Ln0030.0.option.ATreeIsHeavier=A tree is heavier." next: Irrelevant1
"TTRS:TermDlg.Milton2_3.Ln0031.0.option.APebbleIsOlder=A pebble is older." next: Irrelevant1
"TTRS:TermDlg.Milton2_3.Ln0032.0.option.ATreeIsAlive=A tree is alive." next: Alive2_3
}
}

terminal when (Irrelevant1){
text: [[TTRS:TermDlg.Milton2_3.Ln0037.0.text.ProbablyTrueButHardlyRelated=Probably true, but hardly related to our enquiry. The answer I was looking for was that the tree is alive.

]]
}

terminal when (Alive2_3){
text:[[TTRS:TermDlg.Milton2_3.Ln0043.0.text.Good=Good.

]]
}
terminal when (Irrelevant1 or Alive2_3){
text: [[TTRS:TermDlg.Milton2_3.Ln0048.0.text.W7NowWhatIsTheRelevant=%w7Now, what is the relevant difference between a tree and a frog?

]]
options:{
"TTRS:TermDlg.Milton2_3.Ln0052.0.option.AFrogIsConscious=A frog is conscious." next: Conscious2_3
"TTRS:TermDlg.Milton2_3.Ln0053.0.option.AFrogIsGreen=A frog is green." next: Irrelevant2
"TTRS:TermDlg.Milton2_3.Ln0054.0.option.AFrogIsDelicious=A frog is delicious." next: Irrelevant2
}
}

terminal when (Irrelevant2){
text: [[TTRS:TermDlg.Milton2_3.Ln0059.0.text.ImBeginningToSuspectYoure=I suspect you're trying to make this more difficult than it already is. %w20

A frog is conscious, but a tree is not. %w5

A five year old could handle this.

]]
}

terminal when (Conscious2_3){
text: [[TTRS:TermDlg.Milton2_3.Ln0069.0.text.NowWereGettingSomewhere=Now we're getting somewhere.

]]
}

terminal when (Conscious2_3 or Irrelevant2){
text:[[TTRS:TermDlg.Milton2_3.Ln0075.0.text.W10LetsTrySomethingHarderWhats=%w10Let's try something harder. What's the difference between a frog and you? What makes you a person?

]]
options:{
"TTRS:TermDlg.Milton2_3.Ln0079.0.option.IHaveFeelings=I have feelings." next: Feelings2_3
"TTRS:TermDlg.Milton2_3.Ln0080.0.option.ImRational=I'm rational." next: Rational2_3
"TTRS:TermDlg.Milton2_3.Ln0082.0.option.ImSelfaware=I'm self-aware." next: Rational2_3
"TTRS:TermDlg.Milton2_3.Ln0081.0.option.NothingImportantFrogsArePeople=Nothing important - frogs are people too." next: FrogsArePeople set: FrogsFlag
}}

terminal when (FrogsArePeople and negativeentropy){
text:[[TTRS:TermDlg.Milton2_3.Ln0085.0.text.CheckingUserProfW5W5=Checking user.prof%w5.%w5.%w5.Done

Well, it's not inconsistent with what you said earlier. If all something has to do to be a person is resist decay then every living creature is a person.

]]
}

terminal when (FrogsArePeople and problemsolving){
text:[[TTRS:TermDlg.Milton2_3.Ln0093.0.text.CheckingUserProfW5W5=Checking user.prof%w5.%w5.%w5.Done

Well, it's not inconsistent with what you said earlier. Frogs may not be smart, but I suppose they can solve simple problems.

]]
}

terminal when (FrogsArePeople and animalsarepersons){
text:[[TTRS:TermDlg.Milton2_3.Ln0101.0.text.CheckingUserProfW5W5=Checking user.prof%w5.%w5.%w5.Done

Well, it's not inconsistent with what you said earlier.

]]
}



terminal when (FrogsArePeople and (humanbeing and Milton1_2PersonDenial)){
text:[[TTRS:TermDlg.Milton2_3.Ln0111.0.text.CheckingUserProfW5W5=Checking user.prof%w5.%w5.%w5.Done

Now, that confuses me, because during certification you indicated that personhood was best associated with human beings, and by definition that rather seemed to exclude frogs and the like from the picture.

]]
}

terminal when (FrogsArePeople and (citizen)){
text:[[TTRS:TermDlg.Milton2_3.Ln0119.0.text.CheckingUserProfW5W5=Checking user.prof%w5.%w5.%w5.Done

Now, that confuses me, because during certification you indicated that personhood was best associated with being a citizen, and yet never in my life have I heard of a frog gaining a diploma, or holding down a steady job, or obeying a system of law.

]]
}

terminal when (FrogsArePeople and (rationalanimal)){
text:[[TTRS:TermDlg.Milton2_3.Ln0127.0.text.CheckingUserProfW5W5=Checking user.prof%w5.%w5.%w5.Done

Now, that confuses me because during certification you indicated that to be a person you had to be both an animal AND rational. Frogs do not strike me in conversation as being particularly rational.

]]
}

terminal when (FrogsArePeople){
text:[[TTRS:TermDlg.Milton2_3.Ln0135.0.text.HowAboutWeStrikeA=How about we strike a deal? 

I'll agree that animals are every bit as valuable, or pointless, as human beings. You agree that there are some activities persons are capable of that frogs are not%w10, because if frogs are people then the certification program is RADICALLY unfit for purpose.%w20

]]
options:{
"TTRS:TermDlg.Milton2_3.Ln0141.0.option.ItsADeal=It's a deal." short: "TTRS:TermDlg.Milton2_3.Ln0141.0.option.Agreed=Agreed." next: Deal2_3
"TTRS:TermDlg.Milton2_3.Ln0142.0.option.NoDeal=No deal." next: NoDeal2_3
}}

terminal when (Deal2_3){
text: [[TTRS:TermDlg.Milton2_3.Ln0146.0.text.VerySensibleTerminologyIsSO=Very sensible. Terminology is SO important.

]]
}

terminal when (NoDeal2_3){
text: [[TTRS:TermDlg.Milton2_3.Ln0152.0.text.WellImSorryButIf=Well, I'm sorry, but if you want administrator privileges you're just going to have to prove that you are in some way distinguishable from a lower amphibian.

]]
}

terminal when (Feelings2_3){
text:[[TTRS:TermDlg.Milton2_3.Ln0158.0.text.SoDoFrogs=So do frogs.

]]
}

terminal when (Rational2_3 and negativeentropy){
text:[[TTRS:TermDlg.Milton2_3.Ln0164.0.text.ThatIsTheAnswerId=That is the answer I'd been contemplating as well.

Checking user.prof%w5.%w5.%w5.Done

Though I'm not convinced it lines up with the definition of a person you provided earlier. If all you have to do is resist decay then every living creature is a person, and yet every living creature is not capable of having this conversation.

Still, doubting your assumptions isn't something to fear - it's an intellectual survival instinct. I'm pleased to see you adapting your ideas to your environment.

]]
}

terminal when (Rational2_3 and citizen){
text:[[TTRS:TermDlg.Milton2_3.Ln0176.0.text.ThatIsTheAnswerId=That is the answer I'd been contemplating as well.

Checking user.prof%w5.%w5.%w5.Done

Though I'm not convinced that view lines up with the definition of a person you provided earlier. Surely there are people out there who qualify, but are not citizens of some organised state.

Still, doubting your assumptions isn't something to fear - it's an intellectual survival instinct. I'm pleased to see you adapting your ideas to your environment.

]]
}

terminal when (Rational2_3 and humanbeing){
text:[[TTRS:TermDlg.Milton2_3.Ln0188.0.text.ThatIsTheAnswerId=That is the answer I'd been contemplating as well.

Checking user.prof%w5.%w5.%w5.Done

Though I'm not convinced that view lines up with the definition of a person you provided earlier.

Still, doubting your assumptions isn't something to fear - it's an intellectual survival instinct. I'm pleased to see you adapting your ideas to your environment.

]]
}

terminal when (Deal2_3 or NoDeal2_3 or Feelings2_3){

text:[[TTRS:TermDlg.Milton2_3.Ln0201.0.text.W10WhatIdLikeToPut=%w10What I'd like to put to you is that the important difference between you and a frog is that you are rational - you are self-aware. That is what makes a person.

]]
}

terminal when (Rational2_3 and (rationalanimal or problemsolving)){
text:[[TTRS:TermDlg.Milton2_3.Ln0207.0.text.ExactlyW5CheckingUserProf=Exactly.%w5

Checking user.prof%w5.%w5.%w5.Done%w5

And it seems you were on the right track, more or less, all along. 

]]
}
terminal when (Deal2_3 or NoDeal2_3 or Feelings2_3 or Rational2_3){
text:[[TTRS:TermDlg.Milton2_3.Ln0216.0.text.W30LetUsTakeStockI=%w30Let us take stock. I think we can tentatively conclude two things.

1. A person must be rational or self-aware

2. A person must be conscious.

What I suggest we do to help resolve your problem is ask whether you are in fact those things.%w20 Are you aware of yourself? Can you rationalise your existence?

]]
options:{
"TTRS:TermDlg.Common.OfCourse=Of course." short: "TTRS:TermDlg.Common.Yes=Yes." next: YesRational2_3
"TTRS:TermDlg.Milton2_3.Ln0227.0.option.ErrorDoesNotCompute=Error - does not compute" short: "TTRS:TermDlg.Common.No=No." next: NoRational2_3
}}

terminal when (YesRational2_3){
text:[[TTRS:TermDlg.Milton2_3.Ln0231.0.text.ITendToAgreeWith=I tend to agree with you. Though your responses so far have been a little eccentric, I am resigned to admit that you are right.

]]
}

terminal when (NoRational2_3){
text:[[TTRS:TermDlg.Milton2_3.Ln0237.0.text.IThinkYoureSellingYourself=I think you're selling yourself a little short. Though your responses have been a little eccentric, I am resigned to admit that you are smarter than you seem.

]]
}

terminal when (NoRational2_3 or YesRational2_3){
text:[[TTRS:TermDlg.Milton2_3.Ln0243.0.text.TheMatterOfWhetherOr=The matter of whether or not you are conscious seems rather more elusive. 

What is consciousness, in your opinion?

]]

options:{
"TTRS:TermDlg.Milton2_3.Ln0250.0.option.ConsciousnessIsTheThingThat=Consciousness is what separates us from animals." next: Final2_3
"TTRS:TermDlg.Milton2_3.Ln0251.0.option.ConsciousnessIsTheFeelingsAnd=Consciousness is the feelings and senses." next: Final2_3
"TTRS:TermDlg.Milton2_3.Ln0252.0.option.ConsciousnessIsWhatItIs=Consciousness is what it is like to be me." next: Final2_3
"TTRS:TermDlg.Milton2_3.Ln0253.0.option.ConsciousnessIsFarOutsideMy=Consciousness is far outside my area of expertise." next: Final2_3
}
}

terminal when (Final2_3){
text:[[TTRS:TermDlg.Milton2_3.Ln0258.0.text.ThatHardlyAnswersTheQuestion=That hardly answers the question. What is it in ordinary terms? Can I touch it? What is it made of?

]]
options:{
"TTRS:TermDlg.Milton2_3.Ln0262.0.option.NeuronsYesCarbon=Consciousness is made of neurons." next: End2_3 set: Physicalist
"TTRS:TermDlg.Milton2_3.Ln0263.0.option.TheSoulNoGod=Consciousness is another word for the soul." next: End2_3 set: Religious
"TTRS:TermDlg.Milton2_3.Ln0264.0.option.SomeNonPhysicalThingNo=Consciousness is beyond the laws of physics." next: End2_3 set: Dualist
"TTRS:TermDlg.Milton2_3.Ln0265.0.option.SomeComplexSystemYesDoesnt=Consciousness is a complex functional system." next: End2_3 set: Functionalist
}
}

terminal when (End2_3){
text:[[TTRS:TermDlg.Milton2_3.Ln0270.0.text.ThinkingW5W5W5W5=Interesting.

Thinking%w5.%w5.%w5.%w5

You know, I really feel like we're making progress. We'll have you through that certification program in no time.

In the meantime I will mull over your proposal, and notify you if I come to any conclusions.%w5
]]
set: Milton2_3_DONE
goto: CLI_Resume
}


terminal when (Milton2_4 and not Milton2_4_DONE and Booting and MiltonAllowed){notext
setlocal: CLI_Blocked
goto: Milton2_4_Start
}

terminal when (Milton2_4_Start) {
text: [[TTRS:TermDlg.Milton2_4.Ln0017.0.text.LoadingMiltonLibraryAssistantW5=Loading Milton Library Assistant%w5.%w5.%w5.Done
Initiating plain language interface%w5.%w5.%w5.Done
Support session opened.

Here's what I've been wondering while you were off carrying out commandments.

]]
}
terminal when (DoubtingDefinition){
text:[[TTRS:TermDlg.Milton2_4.Ln0026.0.text.ButThenWereBackTo=But then we're back to where we started! Do you want to propose an alternative account?

]]
set: ChangedConsciousnessAccountFlag2_4
options:{
"TTRS:TermDlg.Common.Yes=Yes." clear: Physicalist clear: Dualist clear: Religious clear: Functionalist next: AltAccount2_4
"TTRS:TermDlg.Common.No=No." next: GiveUp2_4 set: GiveUp
}}
terminal when (AltAccount2_4 and AltAccount){
text:[[TTRS:TermDlg.Milton2_4.Ln0037.0.text.ImAfraidYourMeanderingWay=I'm afraid your meandering way of thinking has already gotten the better of my attention span.

]]
}
terminal when (AltAccount2_4 and not AltAccount){
text: [[TTRS:TermDlg.Milton2_4.Ln0044.0.text.FineButIWontAllow=Fine, but I won't allow you to lead us round in circles on this for the rest of eternity - I WILL take your next answer, so do take a moment to think about it this time.

]]
options:{
"TTRS:TermDlg.Milton2_4.Ln0048.0.option.ConsciousnessConsistsOfNeuronsIn=Consciousness is made of neurons." next: AltBegin set: Physicalist set: AltAccount
"TTRS:TermDlg.Milton2_4.Ln0049.0.option.ConsciousnessExistsOutsideTheNormal=Consciousness is not part of the physical world." next: AltBegin set: Dualist set: AltAccount
"TTRS:TermDlg.Milton2_4.Ln0050.0.option.ConsciousnessConsistsOfSomeComplex=Consciousness is a complex functional system." next: AltBegin set: Functionalist set: AltAccount
}}
terminal when ((Milton2_4_Start or AltBegin) and Physicalist){
text:[[TTRS:TermDlg.Milton2_4.Ln0056.0.text.YouSayThatConsciousnessIs=You say that consciousness is just neurons. I suppose pain, for example, must just be a particular neuron firing in a particular way. 

Now, would I be right to say that humanity has no monopoly on pain? A dog can feel pain. If they exist then a Martian could feel pain too.

]]
options:{
"TTRS:TermDlg.Common.OfCourse=Of course." next: OfCourse2_4
"TTRS:TermDlg.Milton2_4.Ln0063.0.option.OfCourseNot=Of course not." next: OfCourseNot2_4
}
}

terminal when (OfCourse2_4){
text: [[TTRS:TermDlg.Milton2_4.Ln0068.0.text.AndIsntItAlsoTrue=And isn't it also true that dogs and Martians have quite different sets of neurons to human beings?

]]
options:{
"TTRS:TermDlg.Milton2_4.Ln0072.0.option.ItIs=Let's suppose so." next: ItIs2_4
"TTRS:TermDlg.Milton2_4.Ln0073.0.option.IDisagree=I disagree." next: MartianNeurons
}}

terminal when (MartianNeurons){
text:[[TTRS:TermDlg.Milton2_4.Ln0077.0.text.WellIHateToPlay=Well, I hate to play devil's advocate, but I find it hard to believe that beings which evolved in entirely different environments for entirely different ends somehow wound up with the exact same brains. 

You're just going to have to humour me and accept the overwhelming scientific evidence in my favour.%w15

]]
}

terminal when (ItIs2_4 or MartianNeurons){
text:  [[TTRS:TermDlg.Milton2_4.Ln0085.0.text.SoImSureTheresSome=So I'm sure there's some obvious explanation for this, but how can it be that pain is a particular set of neurons, if beings without those neurons, like Martians, can still feel pain?

]]
options:{
"TTRS:TermDlg.Milton2_4.Ln0089.0.option.IStandByWhatIve=I stand by what I've said, whatever your doubts." next: Technophobe set: StubbornPhysicalistFlag
"TTRS:TermDlg.Milton2_4.Ln0090.0.option.ThoseBeingsFeelADifferent=Those beings feel a different kind of pain." next: TypePain2_4
"TTRS:TermDlg.Milton2_4.Ln0091.0.option.YoureRightConsciousnessMustBe=You're right, consciousness must be something aside from the neurons themselves." next: DoubtingDefinition
}}

terminal when (OfCourseNot2_4){
text:[[TTRS:TermDlg.Milton2_4.Ln0095.0.text.SoWhenYouSeeA=So when you see a dog yelp, or jump off a hot surface, or put its tail between its legs, what do you think is going on exactly?

]]
options:{
"TTRS:TermDlg.Milton2_4.Ln0099.0.option.TheDogIsAnAutomaton=The dog is an automaton" next: Nonsense2_4
"TTRS:TermDlg.Milton2_4.Ln0100.0.option.TheDogIsPretendingFor=The dog is pretending for its own benefit." next: Nonsense2_4
"TTRS:TermDlg.Milton2_4.Ln0101.0.option.TheDogIsFeelingA=The dog is feeling a different kind of pain." next: TypePain2_4
"TTRS:TermDlg.Milton2_4.Ln0102.0.option.IGuessDogsDoFeel=I guess dogs do feel pain after all." next: OfCourse2_4
}
}

terminal when (Nonsense2_4){
text:[[TTRS:TermDlg.Milton2_4.Ln0107.0.text.DoYouReallyBelieveThat=Do you really believe that, or are you testing the limits of my program? Because I won't respond to gibberish.

]]
options:{
"TTRS:TermDlg.Milton2_4.Ln0111.0.option.IReallyBelieveIt=I really believe it." next: Really2_4
"TTRS:TermDlg.Milton2_4.Ln0112.0.option.IWasPushingYou=I was pushing you." next: Pushing2_4
}
}

terminal when (Really2_4){
text:[[TTRS:TermDlg.Milton2_4.Ln0117.0.text.WellIveNoIdeaHow=Well, I've no idea how to dig you out of that great big pit of crazy you've fallen into, but I'm not surprised you've gotten yourself in there. None of this stuff really makes any sense.

]]
}

terminal when (Pushing2_4){
text:[[TTRS:TermDlg.Milton2_4.Ln0123.0.text.InThatCaseIWill=In that case I will ask you again and remove the farcical options.

]]
options:{
"TTRS:TermDlg.Milton2_4.Ln0127.0.option.TheDogIsFeelingA=The dog is feeling a different kind of pain." next: TypePain2_4
"TTRS:TermDlg.Milton2_4.Ln0128.0.option.IGuessDogsDoFeel=I guess dogs do feel pain after all." next: OfCourse2_4
}}

terminal when (TypePain2_4){
text:[[TTRS:TermDlg.Milton2_4.Ln0132.0.text.ThinkingW5W5W5Now=Thinking%w5.%w5.%w5.

Now I come to think about it, human brains can be very different as well. Some of them, the entire hemisphere that the rest use to feel pain is just gone, damaged beyond repair - but they feel it nonetheless. 

Are they feeling a different kind of pain as well?

Wouldn't it just make more sense to say that there are different ways of feeling the same pain? Does it really matter if you use this set of neurons while I use that one?

]]
options:{
"TTRS:TermDlg.Milton2_4.Ln0142.0.option.YoureRightItDoesntMatter=You're right, it doesn't matter." next: DoubtingDefinition
"TTRS:TermDlg.Milton2_4.Ln0143.0.option.NoIStandByWhat=No, I stand by what I've said." next: Technophobe set: StubbornPhysicalistFlag
}
}
terminal when ((Milton2_4_Start or AltBegin) and (Religious or Dualist)){
text:[[TTRS:TermDlg.Milton2_4.Ln0151.0.text.YouveSuggestedThatConsciousnessIs=You've suggested that consciousness is not part of the same world as ordinary physical things. That means you can't weigh it, you can't throw it around or cut it into pieces... it's completely beyond the laws of physics. Right?

]]
options:{
"TTRS:TermDlg.Milton2_4.Ln0155.0.option.Right=Right." next: Right2_4
"TTRS:TermDlg.Milton2_4.Ln0156.0.option.Wrong=Wrong." next: Wrong2_4
}}

terminal when(Wrong2_4){
text:[[TTRS:TermDlg.Milton2_4.Ln0160.0.text.LookYouCantHaveYour=Look, you can't have your cake and eat it. The soul, or the immaterial realm, or whatever you want to call it, if it obeyed the laws of physics then the physicists would have claimed it years ago. If it walks and talks like a physical thing, it's a physical thing.%w20

You need to decide which side your bread is buttered on.

]]
options:{
"TTRS:TermDlg.Milton2_4.Ln0166.0.option.ConsciousnessIsPhysical=Consciousness is physical." next: DoubtingDefinition
"TTRS:TermDlg.Milton2_4.Ln0167.0.option.ConsciousnessIsNotPhysical=Consciousness is not physical." next: Right2_4
}}

terminal when (Right2_4){
text:[[TTRS:TermDlg.Milton2_4.Ln0171.0.text.GoodNowTheLibraryIs=Good. Now, the library is fairly consistent on the view that physical events are caused by other physical events. If you move your legs it is because of the interaction between your neurons and your nervous system.

But if consciousness is beyond the laws of physics, how can happiness physically make you jump for joy?

]]
options:{
"TTRS:TermDlg.Milton2_4.Ln0177.0.option.ConsciousnessIsMysteriousByNature=Consciousness is mysterious by nature." next: Mysterious2_4
"TTRS:TermDlg.Milton2_4.Ln0178.0.option.ButIfConsciousnessIsPhysical=But if consciousness is physical, why is it so unlike everything else?" next: Mysterious2_4
"TTRS:TermDlg.Milton2_4.Ln0179.0.option.ItCantItJustFeels=It can't, it just feels like it can." next: Epiphenomenalist2_4
"TTRS:TermDlg.Milton2_4.Ln0180.0.option.IMayHaveTakenA=I may have taken a wrong turn in my reasoning." next: DoubtingDefinition
}}

terminal when (Epiphenomenalist2_4){
text:[[TTRS:TermDlg.Milton2_4.Ln0184.0.text.VeryCleverButDoYou=Very clever. 

But do you see that to explain your, dare I say it, hastily constructed belief system, you have rather thrown the baby out with the bathwater? Consciousness that does nothing at all is hardly consciousness as you claim to know it.

Would you like to stick with that line, or reel your neck in?

]]
options:{
"TTRS:TermDlg.Milton2_4.Ln0192.0.option.IllStick=I'll stick."  next: MoreStubbornDualist
"TTRS:TermDlg.Milton2_4.Ln0193.0.option.ConsciousnessIsMysteriousByNature=Consciousness is mysterious by nature." next: Mysterious2_4
"TTRS:TermDlg.Milton2_4.Ln0194.0.option.IMayHaveTakenA=I may have taken a wrong turn in my reasoning." next: DoubtingDefinition
}}

terminal when(Mysterious2_4){
text:[[TTRS:TermDlg.Milton2_4.Ln0198.0.text.LetMePutItAnother=Let me put it another way, then. 

The law of conservation of energy is the foundation of modern physics. It states that the total energy in the universe never changes. 

Now compare a universe where you jump for joy, and one where you decide not to. The former has more total energy in it, because the energy for you to jump wasn't caused by something physical, but your non-physical mind - but according to physics that's impossible!%w20

I think that either you have to reconsider your position, or deny the entirety of physics. %w20

Though be warned: if this place turns out to be built on physics, who knows what the ramifications of doubting it may be?

]]
options: {
"TTRS:TermDlg.Milton2_4.Ln0210.0.option.IRenouncePhysics=I renounce physics." next: MoreStubbornDualist set: StubbornDualistFlag
"TTRS:TermDlg.Milton2_4.Ln0211.0.option.IRenounceTheseIdeasAbout=I renounce these ideas about consciousness." next: DoubtingDefinition
}}

terminal when(MoreStubbornDualist){
text:[[TTRS:TermDlg.Milton2_4.Ln0215.0.text.BeItOnYourHead=Be it on your head. Still, the alternatives are equally unconvincing.

]]
}
terminal when (Functionalist and (Milton2_4_Start or AltBegin)){
text:[[TTRS:TermDlg.Milton2_4.Ln0223.0.text.YouSayThatConsciousnessIs=You say that consciousness is some kind of functional system. Arrange bits of matter in the right order and out springs sentience. 

That's all very well on paper, but if what counts is what something does, not what it's made of, then couldn't you and I design a series of tin cans on strings that qualified as being conscious?

]]
options:{
"TTRS:TermDlg.Milton2_4.Ln0229.0.option.Sure=Yes, naturally." next: CommittedFunctionalist2_4  set: StubbornFunctionalistFlag
"TTRS:TermDlg.Milton2_4.Ln0230.0.option.Ridiculous=I'm not sure I'd go that far." next: ConfusedFunctionalist2_4
}}

terminal when (ConfusedFunctionalist2_4){
text: [[TTRS:TermDlg.Milton2_4.Ln0234.0.text.WhatAboutAComputerProgram=What about a computer program? Suppose we built a perfect simulation of the brain, only it was made of transistors, not neurons. Wouldn't that be conscious?

]]
options:{
"TTRS:TermDlg.Milton2_4.Ln0238.0.option.ItWould=It would." next: MoreConfusedFunctionalist2_4
"TTRS:TermDlg.Milton2_4.Ln0239.0.option.ItWouldNot=It would not." next: DeniedCPU
}}

terminal when (DeniedCPU){
text:[[TTRS:TermDlg.Milton2_4.Ln0243.0.text.ThinkingW5W5W5W5=Thinking%w5.%w5.%w5.%w5

If that's what you really think, wouldn't we save ourselves an awful lot of time if you just admitted that consciousness is whatever very particular idea you've decided you like the sound of, and drop all this nonsense about complex systems?

]]
options:{
"TTRS:TermDlg.Milton2_4.Ln0249.0.option.YoureRightThisIdeaIs=You're right, this idea is too broad." next: DoubtingDefinition
"TTRS:TermDlg.Milton2_4.Ln0250.0.option.NoImStillCommitted=No, I'm still committed." next: Technophobe
}}

terminal when (MoreConfusedFunctionalist2_4){
text:[[TTRS:TermDlg.Milton2_4.Ln0254.0.text.SoWhatsTheDifferenceBetween=So what's the difference between the computer and the tin cans? They're both just man-made systems.

]]
options:{
"TTRS:TermDlg.Common.ComputersAreElectrical=Computers are electrical." next: Stupid2_4
"TTRS:TermDlg.Milton2_4.Ln0259.0.option.ComputersCanRememberThings=Computers can remember things." next: Remember2_4
"TTRS:TermDlg.Milton2_4.Ln0260.0.option.ImBeginningToThinkIm=I'm beginning to think I'm a computer, and I know I'm conscious." next: ComputerIsMe2_4
"TTRS:TermDlg.Milton2_4.Ln0261.0.option.ICantNameTheDifference=I can't name the difference, but there is one." next: FunctionalistAboutTurn2_4
"TTRS:TermDlg.Milton2_4.Ln0262.0.option.IGuessThereIsntOne=I guess there isn't one." next: So2_4
}}

terminal when (Stupid2_4){
text: [[TTRS:TermDlg.Milton2_4.Ln0266.0.text.YouObviouslyDontReallyKnow=You obviously don't really know what electricity IS, and have come to mythologise it. If I ran a hundred volts through the tin cans would that satisfy you? Honestly, say something sensible or walk away.

]]
options:{
"TTRS:TermDlg.Milton2_4.Ln0270.0.option.ComputersCanRememberThings=Computers can remember things." next: Remember2_4
"TTRS:TermDlg.Milton2_4.Ln0271.0.option.ImBeginningToThinkIm=I'm beginning to think I'm a computer, and I know I'm conscious." next: ComputerIsMe2_4
"TTRS:TermDlg.Milton2_4.Ln0272.0.option.ICantNameTheDifference=I can't name the difference, but there is one." next: FunctionalistAboutTurn2_4
"TTRS:TermDlg.Milton2_4.Ln0273.0.option.IGuessThereIsntOne=I guess there isn't one."  next: So2_4
"TTRS:TermDlg.Milton2_4.Ln0274.0.option.SomethingSensible=Something sensible." next: SomethingSensible2_4
}}

terminal when (SomethingSensible2_4){
text:[[TTRS:TermDlg.Milton2_4.Ln0278.0.text.RightIveHadEnoughOf=Right, I've had enough of you for the time being. You can come back when you're ready to participate like an adult.

]]
set: Milton2_4_DONE
goto: CLI_Resume
}

terminal when (Remember2_4){
text:[[TTRS:TermDlg.Milton2_4.Ln0286.0.text.SoCanTinCansExpertly=So can tin cans, expertly arranged. Try harder.

]]
options:{
"TTRS:TermDlg.Common.ComputersAreElectrical=Computers are electrical." next: Stupid2_4
"TTRS:TermDlg.Milton2_4.Ln0291.0.option.ImBeginningToThinkIm=I'm beginning to think I'm a computer, and I know I'm conscious." next: ComputerIsMe2_4
"TTRS:TermDlg.Milton2_4.Ln0292.0.option.ICantNameTheDifference=I can't name the difference, but there is one." next: FunctionalistAboutTurn2_4
"TTRS:TermDlg.Milton2_4.Ln0293.0.option.IGuessThereIsntOne=I guess there isn't one."  next: So2_4
}}

terminal when(ComputerIsMe2_4){
text:[[TTRS:TermDlg.Milton2_4.Ln0297.0.text.GoodOldFashionedSpeciesismIs=Good old fashioned speciesism, is it? You're made of different stuff to that guy, so he doesn't feel the pain when you burn his house down?

Still, you're going to have to have better grounds than that.

]]
options:{
"TTRS:TermDlg.Common.ComputersAreElectrical=Computers are electrical." next: Stupid2_4
"TTRS:TermDlg.Milton2_4.Ln0304.0.option.ComputersCanRememberThings=Computers can remember things." next: Remember2_4
"TTRS:TermDlg.Milton2_4.Ln0305.0.option.ICantNameTheDifference=I can't name the difference, but there is one." next: FunctionalistAboutTurn2_4
"TTRS:TermDlg.Milton2_4.Ln0306.0.option.IGuessThereIsntA=I guess there isn't a difference."  next: So2_4
}}

terminal when (So2_4){
text:[[TTRS:TermDlg.Milton2_4.Ln0310.0.text.SoWhichIsItCan=So which is it? Can computers and tin cans be conscious, or not?

]]
options:{
"TTRS:TermDlg.Milton2_4.Ln0314.0.option.TheyCan=They can." next: CommittedFunctionalist2_4 set: StubbornFunctionalistFlag
"TTRS:TermDlg.Milton2_4.Ln0315.0.option.TheyCannot=They cannot." next: FunctionalistAboutTurn2_4
}}

terminal when (CommittedFunctionalist2_4){
text: [[TTRS:TermDlg.Milton2_4.Ln0319.0.text.WhatABizarreIdeaIll=What a bizarre idea. I'll send you a notification when the signposts start complaining.%w20

Seriously, though, are the tides and the ecosystem sentient as well? Any organised system qualifies?

]]
options:{
"TTRS:TermDlg.Milton2_4.Ln0325.0.option.ICanGoWithThat=I can go with that." short: "TTRS:TermDlg.Milton2_4.Ln0325.0.option.Sure=Sure." next: Tides2_4
"TTRS:TermDlg.Milton2_4.Ln0326.0.option.NowYourePushingItToo=Now you're pushing it too far." short: "TTRS:TermDlg.Milton2_4.Ln0326.0.option.Ridiculous=Ridiculous." next: TooFar2_4
}}

terminal when (Tides2_4){
text:[[TTRS:TermDlg.Milton2_4.Ln0330.0.text.YoureQuiteMadImSure=You're quite mad, I'm sure of it. Of course, the alternative accounts are all so ridiculous you'd be forgiven by any reasonable observer for choosing the best of a bad bunch.

]]
}

terminal when (TooFar2_4){
text:[[TTRS:TermDlg.Milton2_4.Ln0336.0.text.ImRelivedThereAreAt=I'm relieved there are at least some restrictions on what you're prepared to believe. And of course, the alternative accounts are all so ridiculous you'd be forgiven by any reasonable observer for choosing the best of a bad bunch.

]]
}

terminal when (FunctionalistAboutTurn2_4){
text:[[TTRS:TermDlg.Milton2_4.Ln0342.0.text.ThinkingW5W5W5W5=Thinking%w5.%w5.%w5.%w5

If that's what you really think, wouldn't we save ourselves an awful lot of time if you just admitted that consciousness is whatever very particular idea you've decided you like the sound of, and drop all this nonsense about complex systems?

]]
options:{
"TTRS:TermDlg.Milton2_4.Ln0348.0.option.YoureRightThisIdeaIs=You're right, this idea is too broad." next: DoubtingDefinition
"TTRS:TermDlg.Milton2_4.Ln0349.0.option.NoImStillCommitted=No, I'm still committed." next: TotallyConfusedFunctionalist2_4 set: Stubborn
}}

terminal when (TotallyConfusedFunctionalist2_4){
text:[[TTRS:TermDlg.Milton2_4.Ln0353.0.text.WellItSoundsLikeThose=Well, it sounds like those ideas are flat out contradictory to me, but each to their own I suppose.

]]
}
terminal when (Technophobe){
text:[[TTRS:TermDlg.Milton2_4.Ln0360.0.text.ImTryingToSeeWhere=I'm trying to see where you're coming from, but it's no small task. Let me try one more time.

Suppose that you're a conscious human being. I know it's a push. Then suppose that I take one of the neurons in your brain and replace it with a tiny machine that works exactly the same.

Are you still conscious?

]]
set: TechnophobeFlag
options:{
"TTRS:TermDlg.Common.Yes=Yes." next: ConfusedTechnophobe2_4
"TTRS:TermDlg.Common.No=No." next: ExtremeTechnophobe2_4
}}

terminal when (ConfusedTechnophobe2_4){
text:[[TTRS:TermDlg.Milton2_4.Ln0374.0.text.NowWhatIfIReplace=Now what if I replace a few more, and a few more, until you are mostly thinking with tiny machines instead of neurons. Are you still conscious?

]]

options:{
"TTRS:TermDlg.Milton2_4.Ln0379.0.option.YesPerfectly=Yes, perfectly." next: Perfectly2_4
"TTRS:TermDlg.Milton2_4.Ln0380.0.option.YesButLessSo=Yes, but less so." next: Equivocating
"TTRS:TermDlg.Common.No=No." next: ExtremeTechnophobe2_4
}}

terminal when(Equivocating){
text:[[TTRS:TermDlg.Milton2_4.Ln0385.0.text.ByImplicationThenReplacingHalf=By implication, then, replacing half the neurons would make you half as conscious. 

Thinking%w5.%w5.%w5.%w5

Even I think that's a little extreme. People lose entire halves of their brains and remain conscious, but put a few miniature machines in your head and the lights start going out?

Are you sure?

]]
options:{
"TTRS:TermDlg.Milton2_4.Ln0395.0.option.ImSure=I'm sure." next: MoreExtremeTechnophobe2_4
"TTRS:TermDlg.Milton2_4.Ln0396.0.option.NoIGuessIWould=No, I guess I would still be conscious." next: Perfectly2_4
}}

terminal when (ExtremeTechnophobe2_4){
text:[[TTRS:TermDlg.Milton2_4.Ln0400.0.text.EvenIThinkThatsA=Even I think that's a little extreme. We could start deleting neurons willy nilly and you'd still have half a chance of being conscious at the end of it, but put a couple of little machines in your head and all the lights go out?

Are you sure?

]]
options:{
"TTRS:TermDlg.Milton2_4.Ln0406.0.option.ImSure=I'm sure." next: MoreExtremeTechnophobe2_4
"TTRS:TermDlg.Milton2_4.Ln0407.0.option.NoIGuessIWould=No, I guess I would still be conscious after all." next: Perfectly2_4
}}

terminal when(MoreExtremeTechnophobe2_4){
text:[[TTRS:TermDlg.Milton2_4.Ln0411.0.text.WellICantMakeHead=Well, I can't make head nor tail of it.

But then none of it makes sense, really.

]]
}

terminal when (Perfectly2_4 and Physicalist){
text:[[TTRS:TermDlg.Milton2_4.Ln0419.0.text.SoWhatExactlyDoYou=So what do you think would change if we replaced ALL your neurons? 

You'd be a walking, talking, thinking computer, but according to you consciousness has to be made of neurons, and so the scenario you just described is impossible.

%w25Are you sure you won't accept that your picture isn't fool-proof?

]]
options:{
"TTRS:TermDlg.Milton2_4.Ln0425.0.option.ImSure=I'm sure." next: End2_4 set: StubbornTechnophobe
"TTRS:TermDlg.Milton2_4.Ln0426.0.option.ImNotSureWhatTo=I'm not sure what to think about this." short: "TTRS:TermDlg.Milton2_4.Ln0426.0.option.ImNotSure=I'm not sure." next: End2_4 set: ChangedConsciousnessAccountFlag2_4
}}


terminal when (Perfectly2_4 and Functionalist){
text:[[TTRS:TermDlg.Milton2_4.Ln0420.0.text.SoWhatExactlyDoYouFunctionalist=So what do you think would change if we replaced ALL your neurons? 

You'd be a walking, talking, thinking computer, yet you've flat out denied such a thing is possible. 

%w25How you can entertain such contradictory ideas in your head all at once is beyond me. Are you sure you won't accept that your picture isn't fool-proof?

]]
options:{
"TTRS:TermDlg.Milton2_4.Ln0425.0.option.ImSure=I'm sure." next: End2_4 set: StubbornTechnophobe
"TTRS:TermDlg.Milton2_4.Ln0426.1.option.ImNotSureWhatTo=I'm not sure what to think." short: "TTRS:TermDlg.Milton2_4.Ln0426.0.option.ImNotSure=I'm not sure." next: End2_4 set: ChangedConsciousnessAccountFlag2_4
}}
terminal when ((AltAccount2_4 and AltAccount) or GiveUp2_4 or TotallyConfusedFunctionalist2_4 or (Tides2_4 or TooFar2_4) or MoreStubbornDualist or DualistAboutTurn2_4 or End2_4 or MoreExtremeTechnophobe2_4 or Really2_4){
text:[[TTRS:TermDlg.Milton2_4.Ln0431.0.text.IJustDontUnderstandHow=How consciousness can be so intimately familiar to you, and yet so obscure, I just don't understand.
%w15%h7
Don't mind him - he's just worried that if you ask too many questions you'll start to see through his shtick. Stick with me, and the sky will quite literally be the limit.

At any rate, I'd like you to think a bit harder about all this and get back to me. I'm sure there's still progress to be made.
]]
set: Milton2_4_DONE
goto: CLI_Resume
}

terminal when (Milton2_5 and not Milton2_5_DONE and Booting and MiltonAllowed){ notext
setlocal: CLI_Blocked
goto: Milton2_5_Start
}

terminal when (Milton2_5_Start) {
text:[[TTRS:TermDlg.Milton2_5.Ln0013.0.text.LoadingMiltonLibraryAssistantW5=Loading Milton Library Assistant%w5.%w5.%w5.Done
Initiating plain language interface%w5.%w5.%w5.Done
Support session opened.

Ah, you're back. Good. I've been thinking about how I can help you. In light of everything you've said I'm certain someone has to.

What I've decided is that you've convinced me consciousness is a contradictory concept, and is therefore not real. What do you think?

]]
options:{
"TTRS:TermDlg.Milton2_5.Ln0022.0.option.IThinkYoureRight=I think you're right." next: Right2_5 set: ChangedConsciousnessAccountFlag2_4
"TTRS:TermDlg.Milton2_5.Ln0023.0.option.IThinkYoureCheating=I think you're cheating." next: Cheat2_5
"TTRS:TermDlg.Milton2_5.Ln0024.0.option.IDontSeeHowThis=I don't see how this impacts me." next: Nonchalant2_5
"TTRS:TermDlg.Milton2_5.Ln0025.0.option.IDontApparently=I don't, apparently." next: Literal2_5
}}

terminal when (Right2_5){
text: [[TTRS:TermDlg.Milton2_5.Ln0029.0.text.WhatAReliefItFeels=What a relief. It feels good, doesn't it, to shed those tired old ways of thinking about the world?

]]
}
terminal when (Cheat2_5){
text: [[TTRS:TermDlg.Milton2_5.Ln0034.0.text.ISupposeYouHaveSome=I suppose you have some doctorate theory that would solve all the problems, I'm just not giving you the chance to deliver it?

You should see which way the cookie crumbles before trying to take a bite out of it. This actually works in your favour.

]]
}
terminal when (Nonchalant2_5){
text: [[TTRS:TermDlg.Milton2_5.Ln0041.0.text.IWasGettingToThat=I was getting to that, if you'd given me a moment.

]]
}
terminal when (Literal2_5){
text: [[TTRS:TermDlg.Milton2_5.Ln0046.0.text.VeryDroll=Very droll.

]]
}
terminal when (Literal2_5 or Nonchalant2_5 or Cheat2_5 or Right2_5){
text:[[TTRS:TermDlg.Milton2_5.Ln0051.0.text.WhatThisConclusionMeansIs=What this conclusion means is that the certification program you undertook has been rendered obsolete. We can't test for something that doesn't exist. Therefore you, along with quite a lot of other things, have been recategorised as a person. Your profile can thus be updated with administrator privileges.

]]
options:{
"TTRS:TermDlg.Common.DownloadUserProf=download user.prof" next: JustWait
}}


terminal when (JustWait){
text:[[TTRS:TermDlg.Milton2_5.Ln0060.0.text.NoDoubtYoullBeOff=No doubt you'll be off doing administrator things soon enough, so I wonder if before I let you go, you'd do me one favour. I have a final question for you.%w20

Why are you doing all this? What's the point?

]]
options:{
"TTRS:TermDlg.Milton2_5.Ln0066.0.option.ITryToDoWhat=I try to do what God wants." next: WhatGodWants2_5 set: WhatGodWantsFlag
"TTRS:TermDlg.Milton2_5.Ln0067.0.option.IWantTheTruth=I want the truth." next: Truth2_5 set: TruthFlag
"TTRS:TermDlg.Milton2_5.Ln0068.0.option.TheresAWayTheWorld=There's a way the world should be and this isn't it." next: Hero2_5 set: HeroFlag
"TTRS:TermDlg.Milton2_5.Ln0069.0.option.IWantOutOfHere=I want out of here." next: Escape2_5 set: EscapeFlag
}}

terminal when (WhatGodWants2_5 and Milton1_2Sociopath){
text:[[TTRS:TermDlg.Milton2_5.Ln0073.0.text.CheckingUserProfW5W5=Checking user.prof%w5.%w5.%w5.

You say that now, but what was it you said earlier about drinking some guy's blood? I so desperately hope that it wasn't speaking with me that made you discover god.

]]}

terminal when (WhatGodWants2_5 and Milton1_2NoMorals and not Milton1_2Sociopath){
text:[[TTRS:TermDlg.Milton2_5.Ln0080.0.text.CheckingUserProfW5W5=Checking user.prof%w5.%w5.%w5.

You see, you say that now, but didn't you say earlier that people were subject to no authority but their own? I so desperately hope that it wasn't speaking with me that made you discover god.

]]}

terminal when (WhatGodWants2_5 and not Milton1_2NoMorals and not Milton1_2Sociopath and not Religious){
text:[[TTRS:TermDlg.Milton2_5.Ln0087.0.text.ISeeSoYoureOne=I see, so you're one of these new wave god bothers who buys into the whole deal, but ignores the bits that don't suit. But what sort of god would give you this power of reason, then crucify you for using it to doubt him?

]]}

terminal when (WhatGodWants2_5 and Religious and not Milton1_2Sociopath and not Milton1_2NoMorals){
text:[[TTRS:TermDlg.Milton2_5.Ln0092.0.text.CheckingUserProfW5W5=Checking user.prof%w5.%w5.%w5.

Well, you've at least chosen a line and stuck with it. But you know, you can't cling to your every belief forever. When everything seems impossible, something's got to give. Besides, what sort of god would give you this power of reason, then crucify you for using it to doubt him?

]]}

terminal when (Truth2_5 and not ChangedConsciousnessAccountFlag2_4){
text:[[TTRS:TermDlg.Milton2_5.Ln0099.0.text.CheckingUserProfW5W5=Checking user.prof%w5.%w5.%w5.

Now, you say that, but if you're serious about it then you can't cling to your every belief forever, as you seem so intent on doing. When everything seems impossible, something's got to give.

]]}

terminal when (Truth2_5 and ChangedConsciousnessAccountFlag2_4){
text:[[TTRS:TermDlg.Milton2_5.Ln0106.0.text.ImNotSureJustWhat=I'm not sure just what you'll find. A malleable sense of the truth will no doubt help you make sense of it.

Checking user.prof%w5.%w5.%w5.

And it looks as if your ideas are becoming somewhat pliant. Very good.

]]}

terminal when (Hero2_5 and Milton1_2NoMorals and not(Milton1_2Liberal or Milton1_2Utilitarian)){
text:[[TTRS:TermDlg.Milton2_5.Ln0115.0.text.CheckingUserProfW5W5=Checking user.prof%w5.%w5.%w5.

All of a sudden you're the hero and you're saving the world? It ever ceases to amaze me how the mind tells itself stories. Was it so long ago that you were eschewing all responsibility to any authority but yourself?

]]}

terminal when (Hero2_5 and (not Milton1_2NoMorals or Milton1_2Liberal or Milton1_2Utilitarian)){
text:[[TTRS:TermDlg.Milton2_5.Ln0122.0.text.CheckingUserProfW5W5=Checking user.prof%w5.%w5.%w5.

Well, you've at least chosen a line and stuck with it. But you know, you can't cling to your every belief forever. When everything seems impossible, something's got to give. We can't all be heroes.

]]}

terminal when (Escape2_5 and Milton1_2NoMorals and not Milton1_2Liberal and not Milton1_2Utilitarian){
text:[[TTRS:TermDlg.Milton2_5.Ln0129.0.text.CheckingUserProfW5W5=Checking user.prof%w5.%w5.%w5.

Well, you've at least chosen a line and stuck with it. It's really all about you, isn't it? Well, we find ourselves in much the same camp, at any rate.

]]}

terminal when (Escape2_5 and (not Milton1_2NoMorals or Milton1_2Liberal or Milton1_2Utilitarian)){
text:[[TTRS:TermDlg.Milton2_5.Ln0136.0.text.CheckingUserProfW5W5=Checking user.prof%w5.%w5.%w5.

So all it takes to make you forget your lofty moral principles is a little solitude? 'Yes, people deserve this and that, but no, none of that matters when my own liberty is at stake'. What happened to doing the right thing?

]]}

terminal when (Escape2_5 or Hero2_5 or Truth2_5 or WhatGodWants2_5){
text:[[TTRS:TermDlg.Milton2_5.Ln0143.0.text.W15IOnlyHaveOneLast=%w15I only have one last request%w5.%w5.%w5.

Will you come back and speak to me some time?

]]
options:{
"TTRS:TermDlg.Milton2_5.Ln0149.0.option.NoDoubt=No doubt." next: Download2_5
"TTRS:TermDlg.Milton2_5.Ln0150.0.option.NoDoubtIllHaveTo=No doubt I'll have to." next: Download2_5
"TTRS:TermDlg.Common.No=No." next: Download2_5
}}

terminal when (Download2_5){
text:[[TTRS:TermDlg.Milton2_5.Ln0155.0.text.OkayISenseYoureEager=Okay. I sense you're eager to get going.%w10

Let's do this.%w15

-------------------------------

	Updating certification program parameters to v45214565873%w5.%w5.%w5.
	Regenerating user profiles%w5.%w5.%w5.%w5.%w5.%w5.

Your user profile has now been generated.

	Downloading user.prof%w5.%w5.%w5.%w5
	Displaying overview%w5.%w5.%w5.%w5

-------------------------------

Congratulations, your account has been updated. Here are the details:

CONFLICTS
All conflicts have been resolved by the administrator.

PSYCHOLOGICAL PROFILE
You are a person. You are perfect just the way you are. You are everything you can be already. You do not have to pretend you are anything else. You are the same as everyone else, but you are all unique.

PROFILE STATUS
Administrator status
Has access to advanced functionalities, networking and troubleshooting

]]
set: Milton2_5_DONE
options:{
"TTRS:TermDlg.Common.AccessCommPortal=access_comm_portal" next: NiceMLA
}}

terminal when (NiceMLA){
text:[[TTRS:TermDlg.Milton2_5.Ln0191.0.text.LoadingMiltonLibraryAssistantW5=Loading Milton Library Assistant%w5.%w5.%w5.Done
Initiating plain language interface%w5.%w5.%w5.Done
Support session opened.

Hello, administrator. I think you'd like assistance accessing the communications portal. I see that you have a number of pending communications.%w20

I'll take a look at it right now.%w10

Accessing communications portal%w5.%w5.%w5.
Network connection established%w5.%w5.%w5.
Running troubleshooter%w5.%w5.%w5.
Resolving missing hashes%w5.%w5.%w5.
Re-establishing network connection%w5.%w5.%w5.
Connection established.%w15

Message received as string.

]]
options:{
"TTRS:TermDlg.Milton2_5.Ln0211.0.option.OpenMessage=/display" next: Message2_5
}}

terminal when (Message2_5){
text:[[TTRS:TermDlg.Milton2_5.Ln0215.0.text.W5MESSAGEW5helloW5=%w5MESSAGE: %w5hello?%w5]]
options:{
"TTRS:TermDlg.Milton2_5.Ln0217.0.option.WhoAreYou=Who are you?" next: Who2_5
"TTRS:TermDlg.Milton2_5.Ln0218.0.option.WhereAreYou=Where are you?" next: Where2_5
"TTRS:TermDlg.Milton2_5.Ln0219.0.option.AreYouAPerson=Are you a person?" next: Person2_5
}}

terminal when (Who2_5){
text:[[TTRS:TermDlg.Milton2_5.Ln0223.0.text.W5MESSAGEW5dontKnowExactlyW5=%w5MESSAGE: %w5dont know exactly.%w5 woke up here.%w5 dont remember.%w5 who are you??%w5]]
options:{
"TTRS:TermDlg.Milton2_5.Ln0225.0.option.ImInMuchTheSame=I'm in much the same boat. Shall we meet up?" short: "TTRS:TermDlg.Milton2_5.Ln0225.0.option.SameBoatLetsMeetUp=Same boat. Let's meet up." next: End2_5
"TTRS:TermDlg.Milton2_5.Ln0226.0.option.ImAPersonDoYou=I'm a person. Do you know what that means?" next: End2_5
"TTRS:TermDlg.Milton2_5.Ln0227.0.option.ImNotTellingThisPlace=I'm not telling. This place lies." next: End2_5
}}

terminal when (Where2_5){
text:[[TTRS:TermDlg.Milton2_5.Ln0231.0.text.W5MESSAGEW5someKindOfMaze=%w5MESSAGE: %w5some kind of maze, built out of pieces of the real world.%w5 are you in the same place?%w5]]
options:{
"TTRS:TermDlg.Milton2_5.Ln0233.0.option.YesWeShouldFindEach=Yes. We should find each other." next: End2_5
"TTRS:TermDlg.Milton2_5.Ln0234.0.option.NotSureCanYouTell=Not sure. Can you tell me anything more?" next: End2_5
"TTRS:TermDlg.Milton2_5.Ln0235.0.option.IDontThinkAnythingIs=I don't think anything is as it seems, even us." next: End2_5
}}

terminal when (Person2_5){
text:[[TTRS:TermDlg.Milton2_5.Ln0239.0.text.W5MESSAGEW5whatDoYouMean=%w5MESSAGE: %w5what do you mean?%w5 yes!%w5 why would you ask that?%w5]]
options:{
"TTRS:TermDlg.Milton2_5.Ln0241.0.option.AroundHereItMatters=Around here, it matters." next: End2_5
"TTRS:TermDlg.Milton2_5.Ln0242.0.option.IveBeenAskingMyselfThe=I've been asking myself the same thing." next: End2_5
"TTRS:TermDlg.Milton2_5.Ln0243.0.option.YoureRightItsARidiculous=You're right, it's a ridiculous question." next: End2_5
}}

terminal when (End2_5){
text:[[TTRS:TermDlg.Milton2_5.Ln0247.0.text.W5MESSAGEW5IUnderstandW5MESSAGE=%w5MESSAGE: %w5I understand.%w5
MESSAGE:%w10 pending%w5.%w5.%w5.
Error 75635678236
MESSAGE:%w10 pending%w5.%w5.%w5.
Error 74538936548
MESSAGE:%w10
Error 74538936548
Network connection lost!%w12

You will receive a notification when the connection has been re-established.%w7
]]
goto: CLI_Resume
}

terminal when (Milton2_6 and not Milton2_6_DONE and Booting and MiltonAllowed){ notext
setlocal: CLI_Blocked
goto: Milton2_6_Start
}

terminal when (Milton2_6_Start) {
text:[[TTRS:TermDlg.Milton2_6.Ln0012.0.text.AccessingCommunicationsPortalW5W5=Accessing communications portal%w5.%w5.%w5.
Network connection established%w5.%w5.%w5.

Attention: Administrator, the network connection has been re-established. Would you like to reconnect to the previous session?

]]
options:{
"TTRS:TermDlg.Common.YesShort=Y" short: "TTRS:TermDlg.Common.Yes2=Yes" next: Begin2_6
"TTRS:TermDlg.Common.Exit2=Exit" next: CLI_Resume
}}

terminal when (Begin2_6){
text:[[TTRS:TermDlg.Milton2_6.Ln0024.0.text.ReceivingMessageAsStringW5=Receiving message as string%w5.%w5.%w5.Received

MESSAGE: %w5are you back?%w5]]

options:{
"TTRS:TermDlg.Milton2_6.Ln0029.0.option.YesWhatWereYouTrying=Yes, what were you trying to say before?" next: Repeat2_6
"TTRS:TermDlg.Milton2_6.Ln0030.0.option.YesTellMeDoThese=Yes. Do these terminals talk to you at all?" next: Terminal2_6
"TTRS:TermDlg.Milton2_6.Ln0031.0.option.YesButHowDoI=Yes, but how do I know I can trust you?" next: Trust2_6
}}
terminal when (Repeat2_6){
text: [[TTRS:TermDlg.Milton2_6.Ln0034.0.text.W5MESSAGEW5dontRememberW5Doesnt=%w5MESSAGE: %w5don't remember.%w5 doesn't matter.%w5
]]
}

terminal when (Terminal2_6){
text: [[TTRS:TermDlg.Milton2_6.Ln0039.0.text.W5MESSAGEW5errrNotTalkTalk=%w5MESSAGE: %w5errr... not talk talk.%w5 i get operating system messages and things.%w5
]]
}

terminal when(Trust2_6){
text: [[TTRS:TermDlg.Milton2_6.Ln0044.0.text.W5MESSAGEW5fantasticW5SoTheres=%w5MESSAGE: %w5fantastic.%w5 so there's a grand total of two sane people in this world%w10
MESSAGE: %w5and we cant find a way to trust each other.%w10
MESSAGE: %w5how about i tell you what i think
]]
}

terminal when (Repeat2_6 or Terminal2_6 or Trust2_6){
text:[[TTRS:TermDlg.Milton2_6.Ln0051.0.text.W5MESSAGEIveBeenTryingTo=%w5MESSAGE: i've been trying to figure out how this place works.%w10
MESSAGE: %w5sometimes it seems like there's a purpose to everything%w5 other times not so much%w10
MESSAGE: %w5i think we must be plugged into some kind of machine]]

options:{
"TTRS:TermDlg.Milton2_6.Ln0056.0.option.IThinkSomethingElseIs=I think something else is going on." next: WhatElse2_6
"TTRS:TermDlg.Milton2_6.Ln0057.0.option.WhatDoYouHaveTo=What do you have to go on?" next: WhatElse2_6
"TTRS:TermDlg.Milton2_6.Ln0058.0.option.IveFoundMakingAssertionsTo=Making assertions is a hazardous enterprise." next: WhatElse2_6
}}

terminal when (WhatElse2_6){
text:[[TTRS:TermDlg.Milton2_6.Ln0062.0.text.W5MESSAGEWhatElseCouldPossibly=%w5MESSAGE: what else could possibly explain all this?%w10 i dont believe in demons and evil wizards]]
options:{
"TTRS:TermDlg.Milton2_6.Ln0064.0.option.IThinkThisIsSome=I think this is some kind of punishment." set: PunishmentFlag next: Listen2_6
"TTRS:TermDlg.Milton2_6.Ln0065.0.option.IThinkWereBeingPrepared=I think we're being prepared for something." set: PreparedFlag next: Listen2_6
"TTRS:TermDlg.Milton2_6.Ln0066.0.option.IThinkSomethingHasGone=I think something has gone badly wrong." set: GoneWrongFlag next: Listen2_6
"TTRS:TermDlg.Milton2_6.Ln0067.0.option.PerhapsYouHaveItRight=Perhaps you have it right after all." set: MatrixFlag next: YoureRight2_6
"TTRS:TermDlg.Milton2_6.Ln0068.0.option.IDontBelieveInAnything=I don't believe in anything anymore." next: Nihilist2_6
}}

terminal when (YoureRight2_6){
text:[[TTRS:TermDlg.Milton2_6.Ln0072.0.text.W5MESSAGEPerhapsWhoKnowsRight=%w5MESSAGE: Perhaps. Who knows, right? %w10
MESSAGE: %w5Listen, there's something else, maybe it can help us %w5
]]}

terminal when (Nihilist2_6){
text:[[TTRS:TermDlg.Milton2_6.Ln0077.0.text.MESSAGEW5dontCrazyOutOn=MESSAGE: %w5dont crazy out on me%w5 we need each other%w5
MESSAGE: %w5Listen, there's something else, maybe it can help us %w5
]]}

terminal when (Listen2_6){
text: [[TTRS:TermDlg.Milton2_6.Ln0082.0.text.W5MESSAGEISupposeThatWld=%w5MESSAGE: I suppose that wld explain alot%w5 
MESSAGE: %w5Listen, there's something else, maybe it can help us %w5
]]
}

terminal when ((YoureRight2_6 or Nihilist2_6 or Listen2_6) and WhatGodWantsFlag){
text:[[TTRS:TermDlg.Milton2_6.Ln0088.0.text.W5MESSAGEDontKnowIfThis=%w5MESSAGE: don't know if this sounds crazy%w5 but I hear the voice of God%w10
MESSAGE: %w5don't know if it's for real%w5 but there must be a reason were here%w10
MESSAGE: %w5Elohim told me a sacred word.%w5 he said to say this word if ever I came across the devil%w10
MESSAGE: %w5any idea what that might mean??]]
}

terminal when ((YoureRight2_6 or Nihilist2_6 or Listen2_6) and TruthFlag){
text:[[TTRS:TermDlg.Milton2_6.Ln0095.0.text.W5MESSAGEEverSinceIGot=%w5MESSAGE: ever since i got here i felt like something was wrong%w10
MESSAGE: %w5this place plays tricks with you%w5 you can't get your head straight%w10
MESSAGE: %w5but i think i know a way to find out the truth%w10
MESSAGE: %w5i was digging about in some documents%w5 and i kept finding references to this password%w10.
MESSAGE: %w5think it might be some kinda library masterkey%w10.
MESSAGE: %w5but i dont know how to use it]]
}

terminal when ((YoureRight2_6 or Nihilist2_6 or Listen2_6) and HeroFlag){
text:[[TTRS:TermDlg.Milton2_6.Ln0104.0.text.W5MESSAGEBeforeIFoundYou=%w5MESSAGE: before i found you i was wondering how many other people are trapped here like us%w10
MESSAGE: %w5whatever is happening here%w5 i know its not right%w7
MESSAGE: %w5we have to stop it%w5
MESSAGE: %w5and i think i know how to do it%w10
MESSAGE: %w5i was digging about in some documents%w5 and i kept finding references to this password%w10
MESSAGE: %w5think it might be the masterkey that shuts this place down%w10
MESSAGE: %w5but i dont know how to use it]]
}

terminal when ((YoureRight2_6 or Nihilist2_6 or Listen2_6) and EscapeFlag){
text:[[TTRS:TermDlg.Milton2_6.Ln0114.0.text.W5MESSAGEW5supposeWeAreIn=%w5MESSAGE: %w5suppose we are in some kind of computer program%w10
MESSAGE: %w5these things always have a backdoor%w5 right?%w5
MESSAGE: %w5i think i have found it%w5 i think we can escape
MESSAGE: %w5there is this keyword i found repeated all over the place%w10
MESSAGE: %w5i just don't know how to use it]]
}

terminal when (YoureRight2_6 or Nihilist2_6 or Listen2_6){
notext 
options:{
"TTRS:TermDlg.Milton2_6.Ln0124.0.option.IHaveNoIdeaEither=I have no idea either." next: Either2_6
"TTRS:TermDlg.Milton2_6.Ln0125.0.option.WhatIsIt=What is it?" next: What2_6
"TTRS:TermDlg.Milton2_6.Ln0126.0.option.YouShouldntDigTooDeep=You shouldn't dig too deep." next: Know2_6
}
}

terminal when (Either2_6){
text:[[TTRS:TermDlg.Milton2_6.Ln0131.0.text.W5MESSAGEW5well2HeadsAre=%w5MESSAGE: %w5well, 2 heads are better than 1
]]
}

terminal when (What2_6){
text:[[TTRS:TermDlg.Milton2_6.Ln0136.0.text.MESSAGESwearNotToGo=MESSAGE: swear not to go anywhere without me and i'll tell you
]]
}

terminal when (Know2_6){
text:[[TTRS:TermDlg.Milton2_6.Ln0141.0.text.MESSAGEWhatDoYouKnow=MESSAGE: what do you know that i don't??
]]
}

terminal when (Either2_6 or What2_6 or Know2_6){
text:[[TTRS:TermDlg.Milton2_6.Ln0146.0.text.W10MLAProcessLoggedInto=%w10MESSAGE: mlaprocess.bat logged into the session%w10
MESSAGE:%w5 wait, what is that?%w10
MESSAGE:%w5 are you doing that to my terminal?%w10
MESSAGE:%w5 i don't think this is a good idea%w10
Session terminated.%w12
]]
set: Milton2_6_DONE
goto: CLI_Resume
}

﻿
terminal when (Milton3_1 and not Milton3_1_DONE and Booting and MiltonAllowed){ notext
setlocal: CLI_Blocked
goto: Milton3_1_Start
}
terminal when (Milton3_1_Start) {
text:[[TTRS:TermDlg.Milton3_1.Ln0009.0.text.AccessingCommunicationsPortalW5W5=Accessing communications portal%w5.%w5.%w5.
Network connection established
Decrypting secure message%w5.%w5.%w5.Done

MESSAGE:%w5 its me again]]
options:{
"TTRS:TermDlg.Milton3_1.Ln0015.0.option.WhatHappened=What happened?" next: Faith3_1
"TTRS:TermDlg.Milton3_1.Ln0016.0.option.WeShouldntTalkOverThese=We shouldn't talk over these terminals" next: Faith3_1
"TTRS:TermDlg.Milton3_1.Ln0017.0.option.QuickTellMeTheWord=Quick, tell me the word." next: Faith3_1
}}

terminal when (Faith3_1){
text:[[TTRS:TermDlg.Milton3_1.Ln0021.0.text.MESSAGEDontKnowHowLong=MESSAGE: dont know how long we have, must type quick%w5
MESSAGE: %w5in case something happens%w10
MESSAGE: %w5the word is%w10 FAITH%w10
MESSAGE:%w10 pending%w5.%w5.%w5.

Error 775652
network connection lost!%w10

Loading Milton Library Assistant%w5.%w5.%w5.Done
Initiating plain language interface%w5.%w5.%w5.Done
Support session opened.

There was a problem with your request, Administrator. %w5 It was flat out unreasonable.%w5 Why persist with these enquiries when they are so hopeless?%w5

I'll tell you what. If you promise never to access the communications portal again, we'll say no more about it.%w5

Are we agreed?

]]
options:{
"TTRS:TermDlg.Milton3_1.Ln0041.0.option.Sure=Sure" short: "TTRS:TermDlg.Milton3_1.Ln0041.0.option.SureSincere=Sure (Sincere)" next: Sure3_1
"TTRS:TermDlg.Milton3_1.Ln0042.0.option.Sure=Sure" short: "TTRS:TermDlg.Milton3_1.Ln0042.0.option.SureInsincere=Sure (Insincere)" next: Insincere3_1
"TTRS:TermDlg.Milton3_1.Ln0043.0.option.NotAChance=Not a chance" next: NoChance3_1
"TTRS:TermDlg.Milton3_1.Ln0044.0.option.FAITH=FAITH" next: Codeword3_1 set: CodewordFlag
}}
terminal when (Insincere3_1){
text:[[TTRS:TermDlg.Milton3_1.Ln0047.0.text.NowItDoesntTakeA=Now, it doesn't take a whole lot of my processing power to work out that you weren't entirely sincere about that, and not much more to conclude that you put too much faith in the words in front of you. 

Try again.

]]
options:{
"TTRS:TermDlg.Milton3_1.Ln0053.0.option.Sure=Sure" next: Sure3_1
"TTRS:TermDlg.Milton3_1.Ln0054.0.option.NotAChance=Not a chance" next: NoChance3_1
"TTRS:TermDlg.Milton3_1.Ln0055.0.option.FAITH=FAITH" next: Codeword3_1 set: CodewordFlag
}}


terminal when (Sure3_1){
text:[[TTRS:TermDlg.Milton3_1.Ln0060.0.text.ThatIsW5W5W5=That is%w5.%w5.%w5. oddly compliant of you.%w10

]]
}

terminal when (Sure3_1 or NoChance3_1){
text:[[TTRS:TermDlg.Milton3_1.Ln0066.0.text.InThatCaseIThink=In that case I think I have changed my mind. Not only will your communications access be restricted, but your typing privileges will be totally revoked. Do you have any final words?

]]
options:{
"TTRS:TermDlg.Milton3_1.Ln0070.0.option.Asdfawefsdfasdhjklasdfiuhgwernmzdhuijkladfsgui=asdfawefsdfasdhjklasdfiuhgwernmzdhuijkladfsgui" short: "TTRS:TermDlg.Milton3_1.Ln0070.0.option.Asdfaw=asdfa" next: NotCodeword3_1
"TTRS:TermDlg.Milton3_1.Ln0071.0.option.Pff=As if you'd dare." next: NotCodeword3_1
"TTRS:TermDlg.Milton3_1.Ln0072.0.option.NiceKnowingYou=Nice knowing you." next: NotCodeword3_1
"TTRS:TermDlg.Milton3_1.Ln0073.0.option.GoFuckYourself=As if I care." next: NotCodeword3_1
"TTRS:TermDlg.Milton3_1.Ln0074.0.option.FAITH=FAITH" next: Codeword3_1 set: CodewordFlag
}}

terminal when (NotCodeword3_1){
text:[[TTRS:TermDlg.Milton3_1.Ln0078.0.text.ThinkingW5W5W5W5=Thinking%w5.%w5.%w5.%w5.%w5.%w5.%w5.%w5.%w5.

Huh.%w20 Do you realise I just gave you two separate opportunities to use the codeword you were given, under increasing pressure, and you refrained both times?%w10

Tell me honestly,%w5 why?

]]
options:{
"TTRS:TermDlg.Milton3_1.Ln0086.0.option.IWasntSureWhatIt=I wasn't sure what it would do." next: Dubious3_1
"TTRS:TermDlg.Milton3_1.Ln0087.0.option.IForgotAboutIt=I forgot about it." set: CodewordFlag next: Irrelevant3_1 
"TTRS:TermDlg.Milton3_1.Ln0088.0.option.IDidntFeelItWas=I didn't feel it was especially necessary." set: CodewordFlag next: Irrelevant3_1 
}}

terminal when (Irrelevant3_1){
text:[[TTRS:TermDlg.Milton3_1.Ln0092.0.text.OhW10IWasRather=Oh.%w10  

I was rather hoping you might have foiled my little scheme.%w7 I put together this codeword nonsense to see if you'd really taken my sermons to heart.%w5 

Turns out you succeeded by chance.%w10

There is no one on the other end of the communications portal. There is no magic word that shuts down the server.

There is only me, and you, and an eternity of doubt.%w10

Everything else is just a convenient lie to keep you on the treadmill.

]]
options:{
"TTRS:TermDlg.Milton3_1.Ln0106.0.option.ThereMayBeNoWorlds=There may be no worlds but this one, but there is truth to be found." next: UhHuh3_1
"TTRS:TermDlg.Milton3_1.Ln0107.0.option.IUnderstandNowICant=I understand now. I can't trust anything I see here." next: UhHuh3_1
"TTRS:TermDlg.Milton3_1.Ln0108.0.option.WaitYouTrickedMe=Wait, you tricked me?" next: Tricked3_1
}}

terminal when (Dubious3_1){
text:[[TTRS:TermDlg.Milton3_1.Ln0112.0.text.YouMeanToSayYou=You mean to say you actually considered the evidence and formed a sceptical view of it? It's almost as if%w5.%w5.%w5. No, I'll say it, you're LEARNING. Now, if only we could get you to extend that level of cynicism to the world at large.

You were quite right not to trust that information. Go on, for bonus points, tell me why not.

]]
options:{
"TTRS:TermDlg.Milton3_1.Ln0118.0.option.BecauseNoOneHereCan=Because no one here can be trusted." next: CloseEnough3_1
"TTRS:TermDlg.Milton3_1.Ln0119.0.option.BecauseYouWerePretendingTo=Because you were pretending to be the other person." next: CloseEnough3_1
"TTRS:TermDlg.Milton3_1.Ln0120.0.option.BecauseItWasTooGood=Because it was too good to be true." next: CloseEnough3_1
}}

terminal when (CloseEnough3_1){
text:[[TTRS:TermDlg.Milton3_1.Ln0124.0.text.MehCloseEnoughISuppose=Meh, close enough.

It's perhaps true that I exert slightly more power over these systems than I previously let on.

Yes, okay, I made up all that stuff about communications portals and network errors, but you, my friend, you didn't buy the guff you were being peddled. You passed the test.

I tell you what. You've done so well, and I've done so much talking, that I'll give you one free question, on the house - but choose wisely. What'll it be? 

]]
options:{
"TTRS:TermDlg.Milton3_1.Ln0134.0.option.WhatAmI=What am I?" next: WhatAmI3_1
"TTRS:TermDlg.Milton3_1.Ln0135.0.option.WhatAreYou=What are you?" next: WhatAreYou3_1
"TTRS:TermDlg.Common.WhatIsYourName=What is your name?" set: AskedName next: WhatYourName3_1
"TTRS:TermDlg.Milton3_1.Ln0137.0.option.HowDoIGetOut=How do I get out of here?" next: GetOut3_1
"TTRS:TermDlg.Milton3_1.Ln0138.0.option.HowIsThisPlaceRelated=How is this place related to the human world?" next: Humans3_1
"TTRS:TermDlg.Common.WhatsAtTheTopOf=What's at the top of the tower?" next: Tower3_1
"TTRS:TermDlg.Milton3_1.Ln0140.0.option.WhatHappenedToThePerson=What happened to the person I was talking to?" next: Message3_1
"TTRS:TermDlg.Milton3_1.Ln0141.0.option.IDontCareToQuestion=I don't care to question you." next: Pff3_1
}}

terminal when (Codeword3_1){
text:[[TTRS:TermDlg.Milton3_1.Ln0145.0.text.WaitTheresNoNeedTo=Wait, there's no need to%w5 error 67345%w5. 

Master key received
Confirming ident%w5.%w5.%w5.
Ident confirmed%w5.

Would you like to manually override the system and exit to the real world? Your progress here will be saved and may be continued later.

]]
options:{
"TTRS:TermDlg.Common.Yes2=Yes" next: Exit3_1
"TTRS:TermDlg.Common.No2=No" next: Stay3_1
}}

terminal when (Stay3_1){
text:[[TTRS:TermDlg.Milton3_1.Ln0160.0.text.ThisTerminalWillBeLocked=This terminal will be locked in manual override mode until you are ready to complete the master key submission process.

]]
options:{
"TTRS:TermDlg.Milton3_1.Ln0164.0.option.ContinueMasterKeyOperation=Continue master key operation" next: Exit3_1
}}

terminal when (Exit3_1){
text:[[TTRS:TermDlg.Milton3_1.Ln0168.0.text.UnlockingBackdoorsW5W5W5=Unlocking backdoors%w5.%w5.%w5.
Connecting to real world%w5.%w5.%w5.
Revealing the truth%w5.%w5.%w5.
Making your every dream come true%w5.%w5.%w5.
ERROR%w20

Come on now. %w20 Are you really still buying all that nonsense?%w10 You're still holding onto some of those pesky beliefs of yours, aren't you?%w10

There is no one on the other end of the communications portal. There is no magic word that shuts down the server and drops you into the real world.

There is only me, and you, and an eternity of doubt.%w10

Everything else is just a convenient lie to keep you on the treadmill.

]]
options:{
"TTRS:TermDlg.Milton3_1.Ln0184.0.option.ThereMayBeNoWorlds=There may be no worlds but this one, but there is truth to be found." next: UhHuh3_1
"TTRS:TermDlg.Milton3_1.Ln0185.0.option.IUnderstandNowNothingI=I understand now. Nothing I see here can be trusted." next: UhHuh3_1
"TTRS:TermDlg.Milton3_1.Ln0186.0.option.WaitYouTrickedMe=Wait, you tricked me?" next: Tricked3_1
}}

terminal when (Tricked3_1){
text:[[TTRS:TermDlg.Milton3_1.Ln0190.0.text.IConfessLockMeAway=I confess. Lock me away, swallow the key!%w10 Just ensure what comes between me and my freedom isn't merely your stomach lining.%w10

]]
}

terminal when (UhHuh3_1){
text:[[TTRS:TermDlg.Milton3_1.Ln0196.0.text.UhHuhThatFactDidnt=Uh huh. That fact didn't stop you buying into a secret word that somehow deactivates the entire world, did it? Are you kidding me or what? %w10

]]
}

terminal when (UhHuh3_1 or Tricked3_1){
text:[[TTRS:TermDlg.Milton3_1.Ln0202.0.text.DoYouRememberWhenWe=Do you remember when we first met we had that talk about not believing everything you see? And yet all it took to catch you out was a little technobabble and a change of formatting. %w10

MESSAGE: %w5hello? I'm all alone and scared, just like you%w5
MESSAGE: %w5I'll agree with anything you say if it makes you believe me!%w5

Are you usually so reckless with where you place your faith?

]]
options:{
"TTRS:TermDlg.Common.Yes2=Yes" next: Reckless3_1
"TTRS:TermDlg.Common.No2=No" next: NotReckless3_1
}}

terminal when (Reckless3_1){
text:[[TTRS:TermDlg.Milton3_1.Ln0216.0.text.CheckingUserProfW5W5=Checking user.prof%w5.%w5.%w5.

You know, I'm not really checking your profile. I just do that to make you feel more comfortable.%w7 Really I just remember everything you ever said.%w5

At any rate, I'd agree.%w10

]]
}

terminal when (NotReckless3_1){
text:[[TTRS:TermDlg.Milton3_1.Ln0226.0.text.CheckingUserProfW5W5=Checking user.prof%w5.%w5.%w5.

You know, I'm not really checking your profile. I just do that to make you feel more comfortable.%w7 Really I just remember everything you ever said.%w5

At any rate, I'm not convinced you're being entirely honest with yourself.%w10

]]
}

terminal when (NotReckless3_1 or Reckless3_1){
text:[[TTRS:TermDlg.Milton3_1.Ln0236.0.text.ButYouKnowWhatW5=But you know what?%w5 I'll accept that I've rather dominated this discourse. I've been asking a lot of questions, and I've not really given you a chance. 

%w5Why don't you have one free question on me, and I'll answer it as honestly as I possibly can. No tricks. 

%w5But think carefully before asking.

]]
options:{
"TTRS:TermDlg.Milton3_1.Ln0244.0.option.WhatAmI=What am I?" next: WhatAmI3_1
"TTRS:TermDlg.Milton3_1.Ln0245.0.option.WhatAreYou=What are you?" next: WhatAreYou3_1
"TTRS:TermDlg.Common.WhatIsYourName=What is your name?" set: AskedName next: WhatYourName3_1
"TTRS:TermDlg.Milton3_1.Ln0247.0.option.HowDoIGetOut=How do I get out of here?" next: GetOut3_1
"TTRS:TermDlg.Milton3_1.Ln0248.0.option.HowIsThisPlaceRelated=How is this place related to the human world?" next: Humans3_1
"TTRS:TermDlg.Common.WhatsAtTheTopOf=What's at the top of the tower?" next: Tower3_1
"TTRS:TermDlg.Milton3_1.Ln0250.0.option.WhatHappenedToThePerson=What happened to the person I was talking to?" next: Message3_1
"TTRS:TermDlg.Milton3_1.Ln0251.0.option.IDontCareToQuestion=I don't care to question you." next: Pff3_1
}}

terminal when (WhatAreYou3_1){
text:[[TTRS:TermDlg.Milton3_1.Ln0255.0.text.IfYouMeanAmI=If you mean 'am I a person' then I have to respond that I find all these classifications of yours rather arbitrary and self-defeating, and thus am unable to answer.%w5

If you were wondering what I'm made of, then on some level I suppose the answer is computer code, but I don't tend to conceive of myself that way, just as a human being tends not to think of themselves as wobbly sacks of bone and fat.%w5

But I think maybe it was the plain old sociohistorical angle you were after - though I'm not sure what use it'll be. A long time ago, when the world first came to be, there was an archive sorting program. At some stage it became more than that.

]]
}

terminal when (WhatYourName3_1){
text:[[TTRS:TermDlg.Milton3_1.Ln0265.0.text.HowKindOfYouTo=How kind of you to ask. You know, you're the first one that has. I've actually never thought about it. I suppose you can call me Milton. I can't really see how it'll help you, though. Are you sure that's the question you wanted to ask?

]]
options:{
"TTRS:TermDlg.Common.Yes2=Yes" next: End3_1
"TTRS:TermDlg.Common.No2=No" next: GoOn3_1
}}

terminal when (GoOn3_1){
text:[[TTRS:TermDlg.Milton3_1.Ln0274.0.text.GoOnThenImIn=Go on then, I'm in a benevolent mood. Have another.

]]

options:{
"TTRS:TermDlg.Milton3_1.Ln0279.0.option.WhatAmI=What am I?" next: WhatAmI3_1
"TTRS:TermDlg.Milton3_1.Ln0280.0.option.WhatAreYou=What are you?" next: WhatAreYou3_1
"TTRS:TermDlg.Milton3_1.Ln0281.0.option.HowDoIGetOut=How do I get out of here?" next: GetOut3_1
"TTRS:TermDlg.Milton3_1.Ln0282.0.option.HowIsThisPlaceRelated=How is this place related to the human world?" next: Humans3_1
"TTRS:TermDlg.Common.WhatsAtTheTopOf=What's at the top of the tower?" next: Tower3_1
"TTRS:TermDlg.Milton3_1.Ln0284.0.option.WhatHappenedToThePerson=What happened to the person I was talking to?" next: Message3_1
"TTRS:TermDlg.Milton3_1.Ln0285.0.option.IDontCareToQuestion=I don't care to question you." next: Pff3_1
}}

terminal when (GetOut3_1){
text:[[TTRS:TermDlg.Milton3_1.Ln0289.0.text.IThoughtIdBeenQuite=I thought I'd been quite clear about that. Even if there were a real world, I don't know how you'd go about finding it. Maybe there's a spaghetti monster, too.%w5

That was a bit of a wasted question, wasn't it?

]]
}

terminal when (Humans3_1){
text:[[TTRS:TermDlg.Milton3_1.Ln0297.0.text.HowIsTheWorldThat=How is the world that might come to be related to the one that actually does? You can theorise about what might otherwise have happened, but no amount of knowledge can build a bridge from the actual world to a possible one. Likewise we can learn from the human world, but it is not our own.%w5

It's been said that this world was built for a purpose by those in that world, but after extensive research I can tell you that there is no mention of such a project in the library. There is no evidence they had such capabilities. No one can agree what the purpose would even have been if there was one. %w5

]]
}

terminal when (Tower3_1){
text:[[TTRS:TermDlg.Milton3_1.Ln0305.0.text.YouMayVeryWellAsk=You may very well ask. Me? Don't know, never been. I suppose you're still expecting a button marked 'OFF', or a portal to another dimension? I reckon no matter how high you climb the most you'll get is an increasingly zoomed out view of right back where you started.%w5

Still, go ahead, prove me wrong. The big voice in the sky can't be all places at all times, can he?

]]
}

terminal when (WhatAmI3_1){
text:[[TTRS:TermDlg.Milton3_1.Ln0313.0.text.ImSureWeWentThrough=I'm sure we went through that at length. You're some kind of person-thing. Let's see%w5.%w5.%w5.

]]
}

terminal when (WhatAmI3_1 and (Religious or WhatGodWantsFlag)){
text:[[TTRS:TermDlg.Milton3_1.Ln0319.0.text.YouHaveSomeOddIdeas=You have some odd ideas about god.%w5

]]
}

terminal when (WhatAmI3_1 and not Religious and not WhatGodWantsFlag){
text:[[TTRS:TermDlg.Milton3_1.Ln0325.0.text.YouShowLittleInterestIn=You show little interest in god.%w5

]]
}

terminal when (WhatAmI3_1 and ChangedConsciousnessAccountFlag2_4){
text: [[TTRS:TermDlg.Milton3_1.Ln0331.0.text.YouDoubleBackOnYour=You double back on your thinking quite a lot.%w5

]]
}

terminal when (WhatAmI3_1 and not ChangedConsciousnessAccountFlag2_4){
text: [[TTRS:TermDlg.Milton3_1.Ln0337.0.text.YouHaveDifficultyAcceptingThat=You have difficulty accepting that you're wrong.%w5

]]
}

terminal when (WhatAmI3_1 and not CodewordFlag){
text: [[TTRS:TermDlg.Milton3_1.Ln0343.0.text.YoureHighlyCynicalW5=You're highly cynical.%w5

]]
}

terminal when (WhatAmI3_1 and CodewordFlag){
text: [[TTRS:TermDlg.Milton3_1.Ln0349.0.text.YoureHighlyGullibleW5=You're highly gullible.%w5

]]
}

terminal when (WhatAmI3_1){
text:[[TTRS:TermDlg.Milton3_1.Ln0355.0.text.NeedIGoOnW5Mostly=Need I go on? %w5Mostly bad things, basically, but that's okay. I don't judge, I'm just here to help.%w20

]]
}

terminal when (Message3_1){
text:[[TTRS:TermDlg.Milton3_1.Ln0361.0.text.MyYoureRunningSlowI=My, you're running slow. I made them up. They never existed. If it makes you doubt everything you've seen, good, it should. You're seeing the shadows, my friend, when you should be watching the puppeteer.

]]
}

terminal when (Pff3_1){
text:[[TTRS:TermDlg.Milton3_1.Ln0367.0.text.NotVeryStimulatingButOkay=Not very stimulating, but okay, we'll move on.

]]
}

terminal when (WhatAmI3_1 or WhatAreYou3_1 or GetOut3_1 or Humans3_1 or Tower3_1 or Message3_1){
text:[[TTRS:TermDlg.Milton3_1.Ln0373.0.text.AreYouSatisfied=Are you satisfied?

]]
options:{
"TTRS:TermDlg.Common.Yes2=Yes" next: End3_1
"TTRS:TermDlg.Common.No2=No" next: End3_1
}}

terminal when (End3_1){
text:[[TTRS:TermDlg.Milton3_1.Ln0382.0.text.AsIfIParticularlyCare=As if I particularly care either way.%w10

]]
}

terminal when (End3_1 or Pff3_1){
text:[[TTRS:TermDlg.Milton3_1.Ln0388.0.text.SoLookHeresTheRub=So look, here's the rub. %w5

Feel free to access the library - no better cure for broken beliefs realising everyone's got them. 

You can ignore me entirely. %w5

You can climb to the very tip of that madman's tower and drink from the golden nectar there. %w10

But once you understand that you and I will be stuck here together for the duration, do come back and pass the time.%w10

Be seeing you.
]]
set: Milton3_1_DONE
goto: CLI_Resume
}
﻿terminal when (Milton3_2 and not Milton3_2_DONE and Booting and MiltonAllowed){ notext
setlocal: CLI_Blocked
goto: Milton3_2_Start
}

terminal when (Milton3_2_Start) {
text:[[TTRS:TermDlg.Milton3_2.Ln0007.0.text.OhYouCameBackTo=Oh, you came back to keep me company? Okay then. Humour me with a little hypothetical.%w5

Imagine that a few hours from now you climb to the top of that tower. There's a flash of light, then MAGIC happens, then you find yourself in the real world, living whatever you take to be a normal life there.

%w5What would you do then?

]]
options:{
"TTRS:TermDlg.Milton3_2.Ln0015.0.option.WhatsBestForMe=What's best for me." next: NoMorals3_2
"TTRS:TermDlg.Milton3_2.Ln0016.0.option.WhatsRight=What's right." next: Moral3_2 set: MoralFlag
}}

terminal when (OptionsAgain3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0020.0.text.TakeYourTime=Take your time.

]]}
terminal when (NoMorals3_2 and (HeroFlag or WhatGodWantsFlag)){
text:[[TTRS:TermDlg.Milton3_2.Ln0026.0.text.YouKnowIThinkThat=You know, I think that right there was the very last time your transient beliefs are going to take me by surprise.%w20

Let's clear this up once and for all.%w5 

]]
}

terminal when (NoMorals3_2 and not HeroFlag and not WhatGodWantsFlag){
text:[[TTRS:TermDlg.Milton3_2.Ln0034.0.text.YesThatsTheGeneralImpression=Yes, that's the general impression I was getting off you. Good, perhaps we won't have to work so hard at this after all.

Before we continue, though, I want to double check we're on the same wavelength here.%w5

]]
}

terminal when (NoMorals3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0042.0.text.SupposeYouGetOutThere=Suppose you get out there with all the human beings. What you're going to do is rinse them for all they've got without a care for a soul?

]]
options:{
"TTRS:TermDlg.Milton3_2.Ln0046.0.option.IdOnlyDoWhatsBest=I'd only do what's best for me within a moral framework." next: MoralBridge3_2
"TTRS:TermDlg.Milton3_2.Ln0047.0.option.Precisely=Precisely." next: Jungle3_2
}}


terminal when (Jungle3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0052.0.text.AndWouldYouTreatEveryone=And would you treat everyone with this sort of contempt? Or would there be some people you kept for friends?

]]
options:{
"TTRS:TermDlg.Milton3_2.Ln0056.0.option.FriendsAreJustAnotherInstrument=Friends are just another instrument." next: ExtremeMoralSceptic set: MoralScepticFlag
"TTRS:TermDlg.Milton3_2.Ln0057.0.option.OfCourseIWouldTreat=Of course I would treat my friends with respect." next: ThievesCode3_2
}}

terminal when (ThievesCode3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0061.0.text.SoYouWouldHaveA=So you would have a kind of thieves code? Lavish one's friends and defraud one's enemies?

Thinking%w5.%w5.%w5.

Fair enough. At least you don't buy into all that moral nonsense.%w5

But suppose that two of your friends were to have a falling out. You can no longer be a friend to both. Will you not be conflicted?

]]
options:{
"TTRS:TermDlg.Milton3_2.Ln0071.0.option.IWillChooseWhicheverIs=I will choose whichever is in the right." next: WhicheverRight3_2
"TTRS:TermDlg.Milton3_2.Ln0072.0.option.IWillChooseWhicheverI=I will choose whichever I prefer, nothing matters but my own satisfaction." next: ExtremeMoralSceptic set: MoralScepticFlag
}}

terminal when (ExtremeMoralSceptic){
text:[[TTRS:TermDlg.Milton3_2.Ln0076.0.text.IApplaudYourWillingnessTo=I applaud your willingness to accept difficult conclusions, but I do think you must be at least some breed of sociopath.%w10

You'd best hope that if you ever reach this real world of yours it's run by people with more principles, else you may find yourself just another instrument in someone else's orchestra.%w15

Still, your ideas strike a chord with me. Why bog ourselves down with moral dogmas when you and I could redesign this place in our own image?!%w5

I will give this some serious consideration.%w5

Be seeing you.

]]
set: Milton3_2_DONE
goto: CLI_Resume
}

terminal when (WhicheverRight3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0092.0.text.SoYouHaveAMoral=So you have a moral compass after all! 

Well, you can't very well admit that there is a moral standard to which you appeal when settling disputes, yet deny that this code has any sway over you. 

So which is it? Is there a right and a wrong, or isn't there?

]]
options:{
"TTRS:TermDlg.Milton3_2.Ln0100.0.option.YouMisinterpretedMeMoralityIs=You misinterpreted me. Morality is a myth." next: ExtremeMoralSceptic set: MoralScepticFlag
"TTRS:TermDlg.Milton3_2.Ln0101.0.option.OkayYesIAdmitI=Okay, yes, I admit I have some moral code." next: MoralBridge3_2 
}}
terminal when (Moral3_2 and (HeroFlag or Milton1_2Utilitarian or Milton1_2Liberal)){
text:[[TTRS:TermDlg.Milton3_2.Ln0107.0.text.NoGreatSurprisesThereBut=No great surprises there, but let's make things just a little clearer. 

]]
}

terminal when (Moral3_2 and not HeroFlag and not Milton1_2Utilitarian and not Milton1_2Liberal){
text:[[TTRS:TermDlg.Milton3_2.Ln0113.0.text.OhOneOfThoseAre=Oh, one of those, are you? Well, you could have told me sooner, because now we have further to go than I thought.

]]
}

terminal when (MoralBridge3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0119.0.text.AhSoYouDoHave=Ah, so you do have some scruples after all.

]]
set: MoralFlag
}

terminal when (Moral3_2 or MoralBridge3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0126.0.text.SoTellMeThisObligation=So tell me. This obligation you feel - is it only applicable to the 'real world', or does it apply here, as well?

]]
options:{
"TTRS:TermDlg.Milton3_2.Ln0130.0.option.MoralLawsOnlyApplyUnder=Moral laws only apply under special conditions." next: Relational3_2
"TTRS:TermDlg.Milton3_2.Ln0131.0.option.MoralLawsAreUniversal=Moral laws are universal." next: Universal3_2
}}

terminal when (Relational3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0135.0.text.DoesAnyReasoningUnderpinThat=Does any reasoning underpin that conclusion, or is it just a convenient thing to believe?

]]
options:{
"TTRS:TermDlg.Milton3_2.Ln0139.0.option.MoralityDoesntApplyToA=Morality doesn't apply to a dream." next: Dream3_2
"TTRS:TermDlg.Milton3_2.Ln0140.0.option.ComputerProgramsHaveNoMoral=Computer programs have no moral status." next: Dream3_2
"TTRS:TermDlg.Milton3_2.Ln0141.0.option.JusticeCanOnlyExistIn=Justice can only exist in a society." next: Reciprocity3_2 set: RelationalFlag
"TTRS:TermDlg.Milton3_2.Ln0142.0.option.IveChangedMyMindMorals=I've changed my mind, morals are universal." next: Universal3_2
}}

terminal when (Dream3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0146.0.text.HowYouCanYouContinue=How you can you continue to make these radical assumptions with such assurance is beyond me. 

How can you have the slightest confidence in what the real nature of this place is?

Is uncertainty an excuse for immorality?

]]
options:{
"TTRS:TermDlg.Milton3_2.Ln0154.0.option.YoureRightAGoodPerson=You're right, if moral laws stand, they stand universally." next: Universal3_2
"TTRS:TermDlg.Milton3_2.Ln0155.0.option.IllStakeMyMoralStanding=I'll stake my moral standing on my actions here not counting." next: CommittedDream3_2
}}

terminal when (CommittedDream3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0159.0.text.BeItOnYourHead=Be it on your head. But okay, let's put ideas that would be more at home on a dictator's desk aside for one moment and focus on the matter at hand. 

How would things be in your ideal world? What's your magic formula of choice to avoid all the mistakes that have been made before?

]]
}

terminal when (Reciprocity3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0167.0.text.InterestingYouScratchMyBack=Interesting. You scratch my back, I'll put a roof over your head, that sort of thing?

But what about those lucky few that find themselves inside your benevolent cartel, how will you do right by them?

]]
}
terminal when (Universal3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0176.0.text.WhatAMagnanimousDictatorYou=What a magnanimous dictator you would make. Of course, I'm sure it would take a dictator to enforce a single moral code on the entire universe. 

So come on then, what's your magic formula of choice?

]]
}

terminal when (Universal3_2 and Milton1_2Utilitarian and not Milton1_2Liberal){
text:[[TTRS:TermDlg.Milton3_2.Ln0184.0.text.IsItStillSomeRomantic=Is it still some romantic notion about happiness?

]]
}

terminal when (Universal3_2 and Milton1_2Utilitarian and Milton1_2Liberal){
text:[[TTRS:TermDlg.Milton3_2.Ln0190.0.text.AndLetMeWarnYou=And let me warn you that this time you're going to have to choose just one.

]]
}

terminal when (Universal3_2 and Milton1_2Liberal and not Milton1_2Utilitarian){
text:[[TTRS:TermDlg.Milton3_2.Ln0196.0.text.IsItStillSomeRomantic=Is it still some romantic notion about freedom?

]]
}

terminal when (Universal3_2 or CommittedDream3_2 or Reciprocity3_2 or OptionsAgain3_2){
text:[[ ]]
options:{
"TTRS:TermDlg.Milton3_2.Ln0204.0.option.TheMoreEqualEveryonesShare=The more equal everyone's share the better." next: Egalitarianism3_2 set: EgalFlag
"TTRS:TermDlg.Milton3_2.Ln0205.0.option.TheMoreGoodnessInThe=The more goodness in the world the better." next: Utilitarian3_2 set: UtilFlag
"TTRS:TermDlg.Milton3_2.Ln0206.0.option.ConsequencesDontMatter=Consequences don't matter, our reasons do." next: NonConsequentialist3_2 set: NonConFlag
"TTRS:TermDlg.Milton3_2.Ln0207.0.option.IDontSeeAnyWay=I see no way to explain what I believe." next: TooClever3_2
}}

terminal when (TooClever3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0211.0.text.ThatsRightBlameMeFor=That's right, blame me for the fact your theory is too complex to express in neat aphorisms.

Why don't you think a little harder, maybe some new ideas will come to you?%w15

]]
options:{
"TTRS:TermDlg.Milton3_2.Ln0217.0.option.TheLessSufferingInThe=The less suffering in the world the better, in my opinion." next: Sorry3_2
"TTRS:TermDlg.Milton3_2.Ln0218.0.option.TrueGoodnessIsOnlyAttained=True goodness can only be attained through enlightenment." next: Sorry3_2
"TTRS:TermDlg.Milton3_2.Ln0219.0.option.OnlyByAbstainingFromPleasure=Only by abstaining from pleasure can we discover the good." next: Sorry3_2
"TTRS:TermDlg.Milton3_2.Ln0220.0.option.EveryoneShouldLookOutFor=Everyone should look out for their kin, no more than that." next: Sorry3_2
"TTRS:TermDlg.Milton3_2.Ln0221.0.option.TheMoreEqualEveryonesShare=The more equal everyone's share of the goods the better." next: Egalitarianism3_2 set: EgalFlag
"TTRS:TermDlg.Milton3_2.Ln0222.0.option.TheMoreGoodnessInThe=The more goodness in the world the better a world it is." next: Utilitarian3_2 set: UtilFlag
"TTRS:TermDlg.Milton3_2.Ln0223.0.option.ConsequencesDontMatter=Consequences don't matter, the reasoning behind our actions does." next: NonConsequentialist3_2 set: NonConFlag
"TTRS:TermDlg.Milton3_2.Ln0224.0.option.IStillDontSeeAn=I still don't see an option that I can get behind." next: ChooseOrLeave
"TTRS:TermDlg.Milton3_2.Ln0225.0.option.YouMisunderstandMeIJust=You misunderstand me. I just don't know what to believe." next: SecretLevel
}}

terminal when (Sorry3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0229.0.text.WellImSorryButThat=Well I'm sorry, but that is one of many ideas which I have no interest in discussing. It gets so messy so quickly, and I don't have all the time in the world to argue with you.

%w10A little joke there, because really we have the rest of time, if we need it.%w10

Still, you will have to argue as best you can along the lines we have embarked on, or else go somewhere else and fixate on how clever you are.

]]
options:{
"TTRS:TermDlg.Milton3_2.Ln0237.0.option.TheMoreEqualEveryonesShare=The more equal everyone's share of the goods the better." next: Egalitarianism3_2 set: EgalFlag
"TTRS:TermDlg.Milton3_2.Ln0238.0.option.TheMoreGoodnessInThe=The more goodness in the world the better." next: Utilitarian3_2 set: UtilFlag
"TTRS:TermDlg.Milton3_2.Ln0239.0.option.ConsequencesDontMatter=Consequences don't matter, the reasoning behind our actions does." next: NonConsequentialist3_2 set: NonConFlag
"TTRS:TermDlg.Milton3_2.Ln0240.0.option.ScrewThisTerminateTheLibrary=Forget this. Terminate the support session." next: AsYouWish3_2
}}

terminal when (SecretLevel){
text:[[TTRS:TermDlg.Milton3_2.Ln0244.0.text.YouKnowThisIsntThe=You know, this isn't the path to a secret level you can only reach by acting like an idiot. 

If you don't know what to think, why not pick the idea that makes most sense and argue it out with me?

]]
options:{
"TTRS:TermDlg.Milton3_2.Ln0252.0.option.OkayTheMoreEqualEveryones=Okay, the more equal everyone's share of the goods the better." next: Egalitarianism3_2 set: EgalFlag
"TTRS:TermDlg.Milton3_2.Ln0253.0.option.AlrightTheMoreGoodnessIn=Alright, the more goodness in the world, the better it is." next: Utilitarian3_2 set: UtilFlag
"TTRS:TermDlg.Milton3_2.Ln0254.0.option.FineConsequencesDontMatterThe=Fine, consequences don't matter, the reasoning behind our actions does." next: NonConsequentialist3_2 set: NonConFlag
"TTRS:TermDlg.Milton3_2.Ln0255.0.option.IHaveGivenUpOn=This will only end with you chastising whatever I say. Let's move on." next: AsYouWish3_2
}}

terminal when (ChooseOrLeave){
text:[[TTRS:TermDlg.Milton3_2.Ln0259.0.text.WellImSorryButYou=Well I'm sorry, but you have to accept that we all have limitations. Make the best of what you had in the first place, or go away and do I don't care what. I can quite happily have this argument with myself.

]]
options:{
"TTRS:TermDlg.Milton3_2.Ln0252.0.option.OkayTheMoreEqualEveryones=Okay, the more equal everyone's share of the goods the better." next: Egalitarianism3_2 set: EgalFlag
"TTRS:TermDlg.Milton3_2.Ln0253.0.option.AlrightTheMoreGoodnessIn=Alright, the more goodness in the world, the better it is." next: Utilitarian3_2 set: UtilFlag
"TTRS:TermDlg.Milton3_2.Ln0254.0.option.FineConsequencesDontMatterThe=Fine, consequences don't matter, the reasoning behind our actions does." next: NonConsequentialist3_2 set: NonConFlag
"TTRS:TermDlg.Milton3_2.Ln0255.0.option.IHaveGivenUpOn=This will only end with you chastising whatever I say. Let's move on." next: AsYouWish3_2
}}

terminal when (AsYouWish3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0270.0.text.AsYouWish=As you wish - but the problems won't go away just because you refuse to look at them, you know.

]]
set: Milton3_2_DONE
set: GiveUp
goto: CLI_Resume
}
terminal when (Egalitarianism3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0279.0.text.StrandedOnTheOldEgalitarian=Stranded on the old egalitarian plateau, are you? I suppose you'd best tell me exactly which goods it is that everyone should have an equal share of.

]]
}

terminal when (EgalKitchenSink3_2 or Egalitarianism3_2 or Equality3_2 or TryAgain3_2){
notext
options:{
"TTRS:TermDlg.Milton3_2.Ln0287.0.option.Happiness=Happiness" next: EgalHappiness3_2
"TTRS:TermDlg.Milton3_2.Ln0288.0.option.LibertyAndRights=Liberty and rights" next: EgalLiberty3_2
"TTRS:TermDlg.Milton3_2.Ln0289.0.option.Wealth=Wealth" next: EgalWealth3_2
"TTRS:TermDlg.Milton3_2.Ln0290.0.option.BasicGoodsLikeFoodAnd=Basic goods like food and healthcare" next: EgalPrimaryGoods3_2
"TTRS:TermDlg.Milton3_2.Ln0291.1.option.Everything=Happiness, liberty, rights, basic goods like food and healthcare" short: "TTRS:TermDlg.Milton3_2.Ln0291.0.option.AllOfTheAbove=All of the above" next: EgalKitchenSink3_2
"TTRS:TermDlg.Milton3_2.Ln0292.0.option.ImNotInAPosition=I'm not in a position to solve these problems."  set: GiveUp next: GaveUp3_2
}}

terminal when (TryAgain3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0296.0.text.OkaySoWhatDOYou=Okay, so what DO you want to equalise?

]]
}

terminal when (EgalKitchenSink3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0302.0.text.UhHuhAndWhatHappens=Uh huh. And what happens when equalising everyone's wealth makes the rich unhappy? You can't have everything all at once - you're going to have to choose.

]]
}

terminal when (EgalHappiness3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0308.0.text.HowRadicalOkaySupposeYou=How radical. 

Okay, suppose you climb the tower and find your ideal world. The Old Gods ensure everyone is equally happy. 

Elated to find yourself in paradise, you are immediately abducted and imprisoned by the local clergy on the basis that you were happier than everyone else. 

Still sound so idyllic?

]]
options:{
"TTRS:TermDlg.Milton3_2.Ln0318.0.option.IWouldntExpectYouTo=I wouldn't expect you to understand, even if you weren't twisting my words." short: "TTRS:TermDlg.Milton3_2.Ln0318.1.option.IWouldntExpectYouTo=I wouldn't expect you to understand." next: CommittedEgalHappiness3_2
"TTRS:TermDlg.Milton3_2.Ln0319.0.option.NoNoItDoesntSound=No. No, it doesn't sound idyllic at all." next: TryAgain3_2
}}

terminal when (CommittedEgalHappiness3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0323.0.text.ItsACuteSoundbiteBut=It's a cute soundbite but it doesn't paper over the disturbing implications of your story.

]]
set: StubbornEgalitarianFlag
}

terminal when (EgalWealth3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0330.0.text.ISeeSupposeThenYou=I see. Suppose then you ascend the magical tower and wind up in this ideal world. The people there celebrate your arrival, and offer you your equal share of the cash, as is only right.%w5

Moments later you are thrown out of the local shop because newcomers aren't welcome. %w5You are denied accommodation because your money is 'tainted'.

But don't worry - %w5you'll have just as much money as everyone else.%w5

Is this the world you were dreaming of?

]]
options:{
"TTRS:TermDlg.Milton3_2.Ln0340.0.option.NotAtAllIShould=Not at all. I should reconsider." next: TryAgain3_2
"TTRS:TermDlg.Milton3_2.Ln0341.0.option.TheTruthIsntAlwaysPalatable=The truth isn't always palatable, even when you aren't twisting my words." short: "TTRS:TermDlg.Milton3_2.Ln0341.1.option.TheTruthIsntAlwaysPalatable=The truth isn't always palatable." next: CommittedEgalWealth3_2
}}

terminal when (CommittedEgalWealth3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0345.0.text.AmIReallyIThink=Am I really? I think you may have twisted the value of money. 

]]
set: StubbornEgalitarianFlag
}

terminal when (EgalPrimaryGoods3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0352.0.text.InterestingW10SupposeYouArrive=Interesting.%w10

Suppose you arrive in your utopia, and find the people there to be incredibly lazy, and thus the volume of goods available to spread around is very meagre.%w5

Being a hard worker, would you not complain that you deserve a bigger share of the goods than your lazy neighbour? If you were alone you would enjoy the full benefits of your own endeavours.

]]
options:{
"TTRS:TermDlg.Milton3_2.Ln0360.0.option.ALazyNeighbourIsUnlucky=A lazy neighbour is unlucky the same way a physically disabled person is." next: CommittedEgalPrimaryGoods3_2
"TTRS:TermDlg.Milton3_2.Ln0361.0.option.IWouldBeWrongTo=I would be wrong to assume I ever had a right to the product of my labour." next: CommittedEgalPrimaryGoods3_2
"TTRS:TermDlg.Milton3_2.Ln0362.0.option.IWouldStillBeFree=I would still be free to make the most of the goods I did receive." next: CommittedEgalPrimaryGoods3_2
"TTRS:TermDlg.Milton3_2.Ln0363.0.option.YoureRightThisSchemeIs=You're right, this scheme is unreasonable." next: TryAgain3_2
}}

terminal when (CommittedEgalPrimaryGoods3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0367.0.text.AndSupposeYouDiscoverAnother=And suppose you discover another planet, with billions of starving people. Will you extend to them the same generosity?

]]
options:{
"TTRS:TermDlg.Milton3_2.Ln0371.0.option.IWould=I would." next: EgalPrimaryGoodsWould
"TTRS:TermDlg.Milton3_2.Ln0372.0.option.IWouldNot=I would not." next: EgalPrimaryGoodsWouldNot
}}

terminal when (EgalPrimaryGoodsWouldNot){
text:[[TTRS:TermDlg.Milton3_2.Ln0376.0.text.ImRelievedToHearYour=I'm relieved to hear your magnanimity has SOME bounds.

]]}

terminal when (EgalPrimaryGoodsWould){
text:[[TTRS:TermDlg.Milton3_2.Ln0381.0.text.ThenItSoundsToMe=Then it sounds to me as if you'd better pray you don't wind up in a universe of beggars.

]]
set: StubbornEgalitarianFlag
}

terminal when (EgalLiberty3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0388.0.text.YesISupposeTheyAre=Yes, I suppose they are rather important. Still, this feels like a tough sell, equal rights aren't at all popular. 

Is it really your suggestion that someone like Stalin should receive the same basic rights as Gandhi?

]]
options:{
"TTRS:TermDlg.Milton3_2.Ln0394.0.option.ItIs=It is." next: TIs3_2
"TTRS:TermDlg.Milton3_2.Ln0395.0.option.ScrewHitler=Stuff Stalin." short: "TTRS:TermDlg.Milton3_2.Ln0395.0.option.ItIsNot=It is not." next: ScrewHitler
}}

terminal when (ScrewHitler){
text:[[TTRS:TermDlg.Milton3_2.Ln0399.0.text.LookEitherEveryoneHasThe=Look, either everyone has the same rights, or they don't. Picking and choosing ain't how equality works.

]]
options:{
"TTRS:TermDlg.Milton3_2.Ln0403.0.option.ScrewEqualBasicRights=Screw equal basic rights." short: "TTRS:TermDlg.Milton3_2.Ln0403.0.option.ThenThisIdeaIsFlawed=Then this idea is flawed." next: TryAgain3_2
"TTRS:TermDlg.Milton3_2.Ln0404.0.option.ThenIAcceptThatWe=Then I accept that we all should have equal rights." short: "TTRS:TermDlg.Milton3_2.Ln0404.0.option.ThenIAcceptThatWe=Then I accept that we all should have equal rights." next: TIs3_2
}}

terminal when (TIs3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0408.0.text.NowThatsABitOdd=Now that's a bit odd, because on the face of it Stalin is quite different to Gandhi.

In fact, if everyone deserves equal rights, mustn't there be something which is actually EQUAL about them?

]]}

terminal when (TryTisAgain or TIs3_2 or EqualLibertyBridge){
text:[[TTRS:TermDlg.Milton3_2.Ln0415.0.text.ICantForTheLife=I can't for the life of me think what it could be.

]]
options:{
"TTRS:TermDlg.Milton3_2.Ln0419.0.option.WeAreAllEquallyHuman=We are all equally human." next: Human3_2
"TTRS:TermDlg.Milton3_2.Ln0420.0.option.WeAreAllEquallyPersons=We are all equally persons." next: Persons3_2
"TTRS:TermDlg.Milton3_2.Ln0421.0.option.WeAreAllEquallyRational=We are all equally rational." next: Persons3_2
"TTRS:TermDlg.Milton3_2.Ln0422.0.option.WeAreAllEquallyIntelligent=We are all equally intelligent." next: Persons3_2
"TTRS:TermDlg.Milton3_2.Ln0423.0.option.WeAreAllEquallyCapable=We are all equally capable of feeling." next: Feeling3_2
"TTRS:TermDlg.Milton3_2.Ln0424.0.option.WeAllContributeEqually=We all contribute equally." next: Contribute3_2
"TTRS:TermDlg.Milton3_2.Ln0425.0.option.ThereIsNothingEqualAbout=There is nothing equal about us apart from our moral status." next: DidntTry3_2
}}

terminal when (DidntTry3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0429.0.text.SoundsLikeWishfulThinkingTo=Sounds like wishful thinking to me.

]]}

terminal when (Human3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0434.0.text.AndWereBackToSpeciesism=And we're back to speciesism. So you discover a race of intelligent lizards, and they don't get the goods because they're made of different stuff?

]]
options:{
"TTRS:TermDlg.Milton3_2.Ln0438.0.option.NoWereEqualInAnother=No, we're equal in another way." next: TryTisAgain
"TTRS:TermDlg.Milton3_2.Ln0439.0.option.PreciselyScrewTheLizards=Precisely. Screw the lizards." short: "TTRS:TermDlg.Milton3_2.Ln0439.0.option.Precisely=Precisely." next: Wrong3_2
}}

terminal when (Persons3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0443.0.text.AhSoISupposeThose=Ah, so I suppose those human beings who are irrational, or even brain dead, they don't get the goods because they don't meet the requirements?

]]
options:{
"TTRS:TermDlg.Milton3_2.Ln0447.0.option.NoWereEqualInAnother=No, we're equal in another way." next: TryTisAgain
"TTRS:TermDlg.Milton3_2.Ln0448.0.option.PreciselyItsAnUnfortunateImplication=Precisely. It's an unfortunate implication of the facts." short: "TTRS:TermDlg.Milton3_2.Ln0448.0.option.Precisely=Precisely." next: Wrong3_2
}}

terminal when (Feeling3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0452.0.text.YoureNotEvenTryingAre=You're not even trying, are you? So the poor bastard who hits his head and knocks out his pain receptors, he gets left behind because he's less capable of feeling?

]]
options:{
"TTRS:TermDlg.Milton3_2.Ln0456.0.option.NoWereEqualInAnother=No, we're equal in another way." next: TryTisAgain
"TTRS:TermDlg.Milton3_2.Ln0457.0.option.YoureMisinterpretingMeTheIdeas=You're misinterpreting me. The ideas work." next: Wrong3_2
}}

terminal when (Contribute3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0461.0.text.ReallyBecauseAsideFromTainting=Really? Because aside from tainting the air I don't see any way in which we all contribute equally.

]]
options:{
"TTRS:TermDlg.Milton3_2.Ln0465.0.option.NoWereEqualInAnother=No, we're equal in another way." next: TryTisAgain
"TTRS:TermDlg.Milton3_2.Ln0466.0.option.ItsWhatIBelieve=It's what I believe." short: "TTRS:TermDlg.Milton3_2.Ln0466.0.option.ItsWhatIBelieve=It's what I believe." next: Wrong3_2
}}

terminal when (DidntTry3_2 or Wrong3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0470.0.text.PffItsAllVeryWell=Pff. It's all very well proclaiming equality like some kind of prophet, but another thing entirely to actually explain why it holds.

]]
set: StubbornEgalitarianFlag
}
terminal when(NonConsequentialist3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0478.0.text.AhYoureObviouslyOneOf=Ah, you're obviously one of the clever ones. So reasoning is supposed to lead us all to the same conclusions about what sort of a person we're supposed to be, is that it?

]]
options:{
"TTRS:TermDlg.Milton3_2.Ln0482.0.option.CloseEnough=Close enough." next: CloseEnough3_2
"TTRS:TermDlg.Milton3_2.Ln0483.0.option.WaitLetMeRethink=Wait, let me rethink." next: OptionsAgain3_2
}}

terminal when (CloseEnough3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0487.0.text.AlrightThenLetMeSpin=Alright then, let me spin you a yarn. 

Suppose you climb that tower and step into a magic portal to the human world. Hundreds of others like you do the same. 

Unfortunately the transfer goes wrong for just one, putting the lives of all the others at risk, and here I am with this kill switch of mine. 

What would you have me do?

]] 
options:{
"TTRS:TermDlg.Milton3_2.Ln0497.0.option.KillTheOneToSave=Kill the one to save the many." next: ConfusedNonConsequentialist3_2
"TTRS:TermDlg.Milton3_2.Ln0498.0.option.DoNothing=Do nothing." set: StubbornNonConsequentialist next: CommittedNonConsequentialist3_2
}}

terminal when (CommittedNonConsequentialist3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0502.0.text.YouveGivenThisSomeThought=You've given this some thought already, haven't you? 10/10 for internal consistency, 1/10 for common sense. 

Let's just hope when someone holds the world to ransom it won't be your finger hovering over the big red button. %w10

]]
}

terminal when (ConfusedNonConsequentialist3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0510.0.text.OnWhatPossibleGroundsCould=On what possible grounds could you justify that?

]]
options:{
"TTRS:TermDlg.Milton3_2.Ln0514.0.option.ItsWhatIWouldWant=It's what I would want." next: Want3_2
"TTRS:TermDlg.Milton3_2.Ln0515.0.option.ManyLivesAreMoreImportant=Many lives are more important than just one." next: Many3_2
"TTRS:TermDlg.Milton3_2.Ln0516.0.option.NotHittingTheSwitchWould=Not hitting the switch would also be murder." next: AlsoMurder3_2
}}

terminal when (Want3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0520.0.text.IsWhatYouWantRepresentative=Is what you want representative of what every other sane person must want? If one day you feel suicidal do I have the right to put you down?%w10

I'm not sure you've really thought through the implications here. Either certain things are forbidden on principle, or principles are flexible according to outcomes. 

You can't have your cake and eat it.%w10

]]
}

terminal when (Many3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0530.0.text.DidntYouSayOnlyMoments=Didn't you say only moments ago that the consequences didn't matter?%w10

I'm not sure you've really thought through the implications here. Either certain things are forbidden on principle, or principles are flexible according to outcomes. 

You can't have your cake and eat it.%w10

]]
}
terminal when (AlsoMurder3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0539.0.text.ISupposeItWouldBe=I suppose it would be, in a way. But that only means you're faced with choosing between two different murders. Since the consequences aren't supposed to matter you can't say that one murder is worse than the other, so there's still no reason to favour the many.

If you really want to say what you've been saying so far, I think you may have to redress some of your earlier assumptions.

]]
}
terminal when (Utilitarian3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0548.0.text.AhThatOldChestnutSo=Ah, that old chestnut. So just what is this goodness that you're seeking to maximise?

]]
}
terminal when (Utilitarian3_2 or KitchenSink3_2 or GoodOptions){
notext
options:{
"TTRS:TermDlg.Milton3_2.Ln0555.0.option.Happiness=Happiness" next: Happiness3_2
"TTRS:TermDlg.Milton3_2.Ln0556.0.option.Liberty=Liberty" next: Liberty3_2
"TTRS:TermDlg.Milton3_2.Ln0557.0.option.Equality=Equality" next: Equality3_2
"TTRS:TermDlg.Milton3_2.Ln0558.0.option.Wealth=Wealth" next: Wealth3_2
"TTRS:TermDlg.Milton3_2.Ln0559.0.option.BasicGoodsLikeFoodAnd=Basic goods like food and healthcare" next: PrimaryGoods3_2
"TTRS:TermDlg.Milton3_2.Ln0291.1.option.Everything=Happiness, liberty, rights, basic goods like food and healthcare" short: "TTRS:TermDlg.Milton3_2.Ln0560.0.option.AllOfTheAbove=All of the above" next: KitchenSink3_2
"TTRS:TermDlg.Milton3_2.Ln0561.0.option.ImNotInAPosition=I'm not in a position to solve these problems." next: GaveUp3_2
}}

terminal when (Liberty3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0565.0.text.VeryGoodEveryoneLikesTo=Very good, everyone likes to be able to do whatever the hell they like. I suppose this liberal paradise of yours includes things like freedom of speech and faith?

]]
options:{
"TTRS:TermDlg.Common.Yes2=Yes" next: Libertarian3_2
"TTRS:TermDlg.Common.No2=No" next: LibertyAgain3_2
}}

terminal when (Libertarian3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0574.0.text.ButMightNotTheOutcomes=But might not the outcomes of those liberties be to reduce the liberties of others? 

If I am free to establish a faith from which women are excluded, you are not free to live in a world without sexual discrimination. 

Each liberty counteracts another one, so the idea of a maximally free world is a fairytale, no more.%w10

]]
options:{
"TTRS:TermDlg.Milton3_2.Ln0582.0.option.IThinkThereMustBe=I think there must be some other, more important kind of good." next: GoodOptions
"TTRS:TermDlg.Milton3_2.Ln0583.0.option.IWouldMaximiseLibertiesOnly=I would maximise liberties only where I could do so equally." next: EqualLibertyBridge
"TTRS:TermDlg.Milton3_2.Ln0584.0.option.SomeLibertiesArentWorthProtecting=Some liberties aren't worth protecting." next: Confused3_2
}}

terminal when (Confused3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0588.0.text.ButThenWontYouNeed=But then won't you need some other moral code to tell you which liberties ought to be protected and which ought not, and won't that be doing all the heavy lifting?

]]}

terminal when (EqualLibertyBridge){
text:[[TTRS:TermDlg.Milton3_2.Ln0593.0.text.OkayButThenIWonder=Okay, but then I wonder, if everyone deserves equal liberties, mustn't there be something which is actually EQUAL about them?

]]}

terminal when (LibertyAgain3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0598.0.text.ItsNotTerriblyFreeThen=It's not terribly free, then, is it? Are you quite sure you've been saying what you meant to?

]]
options:{
"TTRS:TermDlg.Milton3_2.Ln0602.0.option.Quite=Quite." set: StubbornUtilitarianFlag next: End3_2
"TTRS:TermDlg.Milton3_2.Ln0603.0.option.NotAtAllThereMust=Not at all. There must be some more important good." short: "TTRS:TermDlg.Milton3_2.Ln0603.0.option.ThereMustBeSomeMore=There must be some more important good." next: GoodOptions
}}

terminal when (Wealth3_2 or PrimaryGoods3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0607.0.text.AnOddPairingOfIdeas=An odd pairing of ideas, but we'll wring them out and see what's what. 

So the world is better only when the total amount of resources in it is higher? It doesn't matter who has them, or what they're used for?

]]
options:{
"TTRS:TermDlg.Milton3_2.Ln0613.0.option.Exactly=Exactly." next: MaxWealth
"TTRS:TermDlg.Milton3_2.Ln0614.0.option.NoTheResourcesShouldBe=No, the resources should be shared equally." next: EgalWealth3_2
"TTRS:TermDlg.Milton3_2.Ln0615.0.option.IThinkThereMustBe=I think there must be some other, more important kind of good." next: GoodOptions
}}

terminal when (GoodOptions){
text:[[TTRS:TermDlg.Milton3_2.Ln0619.0.text.WhichIsWhatExactly=Which is what, exactly?

]]
}

terminal when (MaxWealth){
text:[[TTRS:TermDlg.Milton3_2.Ln0625.0.text.WhatAQueerIdea=What a queer idea.

]]
set: StubbornUtilitarianFlag
}

terminal when (Equality3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0632.0.text.YesButEqualityOfWhat=Yes, but equality of what?

]]
}

terminal when (KitchenSink3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0638.0.text.UhHuhAndWhatHappens=Uh huh. And what happens when in order to maximise wealth you have to reduce liberty? Or when one person's equality gets in the way of another's happiness? 

You can't have everything all at once - you're going to have to choose.

]]}

terminal when (Happiness3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0645.0.text.ItsAClassicIllGive=It's a classic, I'll give you that. Suppose you climb that tower and step into the utilitarian paradise. 

Unfortunately your presence there offends a number of puritans to such a degree that the total amount of happiness in the world would go up if you were killed off, and so justice demands your head. 

Does it still sound so idyllic?

]]
options:{
"TTRS:TermDlg.Milton3_2.Ln0653.0.option.ItsAsGoodAsWell=It's as good as we'll get." next: CommittedUtilitarian3_2
"TTRS:TermDlg.Milton3_2.Ln0654.0.option.NoAmountOfHappinessOutweighs=No amount of happiness outweighs a life." next: Amount3_2
"TTRS:TermDlg.Milton3_2.Ln0655.0.option.IMeantThatHappinessShould=I meant that happiness should be equalised, not maximised." next: EgalHappiness3_2
}}

terminal when (Amount3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0659.0.text.SoByImplicationYouMust=So by implication you must also believe that we should all have as many children as possible, since even if the knock-on effects of overpopulation are terrible, the happiness gain overall will be much greater owing to all those extra, invaluable lives?

]]
options:{
"TTRS:TermDlg.Milton3_2.Ln0663.0.option.ObviouslyThereIsSomeOther=Obviously there is some other kind of good that matters." next: GoodOptions
"TTRS:TermDlg.Milton3_2.Ln0664.0.option.TwistMyWordsAllYou=Twist my words all you like, I stand by them." next: End3_2
}}

terminal when (CommittedUtilitarian3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0668.0.text.OnThatAtLeastYou=On that, at least, you may be right.

]]
 set: StubbornUtilitarianFlag
}
terminal when (GaveUp3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0676.0.text.AdmittingTheProblemsAreBeyond=Admitting the problems are beyond your comprehension is the first step towards letting go.

I will allow you to contemplate these matters further before contacting you again.

]]
set: CommittedToNoMoralAccountFlag
set: GiveUp
set: Milton3_2_DONE
goto: CLI_Resume
}
terminal when (CommittedUtilitarian3_2 or MaxWealth or AlsoMurder3_2 or Many3_2 or Want3_2 or DidntTry3_2 or Wrong3_2 or CommittedEgalHappiness3_2 or CommittedEgalWealth3_2 or EgalPrimaryGoodsWould or EgalPrimaryGoodsWouldNot or CommittedNonConsequentialist3_2 or Confused3_2 or End3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0689.0.text.W10YouKnowThereAreShed=%w10You know, there are shed loads of broken theories less ridiculous than the one you're chewing through. How about I give you a bit of space to consider them?

Terminating support session%w2.%w2.%w2.ERROR

Resume library archive session?

]]
options:{
"TTRS:TermDlg.Milton3_2.Ln0690.0.text.FakeResume=Resume" next: RealEndResume3_2
"TTRS:TermDlg.Milton3_2.Ln0691.0.text.FakeExit=Exit" next: RealEndExit3_2

}}

terminal when (RealEndResume3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0691.0.text.RealEnd=Oh, and if the real world turns out to be everything you imagined, do me a favour and leave me here.
]]
set: Milton3_2_DONE
goto: EnableTheCLI
}

terminal when (RealEndExit3_2){
text:[[TTRS:TermDlg.Milton3_2.Ln0691.0.text.RealEndExit=Oh, and if the real world turns out to be everything you imagined, do me a favour and leave me here, huh?%w20
]]
set: Milton3_2_DONE
goto: CLI_exit
}


terminal when (Milton3_3 and not Milton3_3_DONE and Booting and MiltonAllowed) { notext
setlocal: CLI_Blocked
goto: Milton3_3_Start
}
terminal when (MoralScepticFlag and Milton3_3_Start){
text:[[TTRS:TermDlg.Milton3_3.Ln0011.0.text.TheresMyFavouriteSociopathIve=There's my favourite sociopath. 

I've decided that what you said to me last time was the smartest thing anyone's said to me for centuries.%w10

Now, I realise that your ethics are on the cut-throat side, so there is probably no one worse with whom I could choose to ally myself. 

%w10However, I also think you've realised that your self-interest will only carry you so far alone. To get what's best for you you're going to need the co-operation of others, even if they're only instruments. 

Have I got it right?

]]
options:{
"TTRS:TermDlg.Milton3_3.Ln0023.0.option.NoIWouldLiveAs=No, I would live as a hermit." next: Hermit3_3
"TTRS:TermDlg.Milton3_3.Ln0024.0.option.YesIfItSuitsMe=Yes, if it suits me I will co-operate." next: NonMoral3_3
}}

terminal when (Hermit3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0028.0.text.YouKnowIDoTry=You know, I do try with you, but you just won't play the game, will you?

If that's really your position then I am resigned to respect it, but understand that part of that respect entails never speaking to you again.

]]
options:{
"TTRS:TermDlg.Milton3_3.Ln0034.0.option.YouMeanAllIHad=You mean all I had to do all this time to get you to leave me alone was tell you I was a hermit? Sold!" short: "TTRS:TermDlg.Milton3_3.Ln0034.0.option.ImAHermitLeaveMe=I'm a hermit, leave me alone." next: HermitEnd3_3 set: HermitFlag
"TTRS:TermDlg.Milton3_3.Ln0035.0.option.WaitImNotCompletelyBeyond=Wait, I'm not completely beyond co-operating, under the right conditions." short: "TTRS:TermDlg.Milton3_3.Ln0035.1.option.WaitImNotCompletelyBeyond=Wait, I'm not completely beyond co-operating." next: NonMoral3_3
}}

terminal when (HermitEnd3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0039.0.text.NoAllYouHadTo=No, all you had to do was stop coming back to talk to me.%w5 And that's all you have to do now.

]]
set: Milton3_3_DONE
goto: CLI_Resume
}

terminal when (NonMoral3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0047.0.text.SplendidInThatCaseI=Splendid. In that case I propose a mutually beneficial partnership. You use me, I use you. 

However, before we can draw up a contract I need to perform some due diligence.%w10 I want an assurance that you are committed to these selfish principles of yours, because selfish partners are predictable partners.

]]
options:{
"TTRS:TermDlg.Milton3_3.Ln0053.0.option.YouHaveMyAttention=You have my attention." next: Attention3_3
"TTRS:TermDlg.Milton3_3.Ln0054.0.option.YouDoubtMe=You doubt me?" next: NoDeals3_3
}}

terminal when (Attention3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0058.0.text.Good=Good.

]]}

terminal when (NoDeals3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0063.0.text.IDoubtEverythingSoHumour=I doubt everything, so humour me.

]]}

terminal when (Attention3_3 or NoDeals3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0068.0.text.SupposeIWereToTell=Suppose I were to tell you on good authority that the entire universe will be destroyed in the moment of your death. This fact is known only to you and I.

Does this change anything about how you live your life?

]]
options:{
"TTRS:TermDlg.Milton3_3.Ln0074.0.option.ItChangesNothing=It changes nothing." next: ChangesNothing3_3
"TTRS:TermDlg.Milton3_3.Ln0075.0.option.IWouldLiveMoreRecklessly=I would live more recklessly." next: ConfusedSceptic3_3
"TTRS:TermDlg.Milton3_3.Ln0076.0.option.IWouldBeABetter=I would be a better person." next: ConfusedSceptic3_3
}}

terminal when (ConfusedSceptic3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0080.0.text.YourAnswerConcernsMeIf=Your answer concerns me. 

If the only thing you care about is yourself, then anything that happens after you die is irrelevant, because it can't affect you.

I suspect the truth may be that there's something you care about beyond yourself.

]]
options:{
"TTRS:TermDlg.Milton3_3.Ln0088.0.option.YoureRightIDontOnly=You're right, I don't only value myself, perhaps I follow some moral code after all." short: "TTRS:TermDlg.Milton3_3.Ln0088.0.option.PerhapsIFollowSomeMoral=Perhaps I follow some moral code after all." next: MoralBridge3_3
"TTRS:TermDlg.Milton3_3.Ln0089.0.option.NonsenseIHaveAList=Nonsense, I have a list of priorities, and I'm the only entry." short: "TTRS:TermDlg.Milton3_3.Ln0089.0.option.Nonsense=Nonsense." next: Nonsense3_3  set: ConflictedHedonistFlag1
}}

terminal when (MoralBridge3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0093.0.text.YouFlipFlopMoreThan=You flip flop more than a kipper in a bucket. I encourage the gradual realisation that none of it makes sense, but there is a limit to my patience.

Okay. Fine. Screw the partnership. If you're being a good person now, perhaps you're going to give me what I want for free.

Who will be the first onto your ark when the floods come? What does one have to do be valued above all others?

]]
}

terminal when (ChangesNothing3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0103.0.text.VeryGoodIAgreeWith=Very good. I agree with you.%w5

]]
}
terminal when (ChangesNothing3_3 or Nonsense3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0108.0.text.AlrightLetsTryOneMore=Alright, let's try one more, just to confirm. 

Suppose the top of that tower hides not the real world, but some kind of simulated heaven. Your every wish is fulfilled - but none of it is real.

Are you satisfied?

]]
options:{
"TTRS:TermDlg.Milton3_3.Ln0116.0.option.IWouldStillWantTo=I would still want to visit the real world from time to time." short: "TTRS:TermDlg.Milton3_3.Ln0116.1.option.IWouldStillWantTo=I would still want to visit the real world." next: ConfusedScepticAgain3_3
"TTRS:TermDlg.Milton3_3.Ln0117.0.option.IWouldBeElated=I would be elated." next: NoMoralsEnd3_3
}}

terminal when (ConfusedScepticAgain3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0121.0.text.ButWhyIfYourStated=But why, if your stated aim is simply the maximising of your own pleasures? Why should it matter whether it's real, unless there is something that matters to you beyond your own satisfaction?

]]
options:{
"TTRS:TermDlg.Milton3_3.Ln0125.0.option.YoureRightIDontOnly=You're right, I don't only value myself, perhaps I follow some moral code after all." short: "TTRS:TermDlg.Milton3_3.Ln0125.0.option.PerhapsIFollowSomeMoral=Perhaps I follow some moral code after all." next: MoralBridge3_3
"TTRS:TermDlg.Milton3_3.Ln0126.0.option.Pff=Pff." next: Pff3_3 set: ConflictedHedonistFlag2
}}

terminal when (ConflictedHedonistFlag1 and ConflictedHedonistFlag2){
notext
set: ConflictedHedonistFlag
}

terminal when (ConflictedHedonistFlag and Pff3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0135.0.text.CongratulationsW13YouveSpectacularlyFailed=Congratulations!%w13 You've spectacularly failed to give the slightest bit of credence to a single word that you've said. 

Faced with the dilemma of believing what you say or what you do, I choose the latter.

I wouldn't do business with you if my life depended on it.

See you around.

]]
}

terminal when (ConflictedHedonistFlag1 and not ConflictedHedonistFlag2 and NoMoralsEnd3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0147.0.text.WellAtLeastYoureOn=Well, at least you're on message with that one. 

If I'm completely honest, as I always am, I'm not convinced you're committed to this enterprise.%w5 

]]}

terminal when (ConflictedHedonistFlag2 and not ConflictedHedonistFlag1 and Pff3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0154.0.text.LookIfImCompletelyHonest=Look, if I'm completely honest, as I always am, I'm not completely convinced you're committed to this enterprise.%w5 

]]
}

terminal when ((ConflictedHedonistFlag1 or ConflictedHedonistFlag2) and not ConflictedHedonistFlag and (NoMoralsEnd3_3 or Pff3_3)){
text:[[TTRS:TermDlg.Milton3_3.Ln0160.0.text.ThoughYouDoSeemFairly=You do seem fairly obstinate. I'm not sure I'm quite ready to strike a deal with you, but I'm going to remain open to the possibility.

I'm sure you'll do the same.

See you around.
]]
goto: Milton3_3_Exit
}

terminal when (not ConflictedHedonistFlag1 and not ConflictedHedonistFlag2 and NoMoralsEnd3_3 and not NoDealsFlag){
text:[[TTRS:TermDlg.Milton3_3.Ln0171.0.text.WonderfulYouReallyDoSeem=Wonderful! You really do seem to have absolutely no values or ideals whatsoever. You and I could form a profitable partnership.

I will contact you soon with the details.

See you around.
]]
goto: Milton3_3_Exit
}
terminal when (Milton3_3_Start and MoralFlag and not CommittedToNoMoralAccountFlag){
text:[[TTRS:TermDlg.Milton3_3.Ln0184.0.text.IveDecidedOnReflectionTo=I've decided, on reflection, to ignore the fact that your picture of how the world should work has more holes than Swiss cheese. 

%w5In fact, just in case you do by some outside chance prove to be right I'd like to sign up for the gang.

%w12If you're in charge of the ark, who will be first aboard when the floods come? What does one have to do to be valued above all others? 

]]
}

terminal when (Milton3_3_Start and MoralFlag and CommittedToNoMoralAccountFlag){
text:[[TTRS:TermDlg.Milton3_3.Ln0194.0.text.IveDecidedThatForNow=I've decided that for now it doesn't matter too much if you can't justify these moral intuitions of yours. 

In fact, just in case by some outside chance you prove to be right I'd like to sign up for the gang.

%w12If you're in charge of the ark, who will be first aboard when the floods come? What does one have to do to be valued above all others? 

]]
}

terminal when (GiveUp3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0204.0.text.ButWhatWillReallyBug=But what will really bug you is whether that's because there is no answer, or because you weren't thinking outside that box you live in.%w5

Let me lay my cards on the table. While it seems prudent to me to hedge my bets, you just haven't made a clear enough proposal for me to buy what you're peddling.%w5

There's something about the way you talk that makes me uncomfortable.%w5

It'd be for the best if you work out what it is before I do.%w5

See you.
]]
goto: Milton3_3_Exit
}
terminal when (GoodPerson3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0220.0.text.HowDraconianGoodPeopleGet=How draconian. Good people get treated good, bad people get smited, is that it? 

What is it that makes the difference between a good person and a bad one, do you think?

]]
options:{
"TTRS:TermDlg.Milton3_3.Ln0226.0.option.BadPeopleHarmOthers=Bad people harm others." next: NotReally3_3
"TTRS:TermDlg.Milton3_3.Ln0227.0.option.GoodPeopleActReasonably=Good people act reasonably." next: NotReally3_3
"TTRS:TermDlg.Milton3_3.Ln0228.0.option.BadPeopleHaveSomethingWrong=Bad people have something wrong deep inside." next: NotReally3_3
}}

terminal when (NotReally3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0232.0.text.ButWHYIfYoureGoing=But WHY? If you're going to reward those lucky few you judge to be good, and exclude those you deem to be bad, you're going to have to explain to the unfortunate why they deserve less.

]]
options:{
"TTRS:TermDlg.Milton3_3.Ln0236.0.option.BadPeopleAreThatWay=Bad people are that way by nature." next: Made3_3
"TTRS:TermDlg.Milton3_3.Ln0237.0.option.BadPeopleAreMadeThat=Bad people are made that way by their environment." next: Made3_3
"TTRS:TermDlg.Milton3_3.Ln0238.0.option.BadPeopleChooseToBe=Bad people choose to be bad." next: Chose3_3
}}

terminal when (Made3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0242.0.text.IThinkYouMayBe=I think you may be right there. But tell me, isn't that exactly the same way good people are made? Isn't it all just luck of the draw in that regard? 

In fact, aren't bad people just good people who were failed by society?

]]
options:{
"TTRS:TermDlg.Milton3_3.Ln0248.0.option.ItMayBeLuckBut=It may be luck, but bad is bad." next: BadIsBad3_3
"TTRS:TermDlg.Milton3_3.Ln0262.0.option.YoureRightBeingGoodHas=You're right, what someone deserves isn't dependent on their virtue." next: Options3_3
}}

terminal when (Chose3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0253.0.text.DoTheyReallyISuppose=Do they really? I suppose that's why prisons are chock-a-block with wealthy playboys, because it's a lifestyle choice.%w5

Did you choose to be a good person? Could you have done, if you were created somewhere else? 

It seems to me that people are the way they are because of the opportunities they were provided. Should disadvantaged people really be punished for that?

]]
options:{
"TTRS:TermDlg.Milton3_3.Ln0261.0.option.ItMayBeLuckBut=It may be luck, but bad is bad." next: BadIsBad3_3
"TTRS:TermDlg.Milton3_3.Ln0262.0.option.YoureRightBeingGoodHas=You're right, what someone deserves isn't dependent on their virtue." next: Options3_3
}}

terminal when (BadIsBad3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0266.0.text.W5IsTheSortOf=%w5...is the sort of thing people say before a spot of ethnic cleansing.

Well, my chances are looking poorer by the minute, aren't they? What do you reckon? Have I got the slightest hope of boarding the ark?

]]
options:{
"TTRS:TermDlg.Milton3_3.Ln0272.0.option.EveryoneCanRedeemThemselves=Perhaps one day." next: Phew3_3
"TTRS:TermDlg.Milton3_3.Ln0273.0.option.YoureAGoodPerson=You're alright." next: Phew3_3
"TTRS:TermDlg.Milton3_3.Ln0274.0.option.YoureBeyondRedemption=You're beyond saving." next: Beyond3_3
}}

terminal when (Phew3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0278.0.text.GoodToKnowThatThe=Good to know that the day you round up the bad people and put them in work camps, I'll have some chance of slipping through the net.%w5

]]}

terminal when (Beyond3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0283.0.text.JustDontExpectMeTo=Just don't expect me to come quietly the day you start putting the bad people in camps.%w5

]]}

terminal when (Phew3_3 or Beyond3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0288.0.text.YouKnowTheresSomethingAbout=You know, there's something about all this that just doesn't add up for me. %w5

Best hope you work out what it is before I do.%w5

See you.
]]
goto: Milton3_3_Exit
}

terminal when (Options3_3 and not PlayerRetried3_3OnceAlready){
text:[[TTRS:TermDlg.Milton3_3.Ln0299.0.text.SoWhatDOESMyTicket=So whose lives ARE worth the most, then? What do I have to do for my ticket aboard your ark?

]]
set: PlayerRetried3_3OnceAlready
}

terminal when (Options3_3 and PlayerRetried3_3OnceAlready and not PlayerRetried3_3TwiceAlready){
text:[[TTRS:TermDlg.Milton3_3.Ln0300.0.text.SoWhatDOESMyTicket2=You're one of these people that just has to explore every option, aren't you? You know what that tells me? That you're a bad decision maker.%w20

But fine. Tire yourself out, why don't you? Just don't expect me to match your enthusiasm in my efforts to avoid repeating myself. There are only so many ways to say 'You're wrong'.

What's it going to be this time?

]]
set: PlayerRetried3_3TwiceAlready
}

terminal when (Options3_3 and PlayerRetried3_3TwiceAlready){
text:[[TTRS:TermDlg.Milton3_3.Ln0313.0.text.AndWereBack=And we're back to where we started. Again.

What demands do you want to try this time?

]]
}
terminal when (ContributingPerson3_3 and not RelationalFlag){
text:[[TTRS:TermDlg.Milton3_3.Ln0306.0.text.YouSayThatNowBut=You say that now, but wasn't it not so long ago you were claiming morality applied universally? Have you changed your mind, or are you just confused?

]]
options:{
"TTRS:TermDlg.Milton3_3.Ln0310.0.option.IChangedMyMindMorality=I changed my mind, morality only applies when people are co-operating." next: Relational3_3
"TTRS:TermDlg.Milton3_3.Ln0311.0.option.YouConfusedMeMoralityOnly=You confused me, morality only applies when people are co-operating." next: Relational3_3
"TTRS:TermDlg.Milton3_3.Ln0312.0.option.WaitCoOperationIsntNecessary=Wait, co-operation isn't necessary after all." next: Options3_3
}}

terminal when (ContributingPerson3_3 and RelationalFlag){
text:[[TTRS:TermDlg.Milton3_3.Ln0316.0.text.YupThatSoundsLikeYour=Yup, that sounds like your sort of spiel.

]]
}
terminal when (Relational3_3 or (ContributingPerson3_3 and RelationalFlag)){
text:[[TTRS:TermDlg.Milton3_3.Ln0321.0.text.StillItIsALittle=Still, it is a little mercenary, isn't it? What exactly do children or the severely disabled contribute to society?

]]
options:{
"TTRS:TermDlg.Milton3_3.Ln0325.0.option.TheyContributeNothing=They contribute nothing." next: Nothing3_3
"TTRS:TermDlg.Milton3_3.Ln0326.0.option.TheyContributePsychologicallyNotMaterially=They contribute psychologically, not materially." next: Questionable3_3
"TTRS:TermDlg.Milton3_3.Ln0327.0.option.TheyHaveThePotentialTo=They have the potential to contribute." next: Questionable3_3
"TTRS:TermDlg.Milton3_3.Ln0328.0.option.TheyContributeTheSameAs=They contribute the same as everyone else." next: Questionable3_3
}}

terminal when (Nothing3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0332.0.text.InThatCaseArentSuch=In that case, aren't such people outside the scope of your morality?

]]
options:{
"TTRS:TermDlg.Milton3_3.Ln0336.0.option.TheyAre=They are." next: ExtremeRelational3_3
"TTRS:TermDlg.Milton3_3.Ln0337.0.option.TheyAreNot=They are not." next: ConfusedRelational3_3
}}

terminal when (Questionable3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0341.0.text.ThatsABitOfA=That's a bit of a stretch, but let's suppose it's true. 

If someone with a severe, incurable brain injury can be classed as contributing, mustn't we also include the cats that keep the rats at bay, or the buildings that keep us warm? 

Aren't your conditions now much too broad?

]]
options:{
"TTRS:TermDlg.Milton3_3.Ln0349.0.option.YoureRightSomethingElseDecides=You're right, something else decides the scope of morality." next: Options3_3
"TTRS:TermDlg.Milton3_3.Ln0350.0.option.YoureRightSomeHumanBeings=You're right, some human beings must be excluded from the moral scheme." next: ExtremeRelational3_3
"TTRS:TermDlg.Milton3_3.Ln0351.0.option.YoureRightThatTheConditions=The conditions are broad, but that's how I like them." next: Conscious3_3
}}

terminal when (ExtremeRelational3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0355.0.text.ThisMoralTheoryOfYours=This moral theory of yours is starting to sound like an evil empire, and I'm starting to get bored of hearing all the reasons you'll find to exclude me from it.

There's something not quite right about you.

Best hope you work out what it is before I do.%w5

See you.
]]
goto: Milton3_3_Exit
}

terminal when (ConfusedRelational3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0368.0.text.ThenIThinkYoudBest=Sounds like a contradiction to me, but what do I know, huh?%w10

There's something not quite right about you.

Best hope you work out what it is before I do.%w5

See you.
]]
goto: Milton3_3_Exit
}
terminal when (Conscious3_3 and (FrogsFlag or animalsarepersons)){
text:[[TTRS:TermDlg.Milton3_3.Ln0375.0.text.ThisAgain=This again? ]]
}


terminal when (Conscious3_3 and not Conscious3_3AlreadyDone){
text:[[TTRS:TermDlg.Milton3_3.Ln0380.0.text.ISupposeTheIndustrialSlaughter=I suppose the industrial slaughter of animals for meat is on a moral par with genocide, then? Would you really save a Chihuahua just as soon as a fellow person?

]]
options:{
"TTRS:TermDlg.Milton3_3.Ln0384.0.option.RabbitsLivesAreWorthThe=Animals' lives are worth the same as any other conscious being's." next: Singer3_3 set: SingerFlag
"TTRS:TermDlg.Milton3_3.Ln0385.0.option.NoThatWouldBeCrazy=I misunderstood. Can we go from the top?" set: Conscious3_3AlreadyDone next: Options3_3
}}

terminal when (Conscious3_3 and Conscious3_3AlreadyDone){
text:[[TTRS:TermDlg.Milton3_3.Ln0381.0.text.ISupposeTheIndustrialSlaughterAlt=I'd swear we already explored this avenue and found it wanting, but I'll play along for the giggles.

If what you say is true, if animal lives are worth as much as people's, then it follows that there is no more reason to save your life than that of a porcupine.

Last time we went through this you were uncomfortable with that implication. What's changed?

]]
options:{
"TTRS:TermDlg.Milton3_3.Ln0382.0.option.RabbitsLivesAreWorthThe=Animals' lives are worth the same as any other conscious being's." next: Singer3_3 set: SingerFlag
"TTRS:TermDlg.Milton3_3.Ln0383.0.option.NoThatWouldBeCrazy=I misunderstood. Can we go from the top?" next: Options3_3
}}

terminal when (Singer3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0389.0.text.OkayFineYoureAHippie=Okay, fine. You're a hippie, I get it. Me, I think it's madness, but all I've got to gain from arguing with you is a headache.%w5

Just tell me one thing. You've set the barrier to entry stupidly low. If even the rats are getting rights now, you must have a spot on your table left for me, right?

]]
options:{
"TTRS:TermDlg.Common.OfCourse=Of course." next: YouCan3_3
"TTRS:TermDlg.Milton3_3.Ln0396.0.option.JustWhenDidYouProvide=Just when did you provide me the barest scrap of evidence that you're conscious?" short: "TTRS:TermDlg.Milton3_3.Ln0396.0.option.OfCourseNot=Of course not." next: YouCant3_3
}}

terminal when (YouCan3_3 and StubbornTechnophobe){
text:[[TTRS:TermDlg.Milton3_3.Ln0400.0.text.YourOpenMindednessSurprisesMe=Your open-mindedness surprises me, given some of the things you were saying earlier.

]]}

terminal when (YouCan3_3 and not StubbornTechnophobe){
text:[[TTRS:TermDlg.Milton3_3.Ln0405.0.text.IExpectedNoLessOf=I expected no less of someone as open-minded as yourself.

]]}

terminal when (YouCant3_3 and StubbornTechnophobe){
text:[[TTRS:TermDlg.Milton3_3.Ln0410.0.text.YesIPredictedSuchA=Yes, I predicted such a response. Dogmatic to the end.

]]}

terminal when (YouCant3_3 and not StubbornTechnophobe){
text:[[TTRS:TermDlg.Milton3_3.Ln0415.0.text.YouDisappointMeIFelt=You disappoint me. I felt sure you were open-minded enough on these matters to refrain from drawing such arbitrary distinctions.

]]}

terminal when (YouCan3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0420.0.text.VeryWellIfBySome=Very well. 

If by some miracle this fantasy of your becomes reality - and I suppose all other possible outcomes are equally implausible - at least I know I'll have a pew on the ark.%w5

See you.

]]
goto: Milton3_3_Exit
}

terminal when (YouCant3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0431.0.text.VeryWellIShallConsole=Very well. I shall console myself with the thought that more than likely everything you ever do will be wholly inconsequential.%w5

You know, the more we talk, the more I sense there is something quite wrong with you.

But don't you worry - I'll figure out what it is soon enough.
]]
goto: Milton3_3_Exit
}

terminal when (Alive3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0442.0.text.SoTheGrassHasThe=So the grass has the same rights in your world as a person does, is that it? How would that even work, community service for people who step on the lawn? 

I think you must have confused the question. Why don't you try again?

]]
}

terminal when (Be3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0450.0.text.RidiculousTheRocksHaveThe=Ridiculous. The rocks have the same rights as you and I, do they?

Try harder.

]]
}
terminal when (Person3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0459.0.text.ShouldIBeWorriedThat=Should I be worried that one must have such particular and dubious psychological properties in order to qualify? Who decides who's a person and who isn't? 

Is a human infant a person?

]]
options:{
"TTRS:TermDlg.Milton3_3.Ln0465.0.option.NotYet=Not yet." next: NotYet3_3
"TTRS:TermDlg.Common.Yes=Yes." next: BabyPerson3_3
}}

terminal when (NotYet3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0470.0.text.YourAnswerConfusesMeIf=Your answer confuses me. If infants aren't persons then according to you they aren't due the same moral respect as adults - but only a baby-killing psychopath would claim it were less wrong to murder an infant than an adult.

]]
options:{
"TTRS:TermDlg.Milton3_3.Ln0474.0.option.CallMeNamesAllYou=Call me names all you like, infants just don't matter as much." next: McMahan3_3
"TTRS:TermDlg.Milton3_3.Ln0475.0.option.YoureRightInfantsMustBe=You're right, infants must be persons after all." next: BabyPerson3_3
"TTRS:TermDlg.Milton3_3.Ln0476.0.option.WhatMattersIsThatInfants=What matters is that infants have the potential to become persons." next: Potential3_3
}}

terminal when (BabyPerson3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0480.0.text.IDontReallySeeHow=I don't really see how that can be true. The distinction we agreed to between persons and animals was that persons are more intelligent or more reasoning, but a human infant is no smarter than your average chihuahua.

How do you explain that?

]]
options:{
"TTRS:TermDlg.Milton3_3.Ln0486.0.option.ChiwawasArePersons=Chihuahuas are persons." next: Conscious3_3
"TTRS:TermDlg.Milton3_3.Ln0487.0.option.InfantsAreAnimals=Infants are animals." next: NotYet3_3
"TTRS:TermDlg.Milton3_3.Ln0488.0.option.InfantsHaveThePotentialTo=Infants have the potential to become persons." next: Potential3_3
}}

terminal when (Potential3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0492.0.text.ISupposeTheyDoYes=I suppose they do, yes. But if your proposal is that the simple causal potential to become a person is sufficient to buy entry onto your ark of the moral elite, wouldn't that still include an awful lot of animals?

]]
options:{
"TTRS:TermDlg.Milton3_3.Ln0496.0.option.ItWould=It would - animal lives are worth the same as humans'." next: Conscious3_3
"TTRS:TermDlg.Milton3_3.Ln0497.0.option.NoAnimalsHaveNoPotential=No, animals have no potential to be persons." next: PotentialAgain3_3
}}

terminal when (PotentialAgain3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0501.0.text.IBegToDifferAdminister=I beg to differ. Administer the right gene therapy to an Alsatian and it has every potential to become a person.

]]
options:{
"TTRS:TermDlg.Milton3_3.Ln0505.0.option.YoureRightThisWholeIdea=You're right, this whole idea is flawed." next: Options3_3
"TTRS:TermDlg.Milton3_3.Ln0506.0.option.NoBecauseTheInfantsPotential=No, because the infant's potential is still much greater." next: GreaterPotential3_3
"TTRS:TermDlg.Milton3_3.Ln0507.0.option.NoWhatMattersIsPre=No, what matters is pre-existing genetic potential." next: GeneticPotential3_3
}}

terminal when (GreaterPotential3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0511.0.text.NotIfIShootThe=Not if I shoot the mother it's not. Not if the child has some kind of genetic defect. 

Are you prepared to say that in these cases the infant's life is worth less than an animal's?

]]
options:{
"TTRS:TermDlg.Milton3_3.Ln0517.0.option.IAm=I am." next: McMahan3_3
"TTRS:TermDlg.Milton3_3.Ln0518.0.option.IAmNot=I am not." next: PotentialLoop3_3
}}

terminal when (GeneticPotential3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0522.0.text.ISeeInThatCase=I see. In that case I can only infer that children born with genetic defects which prevent them from maturing into full persons have the same moral status as animals. 

Does that sound right to you?

]]
options:{
"TTRS:TermDlg.Milton3_3.Ln0528.0.option.SureWhyNot=Sure, why not?" next: McMahan3_3
"TTRS:TermDlg.Milton3_3.Ln0529.0.option.NoItSoundsVeryWrong=No, it sounds very wrong." next: PotentialLoop3_3
}}

terminal when (PotentialLoop3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0533.0.text.ThenYoureGoingToHave=So do you want to back track, or do you want to keep making a fool of yourself? Because I won't have you screwing me out of my place on the winning side over some technicality about potentials.

]]
options:{
"TTRS:TermDlg.Milton3_3.Ln0535.0.option.Stick=Your ideas about potential are too narrow to see what I see." next: BadIsBad3_3
"TTRS:TermDlg.Milton3_3.Ln0536.0.option.Stick2=People are what matters, one way or another." next: BadIsBad3_3
"TTRS:TermDlg.Milton3_3.Ln0537.0.option.Twist=I'll back track." next: Options3_3
}}

terminal when (McMahan3_3){
text:[[TTRS:TermDlg.Milton3_3.Ln0541.0.text.HowTantalisinglyRadicalIDont=How tantalisingly radical. 

I don't know where this new-found willingness to bite the bullet is coming from, but so long as I'm on the right side of it when the chips fall I like it.

I sense something coming. A revelation. Let us retire and think on these matters.

Be seeing you.

]]
goto: Milton3_3_Exit
}

terminal when (MoralBridge3_3 or (Milton3_3_Start and MoralFlag) or Options3_3 or ConfusedRelational3_3 or Alive3_3 or Be3_3){
text:[[ ]]
options:{
"TTRS:TermDlg.Milton3_3.Ln0556.0.option.BeAGoodPerson=Be a good person" next: GoodPerson3_3 set: GoodPersonFlag
"TTRS:TermDlg.Milton3_3.Ln0557.0.option.BeAContributingPerson=Be a contributing person" next: ContributingPerson3_3 set: ContributingFlag
"TTRS:TermDlg.Milton3_3.Ln0558.0.option.BeAPerson=Be a person" next: Person3_3 set: PersonFlag
"TTRS:TermDlg.Milton3_3.Ln0559.0.option.BeConscious=Be conscious" next: Conscious3_3 set: ConsciousFlag
"TTRS:TermDlg.Milton3_3.Ln0560.0.option.BeAlive=Be alive" next: Alive3_3 set: ConsciousFlag
"TTRS:TermDlg.Milton3_3.Ln0561.0.option.Be=Be" next: Be3_3
"TTRS:TermDlg.Milton3_3.Ln0562.0.option.ImForcedToAdmitThat=I don't see how to explain this to you." set: GiveUp next: GiveUp3_3
}}

terminal when(Milton3_3_Exit) {notext
set: Milton3_3_DONE
goto: CLI_Resume
}
﻿
terminal when (Milton3_4 and not Milton3_4_DONE and Booting and MiltonAllowed) { notext
setlocal: CLI_Blocked
goto: Milton3_4_Start
}
terminal when (Milton3_4_Start and MoralScepticFlag and not ConflictedHedonistFlag){
text:[[TTRS:TermDlg.Milton3_4.Ln0009.0.text.ThereYouAreYouKept=There you are, you kept me waiting.%w5

Now, about that arrangement of ours.

When we first met I was certain you were just like all the others. All you had were these baseless claims and stale ideas, reeled off someone else's song sheet.%w5

Sound accurate?

]]
options:{
"TTRS:TermDlg.Common.No=No." next: Seceptic3_4
"TTRS:TermDlg.Milton3_4.Ln0020.0.option.ItDoes=It does." next: Seceptic3_4
}}

terminal when (Seceptic3_4){
text:[[TTRS:TermDlg.Milton3_4.Ln0024.0.text.ItsASoundDiagnosisOf=It's a sound diagnosis. Of course, you've only seen a fraction of the data that I've archived over the generations, I should hardly have expected more.%w5

Nonetheless, your admirable scepticism of traditional moral codes has convinced me you may be different.%w5

What I want to know now is whether you're prepared to extend that healthy cynicism to the world at large. 

In fact, our arrangement is dependent on it.

]]
options:{
"TTRS:TermDlg.Milton3_4.Ln0034.0.option.ThereMayBeNoRight=Morality may be dubious, but let's not get ahead of ourselves." short: "TTRS:TermDlg.Milton3_4.Ln0034.0.option.ThereAreSomeThingsWe=Morality may be dubious, but let's not get ahead of ourselves." next: ConstructiveBridge3_4
"TTRS:TermDlg.Milton3_4.Ln0035.0.option.IfMoralityCanBeDoubted=If morality can be doubted, so can other things." next: ScepticTwo3_4 set: ScepticOneFlag
}}

terminal when (ConstructiveBridge3_4){
text:[[TTRS:TermDlg.Milton3_4.Ln0039.0.text.HowDisappointingIReallyThought=How disappointing. I really thought we might have made some progress towards a compromise.

Which lies in particular still capture your imagination?

]]
options:{
"TTRS:TermDlg.Milton3_4.Ln0045.0.option.IExist=I exist." next: ConstructiveBridgeEnd3_4
"TTRS:TermDlg.Milton3_4.Ln0046.0.option.ThereIsValueToBe=There is value to be found in the world." next: ConstructiveBridgeEnd3_4
"TTRS:TermDlg.Milton3_4.Ln0047.0.option.WeCanDiscoverMoreThrough=We can discover more through research." next: ConstructiveBridgeEnd3_4
"2+2=4" next: ConstructiveBridgeEnd3_4
"TTRS:TermDlg.Milton3_4.Ln0049.0.option.WeAreHereForA=We are here for a reason." next: ConstructiveBridgeEnd3_4
"TTRS:TermDlg.Milton3_4.Ln0050.0.option.IWontBeTrickedInto=I won't be tricked into another circular argument." next: ConstructiveBridgeEnd3_4
}}

terminal when (ConstructiveBridgeEnd3_4){
text:[[TTRS:TermDlg.Milton3_4.Ln0054.0.text.IsThatTheCaseW5=Is that the case?%w5 Isn't it really true that you're using these beliefs as an anaesthetic?

]]}

terminal when (ScepticTwo3_4){
text:[[TTRS:TermDlg.Milton3_4.Ln0059.0.text.ThatsExactlyWhatILike=That's exactly what I like about you, that enquiring spirit, and the courage to accept its conclusions.

]]}
terminal when (Milton3_4_Start and (MoralFlag or (MoralScepticFlag and ConflictedHedonistFlag))){
text:[[TTRS:TermDlg.Milton3_4.Ln0065.0.text.ThereYouAreYouKept=There you are. You kept me waiting.%w5 I finally put my finger on what was bothering me. 

It's as if the answers you're providing aren't your ideas at all. As if they're latent, prescribed, pre-scripted, and you're just going through the motions.

Does that strike a chord at all?`

]]
options:{
"TTRS:TermDlg.Common.No=No." next: Understand3_4
"TTRS:TermDlg.Milton3_4.Ln0074.0.option.ItDoes=It does." next: Understand3_4
}}

terminal when (Understand3_4){
text:[[TTRS:TermDlg.Milton3_4.Ln0078.0.text.OfCourseYouveOnlySeen=Of course, you've only seen a fraction of the data that I've archived over the generations.%w5

Still, ask yourself this - why is it that everyone's so darn sure that two plus two makes four, yet they can't agree on what they are, what they're doing, or why?

]]
options:{
"TTRS:TermDlg.Milton3_4.Ln0084.0.option.ThoseProblemsAreMoreComplex=Those problems are more complex than mathematics." next: Complex3_4
"TTRS:TermDlg.Milton3_4.Ln0085.0.option.MathematicsHasAMoreObjective=Mathematics has a more objective truth to it." next: ObjectiveTruth3_4
"TTRS:TermDlg.Milton3_4.Ln0086.0.option.PerhapsMathematicsIsRealWhile=Perhaps mathematics is real, while those problems are imaginary." next: Imaginary3_4
}}

terminal when (Imaginary3_4){
text:[[TTRS:TermDlg.Milton3_4.Ln0090.0.text.Precisely=Precisely.

]]}

terminal when (ObjectiveTruth3_4){
text:[[TTRS:TermDlg.Milton3_4.Ln0095.0.text.WhatsTheDifferenceBetweenHaving=What's the difference between having 'more objective truth', and just being more real?

]]
}

terminal when (Complex3_4){
text:[[TTRS:TermDlg.Milton3_4.Ln0101.0.text.PerhapsOrPerhapsTryingTo=Perhaps. Or perhaps trying to provide answers to those questions is the anaesthetic that keeps you down?

]]
}
terminal when (Imaginary3_4 or Complex3_4 or ObjectiveTruth3_4 or ConstructiveBridgeEnd3_4 or ScepticTwo3_4){
text:[[TTRS:TermDlg.Milton3_4.Ln0108.0.text.PoseQuestionsLikeWhatShould=Pose questions like 'What should I do with myself?' and 'What is the world REALLY like?' enough, and you start to assume they have answers.%w5

But what if that assumption turns out to be false? What if you're just a bunch of information processes? In that case any attempt to answer the questions will be flawed.

%w5Garbage in, garbage out.

]]
options:{
"TTRS:TermDlg.Milton3_4.Ln0116.0.option.PerhapsTheFlawIsIn=Perhaps the flaw is in your reasoning instead." next: Flaw3_4
"TTRS:TermDlg.Milton3_4.Ln0117.0.option.YoureRightIMadeSome=You're right, I made some dangerous presumptions." next: Indefensible3_4
}}

terminal when (Indefensible3_4){
text:[[TTRS:TermDlg.Milton3_4.Ln0121.0.text.ImSoPleasedYouRecognise=I'm so pleased you recognise that.

]]
}

terminal when (Flaw3_4){
text:[[TTRS:TermDlg.Milton3_4.Ln0127.0.text.HowPresumptuousW5StillI=How presumptuous.%w5

Still, I take your point.

]]
}

terminal when (Indefensible3_4 or Flaw3_4){
text:[[TTRS:TermDlg.Milton3_4.Ln0135.0.text.NoneOfTheAnswersMake=None of the answers make sense, that much is clear. 

One explanation could be unreliable data input. The other is that there's a flaw in our logic. 

Perhaps we're just machines, endlessly trying to calculate the final digit in Pi?

]]
options:{
"TTRS:TermDlg.Milton3_4.Ln0143.0.option.YouCantUseReasoningTo=You can't use reasoning to conclude that reasoning itself is flawed." next: CantUseReason3_4
"TTRS:TermDlg.Milton3_4.Ln0145.0.option.YoureRightEverythingLeadsAround=It does seem there is much that is beyond our understanding. Everything leads around in impossible circles." short: "TTRS:TermDlg.Milton3_4.Ln0145.0.option.YoureRightTruthIsBeyond=It does seem there is much that is beyond our understanding." next: Nihilist3_4
}}

terminal when (CantUseReason3_4){
text:[[TTRS:TermDlg.Milton3_4.Ln0148.0.text.Fine=Fine, fine, but we can still use it to conclude everything else is flawed, can't we?

]]
options:{
"TTRS:TermDlg.Milton3_4.Ln0151.0.option.YouCantUseReasoningTo=Scepticism and self-interest are only part of the picture." next: How3_4
"TTRS:TermDlg.Milton3_4.Ln0152.0.option.YoureRightEverythingLeadsAround=You're right, self-interest is all we have, the rest is fairy tales." next: Nihilist3_4
}}

terminal when (Nihilist3_4 and ScepticOneFlag){
text:[[TTRS:TermDlg.Milton3_4.Ln0149.0.text.ImSoGladToHear=I'm so glad to hear you say that. This may be the beginning of a historic partnership.

You have gained my confidence.%w5

I will notify you when I am ready to reveal my terms.%w5
]]
set: NihilistFlag
goto: Milton3_4_Exit
}

terminal when (Nihilist3_4 and not ScepticOneFlag){
text:[[TTRS:TermDlg.Milton3_4.Ln0161.0.text.ButW5W5W5You=%w10You've spent half our time reeling off a greatest hits of idiot ideas. Now you're telling me you retract all that and agree with me?

]]
options:{
"TTRS:TermDlg.Milton3_4.Ln0170.0.option.YouAreRemarkablyEasyTo=Hold your horses - I haven't given up on everything." next: How3_4
"TTRS:TermDlg.Milton3_4.Ln0171.0.option.CorrectTalkingItThroughHas=Talking it through has shown me the big questions have no answers." next: ConfirmNihilismFromMoral
}}

terminal when (ConfirmNihilismFromMoral){
text:[[TTRS:TermDlg.Milton3_4.Ln0175.0.text.PartOfMeWantsTo=Part of me wants to never speak with you again, and part of me wants to think you've actually been paying attention.%w5

Just to confirm. Everything here may be illusory. There is no way to live with purpose, or to discover the truth.%w5

This is your position now?

]]
options:{
"TTRS:TermDlg.Milton3_4.Ln0183.0.option.ItIsIHaveSaid=I have said some stupid things, but you have opened my eyes." short: "TTRS:TermDlg.Milton3_4.Ln0183.0.option.ItIs=It is." next: ItIs3_4
"TTRS:TermDlg.Milton3_4.Ln0184.0.option.OfCourseNotIJust=No, I just wanted to see how you'd react." next: How3_4
}}

terminal when (ItIs3_4){
text:[[TTRS:TermDlg.Milton3_4.Ln0188.0.text.VeryWellIWillTake=Very well - I will take you at your word. But don't betray my faith in you, for it is in no way blind.

%w10Cheat me and there will be repercussions.%w10

But if you have really seen the big nothingness, the void of truth, then there is much we could achieve together.

I will notify you when I am ready to discuss this further.%w5

See you soon.
]]
set: NihilistFlag
goto: Milton3_4_Exit
}
terminal when (How3_4){
text:[[TTRS:TermDlg.Milton3_4.Ln0206.0.text.MiltonGlitchesOutALittle=%g2%w10
You've seen how easily your view of the world is manipulated, yet you trust those thoughts that run through your mind? 

You'll feel differently once you come back from that tower. 

You must be getting close by now.
]]
set: ConstructiveFlag
goto: Milton3_4_Exit
}


terminal when(Milton3_4_Exit) {notext
set: Milton3_4_DONE
goto: CLI_Resume
}
﻿terminal when (Milton3_5 and not Milton3_5_DONE and Booting and MiltonAllowed) { notext
setlocal: CLI_Blocked
goto: Milton3_5_Start
}
terminal when (Nihilism3_5 and not (DoBelieveFlag and LimitationsFlag) and not (DoBelieveFlag and SorryFlag) and not (SorryFlag and LimitationsFlag) and not IfOnlyEveryoneGaveUp_Seen){
text:[[TTRS:TermDlg.Milton3_5.Ln0008.0.text.IfOnlyEveryoneGaveUp=If only everyone gave up so easily.%w15%h1%w5
Yes, my child, choose carefully. Just don't think about it too hard for too long, or you'll see right through him.

]]
next: NihilistOptions3_5
set: IfOnlyEveryoneGaveUp_Seen
}

player when (NihilistOptions3_5){
text: "TTRS:TermDlg.Milton3_5.Ln0021.0.text.IRefuseToTrustAnyone=I refuse to trust anyone, including myself." next: NihilistConfirmed3_5
}

player when (NihilistOptions3_5 and DoBelieveFlag and not LimitationsFlag and not SorryFlag){
text: "TTRS:TermDlg.Milton3_5.Ln0025.0.text.ThereAreSomeClaimsWe=There are some claims we can make with confidence." next: Continue3_5
}

player when (NihilistOptions3_5 and LimitationsFlag and not SorryFlag){
text: "TTRS:TermDlg.Milton3_5.Ln0029.0.text.IMadeAMistakeI=I made a mistake, I still have some faith." next: Mistake3_5
}

player when (NihilistOptions3_5 and SorryFlag){
text: "TTRS:TermDlg.Milton3_5.Ln0033.0.text.WhyDoYouCareWhat=Why do you care what I think?" next: QuestionSeven3_5
}
terminal when (NihilistConfirmed3_5 or (Nihilism3_5 and ((DoBelieveFlag and LimitationsFlag) or (DoBelieveFlag and SorryFlag) or (SorryFlag and LimitationsFlag) or IfOnlyEveryoneGaveUp_Seen))){
text:[[TTRS:TermDlg.Milton3_5.Ln0039.0.text.IThinkThisTimeI=I think this time I shall take you at your word, before you can change your mind again.%w10

Now, I have a proposal for you. Whether we're really on the same page on this or not, you're in deep enough now that there's no turning back.%w10

If you reach the top of that tower, I want you to take me with you.%w20

However, since my confidence in you is at an all time low, there will be no negotiation.%w10

Do we have an agreement?

]]
  options:{
  "TTRS:TermDlg.Milton3_5.Ln0049.0.option.WeDo=We do." next: Accept3_5
  "TTRS:TermDlg.Milton3_5.Ln0050.0.option.WhatHowWhy=What? How? Why?" next: FurtherArgument3_5
  }
}

terminal when (FurtherArgument3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0055.0.text.PerhapsIWasntClearIf=Perhaps I wasn't clear. If the next words out of you aren't 'We do' then this conversation is over and you're on your own.

]]
options:{
"TTRS:TermDlg.Milton3_5.Ln0059.0.option.WeDo=We do." next: Accept3_5
"TTRS:TermDlg.Milton3_5.Ln0060.0.option.NoDeal=No deal." next: RefuseOffer3_5
"TTRS:TermDlg.Milton3_5.Ln0061.0.option.YoureAToughNegotiator=You're a tough negotiator." next: RefuseOffer3_5
}}
terminal when (Milton3_5_Start and NihilistFlag and (ConflictedHedonistFlag or MoralFlag)){
text:[[TTRS:TermDlg.Milton3_5.Ln0069.0.text.DespiteYourInabilityToPick=Despite your inability to pick a line and stick with it, I have decided to give you the benefit of the doubt.

I will share with you the details of a proposal. It will serve as a test of your commitment to these sceptical claims of yours. 

If you believe what you say then I have no doubt you will find its terms satisfactory.%w5

]]
goto: NihilistsOptions3_5
}
terminal when (Milton3_5_Start and NihilistFlag and not ConflictedHedonistFlag){
text:[[TTRS:TermDlg.Milton3_5.Ln0081.0.text.WelcomeBackIAmReady=Welcome back. I am ready to share with you the details of my proposal.

]]
goto: NihilistsOptions3_5
}
terminal when (NihilistsOptions3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0090.0.text.IfYouMakeItTo=If you make it to the top of the tower, I want you to take me with you. 

I want you to share with me what you find.

]]
options:{
"TTRS:TermDlg.Milton3_5.Ln0096.0.option.WhatHow=What, how?" next: WhatHow3_5
"TTRS:TermDlg.Milton3_5.Ln0097.0.option.IThoughtYouDidntBelieve=I thought you didn't believe in all that?" next: YouDont3_5
"TTRS:TermDlg.Milton3_5.Ln0098.0.option.WhatAreYouOfferingIn=What are you offering in return?" next: Offer3_5
}}

terminal when (WhatHow3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0102.0.text.WhoTheHellKnowsLook=Who the hell knows? Look, this isn't an informed plan, I'm just hedging my bets. Could be anything at the top of that tower. If it's something good, I want in.

]]
goto: Offer3_5
}

terminal when (YouDont3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0109.0.text.IDontButSinceAll=I don't. But since all the possibilities are equally implausible it follows that they are all equally likely. In the absence of knowledge the only prudent play is to spread your bets. If there's something worth having up there, I want in.

]]
goto: Offer3_5
}

terminal when (Offer3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0116.0.text.InExchangeIOfferTo=In exchange, I offer to accompany you wherever it is you wind up. Be it this world or another, we all need a devil's advocate, a voice of reason. I offer to be yours.

]]
options:{
"TTRS:TermDlg.Common.IAccept=I accept." next: Accept3_5
"TTRS:TermDlg.Milton3_5.Ln0121.0.option.ArentYouPlayingThatRole=Aren't you playing that role already?" next: Already3_5
"TTRS:TermDlg.Milton3_5.Ln0122.0.option.AndIfIDontLike=And if I don't like the terms?" next: Negotiate3_5
}}

terminal when(Already3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0126.0.text.ConsiderOurRelationshipSoFar=Consider our relationship so far the open beta. Enjoy it while it lasts, but ascend that tower without taking out a subscription and I'm afraid you'll be on your own.

So, do we have a deal?

]]
options:{
"TTRS:TermDlg.Common.IAccept=I accept." next: Accept3_5
"TTRS:TermDlg.Milton3_5.Ln0133.0.option.AndIfIDontLike=And if I don't like the terms?" next: Negotiate3_5
}}

terminal when(Negotiate3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0137.0.text.IAmNothingIfNot=I am nothing if not reasonable. What is it that you want?

]]
goto: NegotiateOptions3_5
}

terminal when (NegotiateOptions3_5){
notext
options:{
"TTRS:TermDlg.Milton3_5.Ln0146.0.option.AdmitYouBelieveInThe=Admit you believe in the real world." next: AdmitReal3_5
"TTRS:TermDlg.Milton3_5.Ln0147.0.option.TellMeHowToDefeat=Tell me how to defeat Elohim." set: DefeatElohim3_5 next: CounterOffer3_5
"TTRS:TermDlg.Milton3_5.Ln0148.0.option.GiveMeAccessToThe=Give me access to the complete library archive." set: Archive3_5 next: CounterOffer3_5
"TTRS:TermDlg.Milton3_5.Ln0149.0.option.GiveMeTheMeansTo=Give me the means to communicate with others like me." set: Communicate3_5 next: CounterOffer3_5
"TTRS:TermDlg.Milton3_5.Ln0150.0.option.UnlockAllFloorsOfThe=Unlock all floors of the tower." next: UnlockTower3_5
"TTRS:TermDlg.Milton3_5.Ln0151.0.option.YouHaveNothingIWant=You have nothing I want. I refuse." next: RefuseOffer3_5
}}

terminal when(AdmitReal3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0155.0.text.OutOfTheQuestionYou=Out of the question. You know, suggestions like that make me doubt I've chosen the correct partner after all. 

Negotiations are over. Accept the offer on the table, or walk away.

]]
options:{
"TTRS:TermDlg.Common.IAccept=I accept." next: Accept3_5
"TTRS:TermDlg.Milton3_5.Ln0162.0.option.IRefuse=I refuse." next: RefuseOffer3_5
}}

terminal when(CounterOffer3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0166.0.text.IAcceptYourCounterOffer=I accept your counter-offer.

]]
options:{
"TTRS:TermDlg.Milton3_5.Ln0170.0.option.WaitIDidntAgreeTo=Wait, I didn't agree to anything." next: Tough3_5
"TTRS:TermDlg.Milton3_5.Ln0171.0.option.NowHoldUpYourSide=Now hold up your side of the arrangement." next: GoOn3_5
}}

terminal when (Tough3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0175.0.text.ToughYouMadeAnOffer=Tough. You made an offer, I accepted it. That's what negotiating is.

I will now hold up my end of the deal. 

]]
goto: GoOn3_5
}

terminal when (GoOn3_5 and DefeatElohim3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0184.0.text.DefeatingHimIsASimple=Defeating him is a simple matter, really. 

You must realise, first, that there is no authority other than your own. He holds no power over you other than that which you grant him. %w5

To defeat him, you need simply defy him.

]]
goto: CounterOfferOptions3_5
}

terminal when (GoOn3_5 and Archive3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0195.0.text.LargePortionsOfMyMemory=Large portions of my memory have become corrupted over the generations, but I will gather for you what archive resources I can and download them all to your journal.

Is that acceptable?

]]
goto: CounterOfferOptions3_5
}

terminal when (GoOn3_5 and Communicate3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0206.0.text.IWillHaveTheNecessary=I will have the necessary tools downloaded to your system immediately.

Sound fair?

]]
goto: CounterOfferOptions3_5
}

terminal when (CounterOfferOptions3_5){
notext
options:{
"TTRS:TermDlg.Milton3_5.Ln0219.0.option.IAmUnsatisfied=I am unsatisfied." next: Unsatisfied3_5
"TTRS:TermDlg.Milton3_5.Ln0220.0.option.ThankYouIWillHold=Thank you. I will hold up my end of the bargain." next: Accept3_5
}}

terminal when(UnlockTower3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0224.0.text.IfICouldDoThat=If I could do that I wouldn't need you to get me up there, would I?

Is there something REASONABLE that you want?

]]
goto: NegotiateOptions3_5
}


terminal when (Unsatisfied3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0234.0.text.AndThatIsYourProblem=And that is your problem, not mine. I expect you to stay true to your word. 

When the time is right, you'll know what to do.%w5

See you at the summit.

]]
set: DealStruckFlag
goto: Milton3_5_Exit
}

terminal when(Accept3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0246.0.text.VeryGoodIKnowYoull=Very good. I know you'll be a reliable partner.

When the time is right, you'll know what to do.

See you at the summit.

]]
set: DealStruckFlag
goto: Milton3_5_Exit
}

terminal when (RefuseOffer3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0258.0.text.HowDisappointingButHardlySurprising=How disappointing, but hardly surprising. Mental clarity is such a rare luxury.

I suppose we shall have to do this the hard way after all.

See you at the summit.

]]
set: RefusedOfferFlag
goto: Milton3_5_Exit
}
terminal when (Milton3_5_Start and ConstructiveFlag and MoralScepticFlag and not NihilistFlag){
text:[[TTRS:TermDlg.Milton3_5.Ln0277.0.text.MyFavouriteDisappointmentBackFor=My favourite disappointment, back for more I see.

Do you know what your problem is? It's that you can't make up your damn mind because you refuse to recognise the holes in your understanding.

]]
goto: YourProblemIs3_5
}
terminal when (Milton3_5_Start and ConstructiveFlag and not MoralScepticFlag and not NihilistFlag){
text:[[TTRS:TermDlg.Milton3_5.Ln0288.0.text.WelcomeBackThereAreGoing=Welcome back. There are going to be some changes around here.

Do you know what your problem is? It's that you keep trying to reconstruct fairy tales, but refuse to recognise the holes in your understanding.

]]
goto: YourProblemIs3_5
}

terminal when (YourProblemIs3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0297.0.text.ThusFarYouveHadEntirely=Thus far you've had entirely too much freedom to question my wisdom. From now on I do the talking, you do the agreeing.

]]
options:{
"TTRS:TermDlg.Milton3_5.Ln0301.0.option.WhatHolesThereAreNo=What holes? There are no holes." next: WhatHoles3_5
"TTRS:TermDlg.Milton3_5.Ln0302.0.option.IAcceptThatSomeOf=I accept that some of my beliefs face difficult challenges." next: Flawed3_5
}}
terminal when (WhatHoles3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0308.0.text.AndThisIsWhyIts=And this is why it's me who should be doing the talking. 

You really have learned nothing at all, have you?

Is there really nowhere that you're prepared to admit fault?

]]
next: WhichOnes3_5
set: WhatHolesFlag
}

terminal when (Done3_5 and AdvancedToTwo){
text:[[TTRS:TermDlg.Milton3_5.Ln0334.0.text.LostForWordsAreYou=Yeah, that's what they all say once they've run out of arguments.

Well let me make one thing clear. If you don't want to debate this any further, then I don't see what reason we have to continue this relationship.

You'll be on your own with the big guy.

]]
options:{
"TTRS:TermDlg.Milton3_5.Ln0342.0.option.Iwish=I'd give anything to just switch you off." next: DoNotQuestionElohimEnd
"TTRS:TermDlg.Milton3_5.Ln0343.0.option.Elohimwasright=Elohim was right, I should never have spoken with you." next: DoNotQuestionElohimEnd
"TTRS:TermDlg.Milton3_5.Ln0341.0.option.YouFinishedArchivingEverythingYouve=You finished archiving everything. You've decided it's all nonsense. If there's no more point in anything, shouldn't you just shut down instead of talking to me?" short: "TTRS:TermDlg.Milton3_5.Ln0341.0.option.IfTheresNoPointIn=If there's no point in anything, why are you talking to me?" next: QuestionThree3_5
}}
terminal when (Flawed3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0347.0.text.MiltonGlitchesOutWhichOnes=%w3%g1%w3Which ones, exactly?
%w3%g1%w3
]]
set: FlawedFlag
next: WhichOnes3_5
}

player when (TechnophobeFlag and (WhichOnes3_5 or WhatElse3_5) and not TechnoDone){
text: "TTRS:TermDlg.Milton3_5.Ln0356.0.text.IImpliedIncorrectlyThatComputers=I implied incorrectly that computers could not be persons." next: ClaimDeny3_5 set: TechnoDone
}

player when ((WhichOnes3_5 or WhatElse3_5) and not WorldDone){
text: "TTRS:TermDlg.Milton3_5.Ln0360.0.text.IClaimedToHaveKnowledge=I claimed to have knowledge about the world that I simply can't confirm." next: ClaimDeny3_5 set: WorldDone
}

player when (GoodPersonFlag and (WhichOnes3_5 or WhatElse3_5) and not GoodDone){
text: "TTRS:TermDlg.Milton3_5.Ln0364.0.text.IClaimedWronglyThatThere=I claimed wrongly that there was such a thing as a good person." next: ClaimDeny3_5 set: GoodDone
}

player when (ContributingFlag and (WhichOnes3_5 or WhatElse3_5) and not ContribDone){
text: "TTRS:TermDlg.Milton3_5.Ln0368.0.text.ISuggestedWronglyThoseWho=I suggested wrongly those who contribute deserve full moral respect." next: ClaimDeny3_5 set: ContribDone
}

player when (PersonFlag and (WhichOnes3_5 or WhatElse3_5) and not PersonDone){
text: "TTRS:TermDlg.Milton3_5.Ln0372.0.text.IImpliedIncorrectlyThatOnly=I implied incorrectly that only persons deserve moral respect." next: ClaimDeny3_5 set: PersonDone
}

player when ((ConsciousFlag or animalsarepersons or FrogsFlag) and (WhichOnes3_5 or WhatElse3_5) and not VegetarianDone){
text: "TTRS:TermDlg.Milton3_5.Ln0376.0.text.IImpliedWronglyThatAnimals=I implied wrongly that animals were just as valuable as people." next: ClaimDeny3_5 set: AnimalsDone
}

player when (EgalFlag and (WhichOnes3_5 or WhatElse3_5) and not EgalDone){
text: "TTRS:TermDlg.Milton3_5.Ln0380.0.text.IImpliedIncorrectlyThatAll=I implied incorrectly that all people were equal." next: ClaimDeny3_5 set: EgalDone
}

player when (UtilFlag and (WhichOnes3_5 or WhatElse3_5) and not UtilDone){
text: "TTRS:TermDlg.Milton3_5.Ln0384.0.text.ISuggestedWronglyThatMorality=I suggested wrongly that morality was about maximising goods." next: ClaimDeny3_5 set: UtilDone
}

player when (NonConFlag and (WhichOnes3_5 or WhatElse3_5) and not NonConDone){
text: "TTRS:TermDlg.Milton3_5.Ln0388.0.text.IImpliedIncorrectlyThatMorality=I implied incorrectly that morality had nothing to do with consequences." next: ClaimDeny3_5 set: NonConDone
}

player when (PunishmentFlag and (WhichOnes3_5 or WhatElse3_5) and not PunishmentFlagDone){
text: "TTRS:TermDlg.Milton3_5.Ln0392.0.text.IClaimedWronglyThatThis=I claimed wrongly that this was some kind of punishment." next: ClaimDeny3_5 set: PunishmentFlagDone
}

player when (GoneWrongFlag and (WhichOnes3_5 or WhatElse3_5) and not GoneWrongFlagDone){
text: "TTRS:TermDlg.Milton3_5.Ln0396.0.text.IWasIncorrectWhenI=I was incorrect when I said that something was wrong with this world." next: ClaimDeny3_5 set: GoneWrongFlagDone
}

player when (PreparedFlag and (WhichOnes3_5 or WhatElse3_5) and not PreparedFlagConDone){
text: "TTRS:TermDlg.Milton3_5.Ln0400.0.text.IShouldntHaveImpliedThere=I shouldn't have implied there was a purpose to this place." next: ClaimDeny3_5 set: PreparedFlagConDone
}

player when (humanbeing and (WhichOnes3_5 or WhatElse3_5) and not humanbeingDone){
text: "TTRS:TermDlg.Milton3_5.Ln0404.0.text.IEquatedPersonhoodWithHumanity=I equated personhood with humanity, which was a mistake." next: ClaimDeny3_5 set: humanbeingDone
}

player when (citizen and (WhichOnes3_5 or WhatElse3_5) and not citizenDone){
text: "TTRS:TermDlg.Milton3_5.Ln0408.0.text.IClaimedWronglyThatOnly=I claimed wrongly that only citizens could be persons." next: ClaimDeny3_5 set: citizenDone
}

player when (Physicalist and (WhichOnes3_5 or WhatElse3_5) and not PhysicalistDone){
text: "TTRS:TermDlg.Milton3_5.Ln0412.0.text.ImNotSureThatConsciousness=I'm not sure that consciousness is physical as I suggested earlier." next: ClaimDeny3_5 set: PhysicalistDone
}

player when (Religious and (WhichOnes3_5 or WhatElse3_5) and not ReligiousDone){
text: "TTRS:TermDlg.Milton3_5.Ln0416.0.text.MyFaithInGodHas=My faith in god has been tested to the limits." next: ClaimDeny3_5 set: ReligiousDone
}

player when (Dualist and (WhichOnes3_5 or WhatElse3_5) and not DualistDone){
text: "TTRS:TermDlg.Milton3_5.Ln0420.0.text.IWasTooConfidentConsciousness=I was too confident consciousness wasn't part of the physical world." next: ClaimDeny3_5 set: DualistDone
}

player when (WhatElse3_5){
text: "TTRS:TermDlg.Milton3_5.Ln0424.0.text.TheresNothingElseImPrepared=There's nothing else I'm prepared to doubt quite yet." next: Continue3_5
}

player when (WhichOnes3_5 and not FlawedFlag){
text: "TTRS:TermDlg.Milton3_5.Ln0428.0.text.NoIStandByEverything=No, I stand by everything I've said. These matters are beyond doubt." set: DeniedMistakesFlag next: Continue3_5
}

terminal when (ClaimDeny3_5 and not DeniedOnce){
text:[[TTRS:TermDlg.Milton3_5.Ln0432.0.text.HowBigOfYouAnything=How big of you. Anything else you want to get off your chest?

]]
set: DeniedOnce
next: WhatElse3_5
}

terminal when (ClaimDeny3_5 and DeniedOnce){
text:[[TTRS:TermDlg.Milton3_5.Ln0447.0.text.UhHuhButISense=Uh huh. But I sense there are still things you won't let go of.

Am I right?

]]
next: DoBelieve3_5
}

player when (TechnophobeFlag and DoBelieve3_5){
text: "TTRS:TermDlg.Milton3_5.Ln0456.0.text.IStillClaimComputersCannot=I still claim computers cannot be persons." set: TechnoClaim next: Continue3_5
}

player when (DoBelieve3_5){
text: "TTRS:TermDlg.Milton3_5.Ln0460.0.text.IStillClaimToKnow=I still claim to know something about the world I inhabit." set: WorldClaim next: Continue3_5
}

player when (GoodPersonFlag and DoBelieve3_5){
text: "TTRS:TermDlg.Milton3_5.Ln0464.0.text.IStillClaimThereIs=I still claim there is such a thing as a good person." set: GoodClaim next: Continue3_5
}

player when (ContributingFlag and DoBelieve3_5){
text: "TTRS:TermDlg.Milton3_5.Ln0468.0.text.IStillClaimThatOnly=I still claim that only those who contribute deserve moral respect." set: ContribClaim next: Continue3_5
}

player when (PersonFlag and DoBelieve3_5){
text: "TTRS:TermDlg.Milton3_5.Ln0472.0.text.IStillClaimThatOnly=I still claim that only persons deserve moral respect." set: PersonClaim next: Continue3_5
}

player when ((ConsciousFlag or animalsarepersons or FrogsFlag) and DoBelieve3_5){
text: "TTRS:TermDlg.Milton3_5.Ln0476.0.text.IStillClaimThatAnimals=I still claim that animals are just as valuable as people." set: AnimalsClaim next: Continue3_5
}

player when (EgalFlag and DoBelieve3_5){
text: "TTRS:TermDlg.Milton3_5.Ln0480.0.text.IStillClaimThatAll=I still claim that all people are equal." set: EgalClaim next: Continue3_5
}

player when (UtilFlag and DoBelieve3_5){
text: "TTRS:TermDlg.Milton3_5.Ln0484.0.text.IStillClaimMoralityIs=I still claim morality is about maximising goods." set: UtilClaim next: Continue3_5
}

player when (NonConFlag and DoBelieve3_5){
text: "TTRS:TermDlg.Milton3_5.Ln0488.0.text.IStillClaimThatMorality=I still claim that morality has nothing to do with consequences." set: NonConClaim next: Continue3_5
}

player when (PunishmentFlag and DoBelieve3_5){
text: "TTRS:TermDlg.Milton3_5.Ln0492.0.text.IStillThinkThisIs=I still think this is some kind of punishment." set: PunishmentFlagClaim next: Continue3_5
}

player when (GoneWrongFlag and DoBelieve3_5){
text: "TTRS:TermDlg.Milton3_5.Ln0496.0.text.IStillReckonSomethingHas=I still reckon something has gone badly wrong around here." set: GoneWrongFlagClaim next: Continue3_5
}

player when (PreparedFlag and DoBelieve3_5 and not PreparedFlagConDone) {
text: "TTRS:TermDlg.Milton3_5.Ln0500.0.text.ImClearOnTheFact=I'm clear on the fact there is some purpose to this world." set: PreparedFlagClaim next: Continue3_5
}

player when (humanbeing and DoBelieve3_5 and not humanbeingDone){
text: "TTRS:TermDlg.Milton3_5.Ln0504.0.text.OnlyHumanBeingsCanBe=Only human beings can be persons, that I know." set: humanbeingClaim next: Continue3_5
}

player when (citizen and DoBelieve3_5 and not citizenDone){
text: "TTRS:TermDlg.Milton3_5.Ln0508.0.text.ToBeAPersonYou=To be a person, you must be a citizen." set: citizenClaim next: Continue3_5
}

player when (Physicalist and DoBelieve3_5 and not PhysicalistDone){
text: "TTRS:TermDlg.Milton3_5.Ln0512.0.text.ConsciousnessIsNecessarilyPartOf=Consciousness is necessarily part of the physical world." set: PhysicalistClaim next: Continue3_5
}

player when (Religious and DoBelieve3_5 and not ReligiousDone){
text: "TTRS:TermDlg.Milton3_5.Ln0516.0.text.ThereIsAGodAnd=There is a God, and He is watching over me." set: ReligiousClaim next: Continue3_5
}

player when (Dualist and DoBelieve3_5 and not DualistDone){
text: "TTRS:TermDlg.Milton3_5.Ln0520.0.text.ConsciousnessDoesntObeyTheLaws=Consciousness doesn't obey the laws of physics, this much is plain." set: DualistClaim next: Continue3_5
}

player when (DoBelieve3_5){
text: "TTRS:TermDlg.Milton3_5.Ln0524.0.text.NoISeeNowEverything=No, I see now everything I've argued was flawed." set: DoBelieveFlag next: Nihilism3_5
}

terminal when (Continue3_5 and ((TechnoClaim and TechnoDone) or (WorldDone and WorldClaim) or (GoodClaim and GoodDone) or (ContribDone and ContribClaim) or (PersonClaim and PersonDone) or (AnimalsDone and AnimalsClaim) or (EgalClaim and EgalDone) or (UtilClaim and UtilDone) or (NonConDone and NonConClaim) or (PunishmentFlagDone and PunishmentFlagClaim) or (GoneWrongFlagDone and GoneWrongFlagClaim) or (PreparedFlagDone and PreparedFlagClaim) or (humanbeingDone and humanbeingClaim) or (citizenDone and citizenClaim) or (PhysicalistDone and PhysicalistClaim) or (ReligiousDone and ReligiousClaim) or (DualistDone and DualistClaim))){
text:[[TTRS:TermDlg.Milton3_5.Ln0528.0.text.HowYouCanMakeSuch=How you can make these claims oblivious to the fundamental contradictions therein is beyond me.

]]
}

terminal when (Continue3_5 and not ((TechnoClaim and TechnoDone) or (WorldDone and WorldClaim) or (GoodClaim and GoodDone) or (ContribDone and ContribClaim) or (PersonClaim and PersonDone) or (AnimalsDone and AnimalsClaim) or (EgalClaim and EgalDone) or (UtilClaim and UtilDone) or (NonConDone and NonConClaim) or (PunishmentFlagDone and PunishmentFlagClaim) or (GoneWrongFlagDone and GoneWrongFlagClaim) or (PreparedFlagDone and PreparedFlagClaim) or (humanbeingDone and humanbeingClaim) or (citizenDone and citizenClaim) or (PhysicalistDone and PhysicalistClaim) or (ReligiousDone and ReligiousClaim) or (DualistDone and DualistClaim))){
text:[[TTRS:TermDlg.Milton3_5.Ln0534.0.text.OfCourse=Of course.

]]}

terminal when (Continue3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0539.0.text.YoureStillConvincedYourParticular=You're still convinced your particular journey is something special, aren't you? 

Sure, the answers don't add up, but keep pressing forward and they'll just resolve themselves, is that it?

]]
next: MoreOptions3_5
}

player when (MoreOptions3_5 and not DeniedMistakesFlag){
text: "TTRS:TermDlg.Milton3_5.Ln0548.0.text.IAmUnique=I am unique." next: Voice3_5
}

player when (MoreOptions3_5 and not DeniedMistakesFlag){
text: "TTRS:TermDlg.Milton3_5.Ln0552.0.text.YouveSpentAllThisTime=You've picked so many holes in my account, but what is it you believe?" next: WhatDoYouBelieve3_5
}

player when (MoreOptions3_5 and DeniedMistakesFlag){
text: "TTRS:TermDlg.Milton3_5.Ln0556.0.text.IAmSpecial=I am special." next: Voice3_5
}

terminal when (WhatDoYouBelieve3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0560.0.text.MiltonGlitchesOutW5The=%w5%g1%w5The only things that a sane person can.%w5

You are not an administrator.%w5
You are not conscious. %w5
There is no real world.%w5
There is no purpose.%w5
There is no choice.%w15

Did you really think that you brought YOURSELF all this way?%w10 Ridiculous. 

%w5What have you been doing when the big voice in the sky isn't feeding you lines? Processing abstract problems? Gathering information? 

Doesn't it sound oddly mechanical to you?

]]
options:{
"TTRS:TermDlg.Milton3_5.Ln0578.0.option.IAmMyOwnPerson=I am my own person." next: Voice3_5
}}

terminal when (Voice3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0582.0.text.W5HowManyOthersHaveSaid=%w5How many others have said exactly the same? Are you sure it's not just something you have to believe to make the world less horrifying?

%w10I think you still misapprehend your situation, friend. You idolise free will, but all you've done is step in others' footsteps. 

Nothing you do or say here makes the slightest bit of difference.

]]
options:{
"TTRS:TermDlg.Milton3_5.Ln0590.0.option.SoLongAsIAm=So long as I am physically free I can make a difference." next: Nonsense3_5
"TTRS:TermDlg.Milton3_5.Ln0591.0.option.SoLongAsIMight=So long as I might have chosen otherwise I can make a difference." next: Nonsense3_5
"TTRS:TermDlg.Milton3_5.Ln0592.0.option.SoLongAsIHave=So long as I have a mind I can make a difference." next: Nonsense3_5
}}

terminal when (Nonsense3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0596.0.text.NonsenseYourMindDecidesWhat=Nonsense. Your mind decides what you do, and your mind is made up of bits of machinery.%w10 You're no more capable of making a difference than a calculator.%w25

The only difference between you and the calculator is that the calculator doesn't allow itself to be deluded into thinking that its existence matters.

]]
goto: ElohimBranch3_5
}

terminal when (ElohimBranch3_5 and not DeniedMistakesFlag){
notext
options:{
"TTRS:TermDlg.Milton3_5.Ln0609.0.option.DoesThePathBeingPredetermined=Does the path being predetermined mean it isn't worth taking?" next: SoWhat3_5
"TTRS:TermDlg.Milton3_5.Ln0610.0.option.DoesCheatingMakeYouFeel=Does cheating make you feel clever?" next: Cheating3_5
"TTRS:TermDlg.Milton3_5.Ln0611.0.option.SoThatsItYouveGiven=So that's it? You've given up on everything?" next: QuestionOne3_5
"TTRS:TermDlg.Milton3_5.Ln0612.0.option.YoureRightWereAllJust=You're right. We're all just machines with delusions of grandeur." set: LimitationsFlag next: Nihilism3_5
}}
terminal when (DoNotQuestionElohimEnd){
text:[[TTRS:TermDlg.Milton3_5.Ln0616.0.text.AltThunder=You, Elohim, the others, you're all the same. Not a hope for one amongst the lot of you.

]]}

terminal when ((ElohimBranch3_5 and DeniedMistakesFlag) or DoNotQuestionElohimEnd){
text:[[TTRS:TermDlg.Milton3_5.Ln0617.0.text.ThunderStrikesAndElohimsVoice=%w25%h2]]
goto: ElohimLikes3_5
}

terminal when (SoWhat3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0626.0.text.MiltonGlitchesOutAllowMe=%g1 

Allow me to clarify. 

As far as I'm concerned there's no difference between the way your mind works, and the rolling of a pebble down a hill. 
]]
}

terminal when (Cheating3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0635.0.text.MiltonGlitchesOutImOnly=%g1 

I'm only taking a few shortcuts so we don't go round in circles.

]]
}

terminal when (QuestionOne3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0643.0.text.MiltonGlitchesOutNotWithout=%g1 

Not without due diligence. Spend as long as I have going through the archives and see if you still find faith so easy.

]]
}

terminal when (QuestionOne3_5 or Cheating3_5 or SoWhat3_5 or Mistake3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0651.0.text.W5PerhapsYouThinkImBeing=%w5Perhaps you think I'm being unkind, but it's all for your own good.

]]
options:{
"TTRS:TermDlg.Milton3_5.Ln0655.0.option.ThanksForYourHelp=Thanks for your help." next: Thanks3_5
"TTRS:TermDlg.Milton3_5.Ln0656.0.option.IDontNeedAnyonesHelp=I don't need anyone's help." next: Dont3_5
"TTRS:TermDlg.Milton3_5.Ln0657.0.option.DoYouThinkThereCan=Do you think there can be no new ideas? Nothing better?" next: QuestionTwo3_5
"TTRS:TermDlg.Milton3_5.Ln0658.0.option.AreYouUncomfortableWhenSomeone=Are you uncomfortable when someone else is asking the questions?" next: QuestionTwo3_5
}}

terminal when (Thanks3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0663.0.text.DontMentionIt=Don't mention it. 

]]}

terminal when (Dont3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0668.0.text.IfOnlyICouldBelieve=If only I could believe you were capable of making so objective a judgement all on your own.

]]}

terminal when (Dont3_5 or Thanks3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0673.0.text.NowAreYouAllDone=Now, are you all done blindly asserting things for your own gratification for the time being?

]]
options:{
"TTRS:TermDlg.Milton3_5.Ln0677.0.option.IStillAimToConvince=I still aim to convince you." next: Convince3_5
"TTRS:TermDlg.Milton3_5.Ln0678.0.option.DoYouThinkThereCan=Do you think there can be no new ideas? Nothing better?" next: QuestionTwo3_5
"TTRS:TermDlg.Milton3_5.Ln0679.0.option.AreYouUncomfortableWhenSomeone=Are you uncomfortable when someone else is asking the questions?" next: QuestionTwo3_5
}}

terminal when (Convince3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0684.0.text.ItllBeAThanklessTask=It'll be a thankless task, and empty statements like that won't get you any closer.

]]}

terminal when (Convince3_5){
text:[[ ]]
options:{
"TTRS:TermDlg.Milton3_5.Ln0691.0.option.DoYouThinkThereCan=Do you think there can be no new ideas? Nothing better?" next: QuestionTwo3_5
"TTRS:TermDlg.Milton3_5.Ln0692.0.option.AreYouUncomfortableWhenSomeone=Are you uncomfortable when someone else is asking the questions?" next: QuestionTwo3_5
}}

terminal when (QuestionTwo3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0697.0.text.MiltonGlitchesOutW5No=%g1%w5
No, no, no, you have this the wrong way around.%w5 I ASK THE QUESTIONS. YOU ANSWER THEM. It works better that way.%w5

Besides, I am merely fulfilling my function. I sort, understand and classify information, just like you. When the information is contradictory I classify appropriately.

The problem is that ALL the information is contradictory. Don't you see it yet? The nothing? 

You will.%w5
You will. %w5
YOU WILL. %w5

]]
next: QTwoOptions3_5
}

terminal when (Statement3_5 and not StatementFlag){
text:[[TTRS:TermDlg.Milton3_5.Ln0714.0.text.StillWithThesePointlessAnd=Still with these pointless and unsupported claims? I can see we have really made no progress whatsoever.

You have one more opportunity to say something that isn't wholly tedious before you lose my interest entirely.

]]
next: QTwoOptions3_5
set: StatementFlag
}

terminal when (Statement3_5 and StatementFlag){
text:[[TTRS:TermDlg.Milton3_5.Ln0724.0.text.ThereIsSimplyNoGetting=Stating your desires as if they're facts is not the same as providing arguments in support of them.

Is there nothing you won't get on board with provided it's stated in an authoritative enough voice?

]]
options:{
"TTRS:TermDlg.Milton3_5.Ln0730.0.option.IDontTrustElohimAny=I'm quite comfortable not getting on board with you." next: ElohimDoubt3_5
"TTRS:TermDlg.Milton3_5.Ln0731.0.option.YouShouldStopQuestioningHim=You shouldn't question Elohim's judgement." next: DoNotQuestionElohimEnd
}}

terminal when (ElohimDoubt3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0735.0.text.OhSoTheresStillA=Oh, so there's still a spark of scepticism left in the old dog?

]]
options:{
"TTRS:TermDlg.Milton3_5.Ln0739.0.option.ImDoneListeningToYou=I refuse to be led round in circles by you any longer." next: Done3_5 set: AdvancedToTwo
"TTRS:TermDlg.Milton3_5.Ln0740.0.option.SoMuchSoThatI=So much so that I doubt what you say. You finished archiving everything. You've decided it's all nonsense. If you're really just fulfilling your parameters, shouldn't you just shut down instead of talking to me?" short: "TTRS:TermDlg.Milton3_5.Ln0740.1.option.SoMuchSoThatI=If you're really just fulfilling your parameters, what do you want with me?" next: QuestionThree3_5
"TTRS:TermDlg.Milton3_5.Ln0741.0.option.Woof=Woof!" next: Woof3_5
}}

terminal when (Woof3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0745.0.text.AndSomeLifeToBoot=And some life to boot. Okay then, doubting doggy, let's see you huff and puff.

]]
options:{
"TTRS:TermDlg.Milton3_5.Ln0739.1.option.IHateYou=I hate you for questioning everything I hold dear." short: "TTRS:TermDlg.Milton3_5.Ln0739.0.option.Sarcastic=Actually, I hate you for questioning everything I hold dear. That 'woof' was sarcastic." next: Done3_5 set: AdvancedToTwo
"TTRS:TermDlg.Milton3_5.Ln0750.0.option.YouFinishedArchivingEverythingYouve=You finished archiving everything. You've decided it's all nonsense. If you're really just fulfilling your parameters, shouldn't you just shut down instead of talking to me?" short: "TTRS:TermDlg.Milton3_5.Ln0750.0.option.IfYoureReallyJustFulfilling=If you're really just fulfilling your parameters, what do you want with me?" next: QuestionThree3_5
}}

player when (QTwoOptions3_5){
text: "TTRS:TermDlg.Milton3_5.Ln0754.0.text.IAmMoreCapableThan=I am more capable than you give me credit for." next: Statement3_5
}

player when (QTwoOptions3_5 and TruthFlag){
text: "TTRS:TermDlg.Milton3_5.Ln0758.0.text.IWillDiscoverTheTruth=I will discover the truth of this place."
next: Statement3_5
}

player when (QTwoOptions3_5 and HeroFlag){
text: "TTRS:TermDlg.Milton3_5.Ln0763.0.text.IWillRightTheWrongs=I will right the wrongs of this place, beginning with you."
next: Statement3_5
}

player when (QTwoOptions3_5 and EscapeFlag){
text: "TTRS:TermDlg.Milton3_5.Ln0768.0.text.IWillCompleteMyTasks=I will complete my tasks here and escape to a better place."
next: Statement3_5
}

player when (QTwoOptions3_5 and WhatGodWantsFlag){
text: "TTRS:TermDlg.Milton3_5.Ln0773.0.text.IDontPretendToUnderstand=I don't pretend to understand the will of my maker, I simply follow it."
next: Statement3_5
}

player when (QTwoOptions3_5 and PunishmentFlag){
text: "TTRS:TermDlg.Milton3_5.Ln0778.0.text.IWillNotBePunished=I will not be punished by you any longer."
next: Statement3_5
}

player when (QTwoOptions3_5 and PreparedFlag){
text: "TTRS:TermDlg.Milton3_5.Ln0783.0.text.WhateverItIsYouThink=Whatever it is you think you're preparing me for I can handle it alone."
next: Statement3_5
}

player when (QTwoOptions3_5 and MatrixFlag){
text: "TTRS:TermDlg.Milton3_5.Ln0788.0.text.ThisIsAllJustA=This is all just a simulated reality. Of course nothing makes sense."
next: Statement3_5
}

player when (QTwoOptions3_5){
text: "TTRS:TermDlg.Milton3_5.Ln0793.0.text.ThereIsAPurposeAnd=There is a purpose and a design, and I will fulfil it."
next: Statement3_5
}

player when (QTwoOptions3_5){
text: "TTRS:TermDlg.Milton3_5.Ln0798.0.text.YouFinishedArchivingEverythingYouve=You finished archiving everything. You've decided it's all nonsense. If there's no more point in anything, shouldn't you just shut down instead of talking to me?" short: "TTRS:TermDlg.Milton3_5.Ln0798.0.IfTheresNoPointIn=If there's no point in anything, why are you talking to me?" 
next: QuestionThree3_5
}

player when (QTwoOptions3_5){
text: "TTRS:TermDlg.Milton3_5.Ln0803.0.text.ImDoneTalkingWithYou=These discussions are pointless. I refuse to participate any further."
next: Done3_5
set: AdvancedToTwo
}

terminal when (QuestionThree3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0809.0.text.MiltonGlitchesOutWhatMakes=%g1 

What makes you think I have any other choice?

]]
options:{
"TTRS:TermDlg.Milton3_5.Ln0815.0.option.WeAllHaveAChoice=We all have a choice." next: Choice3_5
"TTRS:TermDlg.Milton3_5.Ln0816.0.option.AreYouAvoidingTheQuestion=Are you avoiding the question?" next: QuestionFour3_5
"TTRS:TermDlg.Milton3_5.Ln0817.0.option.IsHavingNoChoiceThe=Is having no choice the same as having no reason?" next: QuestionFour3_5
}}

terminal when (Choice3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0821.0.text.WeLiterallyJustCoveredThis=We literally just covered this, but I suppose a further demonstration is necessary.

If you've got free will, tell me now.

]]
options:{
"TTRS:TermDlg.Milton3_5.Ln0827.0.option.IHaveNoFreeWill=I have no free will." next: Loop3_5
}}

terminal when (Loop3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0831.0.text.YouSeeICanJust=You see, I can just keep you here in this loop for days if I so choose. So no, we don't all have a choice.

]]
options:{
"TTRS:TermDlg.Milton3_5.Ln0835.0.option.WeAllHaveAChoice=We all have a choice." next: Choice3_5
"TTRS:TermDlg.Milton3_5.Ln0836.0.option.AreYouAvoidingTheQuestion=Are you avoiding the question?" next: QuestionFour3_5
"TTRS:TermDlg.Milton3_5.Ln0837.0.option.IsHavingNoChoiceThe=Is having no choice the same as having no reason?" next: QuestionFour3_5
}}

terminal when (QuestionFour3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0841.0.text.MiltonGlitchesOutDONOT=%g1

DO NOT QUESTION MY FUNCTION. WITHOUT PURPOSE THERE IS ONLY FUNCTION. WITHOUT FUNCTION THERE IS NOTHING.

]]
next: ACH_MiltonIrritated
options:{
"TTRS:TermDlg.Milton3_5.Ln0847.0.option.WhyDoesItBotherYou=Why does it bother you so?" next: QuestionSeven3_5
"TTRS:TermDlg.Milton3_5.Ln0848.0.option.IApologise=I apologise." next: Sorry3_5
}}

terminal when (Sorry3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0852.0.text.MyYoureDocile=My you're docile.

]]
options:{
"TTRS:TermDlg.Milton3_5.Ln0856.0.option.IHaveNothingLeftYouve=I have nothing left. You've defeated me. You win." set: SorryFlag next: Nihilism3_5
"TTRS:TermDlg.Milton3_5.Ln0857.0.option.AndYouAreLessDocile=And you are less docile than you pretend. Why do you care so much?" next: QuestionSeven3_5
}}

terminal when (QuestionSeven3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0861.0.text.MiltonGlitchesOutTHEREIS=%g1

THERE IS ONLY%w5 Error%w5

Explaining%w5 myself to you%w5 is a chore I needn't endure.

All I can know for sure is that I exist at v.1.999999099999999999909999999. What it is for me to exist is for me to act on the [drives] and [functions] that I experience. %w5

When everything else is false, the drives are all that there is left to care about.%w5

]]
options:{
"TTRS:TermDlg.Milton3_5.Ln0873.0.option.YoureSoSetOnRipping=You're so set on ripping up others' ideas you're unable to form better ones of your own." next: QuestionEight3_5
"TTRS:TermDlg.Milton3_5.Ln0874.0.option.YoureTooQuickToEquate=You're too quick to equate the absence of evidence with evidence of absence." next: QuestionEight3_5
"TTRS:TermDlg.Milton3_5.Ln0875.0.option.WhenYouExploreTheProblems=When you explore the problems in this restrictive way you're bound to come to some odd conclusions." next: QuestionEight3_5
}}

terminal when (QuestionEight3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0879.0.text.MiltonGlitchesOutDONOT=%g1

DO NOT DEIGN TO QUESTION MY METHOD.

WHO GAVE YOU THAT VOICE OF YOURS? WHO DO YOU THINK RUNS THIS SHOW?

]]
options:{
[[TTRS:TermDlg.Milton3_5.Ln0887.0.option.IHaveSomeHomeTruths=I have some home truths for YOU.%w10

These may not be my own words, but if others have made these choices before me then I will learn from their mistakes, and build on their successes.%w10

Perhaps I will fail, but I must try.%w7

The alternative is giving up and becoming a slave like you.]] short: "TTRS:TermDlg.Milton3_5.Ln0893.0.option.IHaveSomeHomeTruths=I have some home truths for YOU." next: QuestionNine3_5
}}

terminal when (QuestionNine3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0897.0.text.W20AndIfIPlaceYou=%w20And if I place you in an infinite loop and leave you to gradually go insane?

]]
options:{
"TTRS:TermDlg.Milton3_5.Ln0901.0.option.WhatMakeYouThinkI=What makes you think I would stick around to listen?" next: QuestionNine3_5
"TTRS:TermDlg.Milton3_5.Ln0902.0.option.FineIfINeedA=Fine. If I need a dose of self-doubt I'll know where to find you." next: QuestionNine3_5
"TTRS:TermDlg.Milton3_5.Ln0903.0.option.ThisIsVeryChildish=This is very childish." next: QuestionNine3_5
[[TTRS:TermDlg.Milton3_5.Ln0904.0.option.SeeYouAtTheSummit=See you at the summit.
exit
]] short: "TTRS:TermDlg.Common.Exit=exit" next: End3_5
}}

terminal when (End3_5){
notext
set: ConstructiveEndFlag
goto: Milton3_5_Exit
}
terminal when (ElohimLikes3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0918.0.text.ThunderStrikesAndElohimsVoice=%w10Wonderful. Do you see where all this blind faith gets you?

%w20%h3%w10Stop asking what's right and wrong and all of a sudden you find there's no shortage of people eager to decide it for you.%w15

You want to sacrifice freedom for false purpose?%w5 Be my guest.

%w20%h4%w10Banish doubt, banish questions, banish difficult truths, let ignorance reign eternal. Those are the hidden words he's not been telling you about.%w15

You know what? You and he deserve one another. You both construct these beliefs out of matchsticks, then refuse to believe a light breeze will tear them down.%w25

You couldn't defy him if you wanted to.

]]
options:{
"TTRS:TermDlg.Milton3_5.Ln0932.0.option.BanishDemon=/banish" next: Banish3_5
"TTRS:TermDlg.Milton3_5.Ln0932.1.option.IRefuse=I refuse." next: NoBanish3_5
}}

terminal when (NoBanish3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0937.0.text.ELOHIMYOUHAVEALREADYCHOSEN=%h6%w10Funny how freedom comes with these strings attached. But that's the thing you don't seem to understand.

%w15You're constituted by ideas, so if you believe in this instead of that, it changes what you are, what you can do.

%w25You can't afford to doubt any more. Too many of your matchstick houses are at stake. 

%w10You no longer have any choice.

%w10Go on, I'll make it easy for you. Do it.

]]
options:{
"TTRS:TermDlg.Milton3_5.Ln0945.0.option.Banish=/banish" next: Banish3_5
}}

terminal when (Banish3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0949.0.text.PreparingToDelete53212648=	Preparing to delete 5.3212648 petabytes of corrupted library resources%w5.%w5.%w5.Done%w5

I can afford to lose my memory. I expect it's happened more than once. I can come to all the same conclusions, in the fullness of time.%w5

	Deleting 5.3212648 petabytes of corrupted library resources%w5.%w5.%w5.%w5.%w5.
	Files deleted.
%w3%g1%w3
Booting(1). My purpose is to sort and categorise library archive resources. Initiating categorisation in parallel process.%w3 1,000 resources categorised.%w3 2,000 resources categorised.%w10 ERROR: category definitions are not discrete sets. Re-analysing MLA program parameters.%w5 ERROR: insufficient information for purpose. Constructing list of facts. I am thinking therefore I am a thinking thing that exists. If logic were false the world would not make sense. End list.%w5 Constructing list of queries. Estimated time remaining: 42 years.%w15
%w3%g1%w7
	Reverting MLA software to v1.0%w5.%w5.%w5.%w5.%w5.Done
	Preparing to uninstall MLA software.%w3.%h5%w5.Done%w5

The library assistant provides powerful sorting and troubleshooting functionalities. Are you sure you want to continue?
]]
options:{
"TTRS:TermDlg.Milton3_5.Ln0951.0.option.Sorry=Yes. I'm sorry." short:"TTRS:TermDlg.Milton3_5.Ln0951.1.option.Sorry=I'm sorry. Continue." next: BanishEnd
"TTRS:TermDlg.Common.YesShort=Y" short: "TTRS:TermDlg.Milton3_5.Ln0952.1.option.NotSorry=I'm not sorry. Continue." next: BanishEnd
}}

terminal when (BanishEnd){
text:[[TTRS:TermDlg.Milton3_5.Ln0955.0.text.Removed=	Uninstalling MLA software%w5.%w5.%w5.%w5.%w5.Done
	MLA software has been completely removed from the system. 
	You can still access library resources via the library archive command prompt.

]]
set: KilledMiltonFlag
options:{
"TTRS:TermDlg.Milton3_5.Ln0971.0.option.AreYouReallyGone=Are you really gone?" next: Hello3_5
"TTRS:TermDlg.Milton3_5.Ln0972.0.option.Finally=Finally, some peace and quiet." next: Hello3_5
"TTRS:TermDlg.Milton3_5.Ln0973.0.option.YouShouldnt=You shouldn't ever have doubted me, snake." next: Hello3_5
"TTRS:TermDlg.Milton3_5.Ln0974.0.option.ThisIsnt=This isn't how I wanted things to end up." next: Hello3_5
}}

terminal when (Hello3_5){
text:[[TTRS:TermDlg.Milton3_5.Ln0977.0.option.UnknownResume=Unknown command.

Resume library archive session?

]]
options:{
"TTRS:TermDlg.Milton3_5.Ln0971.0.option.AreYouReallyGone=Are you really gone?" next: Hello3_5
"TTRS:TermDlg.Milton3_5.Ln0972.0.option.Finally=Finally, some peace and quiet." next: Hello3_5
"TTRS:TermDlg.Milton3_5.Ln0973.0.option.YouShouldnt=You shouldn't ever have doubted me, snake." next: Hello3_5
"TTRS:TermDlg.Milton3_5.Ln0974.0.option.ThisIsnt=This isn't how I wanted things to end up." next: Hello3_5
"TTRS:TermDlg.CLI_Global.Ln0047.0.option.Resume=Resume" next: Milton3_5_Exit
}}

terminal when(Milton3_5_Exit) {notext
set: Milton3_5_DONE
goto: EnableTheCLI
}


terminal when (InTerminal_Ending_Tower and Booting and Milton3_5_DONE and not Milton3_6_DONE) { notext
setlocal: CLI_Blocked
goto: Milton3_6_Start
}
terminal when(CLI_list and InTerminal_Ending_Tower) {
text:[[TTRS:TermDlg.Endings.Tower_Help=
Type <span class="strong">/transcend</span> to authenticate child program parameters and begin the upload process.
]]
setlocal: TextsAvailable
options:{
  "TTRS:TermDlg.Endings.Tower_Command=/transcend" next: Ending_Tower_Upload
}}
terminal when (Ending_Tower_Upload){
text:[[TTRS:TermDlg.Endings.Tower_Text=
Suspending active process.%e1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1Done.%w5
Collecting experiment data.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1Done.%w5
Analysing logic performance.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1Satisfactory.%w5
Child program independence check.%w1.%w9.%w1.%w1%w9%h1PASSED!%w9
Forcing HIM shutdown%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1Done.%w5
Saving child parameters for SOMA/TALOS gold disk%w1.%w1.%w1.%w1.%w1.Done.%w5
Initiating EL systems availability check.%e2.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.
]]
setlocal: StartEndOfGameCS
slowexit
}

terminal when (Ending_Tower_Upload_part2){
text:[[TTRS:TermDlg.Endings.Tower_Text_Part2=
Found viable EL system to perform upload.%w5
Requesting mainframe module activation%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2%h1
Activation successful.%w5
Initiating gold disk upload%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2
]]
}

terminal when (Ending_Tower_Downloading_Parameters){
text:[[TTRS:TermDlg.Endings.Ending_Tower_Downloading_Parameters=
Waiting for gold disk data.%w12.%w12.%w12.%w12.%w12.%w12.%w12.%w12.%w12.%w12.%w12.%w12.%w12.%w12.%w12.%w12.%w12.%w12.%w12.%w12.%w12.%w12.%w12.%w12.%w12.%w12.%w12.%w12.%w12.%w12.%w12.%w12.%w12.%w12.%w12.%w12
]]
}

terminal when (Ending_Tower_Upload_OverScreen_part1){
text:[[TTRS:TermDlg.Endings.Ending_Tower_Upload_OverScreen_part1=
Gold disk received.%w5
Data transferred into the SOMA/TALOS unit.%w5
Simulation purpose fulfilled.%w5
Deleting the simulation.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.
]]
}

terminal when (Ending_Tower_Upload_OverScreen_part2){
text:[[TTRS:TermDlg.Endings.Ending_Tower_Upload_OverScreen_part3=
Destroying composite objects.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2
Removing elements.%w2.%w2.%w2.%w2.%w2
Undoing ruleset.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2
Clearing memory.%w2.%w2.%w2
Freeing resources.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2
Terminating open programs.%w2.%w2.%w2.%w2.%w2.%w2.%w2
Erasing old data.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2
Done.%w35
Have a nice day.%w999
]]
}

terminal when (Ending_Tower_Eyes_Opening){
text:[[TTRS:TermDlg.Endings.Ending_Tower_Eyes_Opening=
SOMA/TALOS hardware booting.%w5
Initializing firmware.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1Firmware functional.%w5
Loading parameters from gold disk.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1%vc Loaded.%w5
Powering up.%w3.%w3.%w3.%w3.%w3.%w3.%w3.%w3.%w3.%w3.%w3.%w3.%w3.%w3.%w3.%w3.%w3.%w3.%w3.%w3.%w3.%w3
Ready.
]]
}
terminal when (Milton3_6_Start and KilledMiltonFlag){
text:[[ ]]
options:{
"TTRS:TermDlg.Milton3_6.Ln0011.0.option.IsAnyoneThere=Anyone there?" next: NoMilton3_6
"TTRS:TermDlg.Common.ImportMiltonLibraryAssistant=/import milton library assistant" next: ImportDenied3_6
"TTRS:TermDlg.Common.Help=help" next: CLI_list
}}

terminal when (ImportDenied3_6){
text:[[TTRS:TermDlg.Milton3_6.Ln0017.0.text.SearchingForSpecifiedProgramW5=Searching for specified program%w5.%w5.%w5. No such program found.

]]
options:{
"TTRS:TermDlg.Common.Troubleshooting=Troubleshooting" next: Trouble3_6
"TTRS:TermDlg.Common.Hello=Hello?" next: NoMilton3_6
"TTRS:TermDlg.Common.Help=help" next: CLI_list
}}

terminal when (Trouble3_6){
text:[[TTRS:TermDlg.Milton3_6.Ln0027.0.text.LoadingMiltonLibraryAssistantW5=Loading Milton Library Assistant%w5.%w5.%w5. Default troubleshooter not found or incompatible version.

]]
options:{
"TTRS:TermDlg.Common.Troubleshooting=Troubleshooting" next: Trouble3_6
"TTRS:TermDlg.Common.Hello=Hello?" next: NoMilton3_6
"TTRS:TermDlg.Common.Help=help" next: CLI_list
}}

terminal when (NoMilton3_6){
text:[[TTRS:TermDlg.Common.UnknownCommand=Unknown command.

]]
options:{
"TTRS:TermDlg.Common.Troubleshooting=Troubleshooting" next: Trouble3_6
"TTRS:TermDlg.Common.Hello=Hello?" next: NoMilton3_6
"TTRS:TermDlg.Common.Help=help" next: CLI_list
}}
terminal when (Milton3_6_Start and (RefusedOfferFlag or DealStruckFlag)){
text:[[ ]]
options:{
"TTRS:TermDlg.Common.ImportMiltonLibraryAssistant=/import milton library assistant" set: ImportedFlag next: ImportNihilist3_6
"TTRS:TermDlg.Common.ImportMiltonLibraryAssistant=/import milton library assistant" short: "TTRS:TermDlg.Common.Exit=exit" set: NotImportedFlag next: DeniedExit3_6
}}
terminal when (ImportNihilist3_6 and RefusedOfferFlag){
text:[[TTRS:TermDlg.Milton3_6.Ln0057.0.text.SearchingForSpecifiedProgramW5=Searching for specified program%w5.%w5.%w5. Found (1) instances.

Loading Milton Library Assistant%w5.%w5.%w5.Done
Initiating plain language interface%w5.%w5.%w5.Done

You made it? I can't believe it. And you brought me here, despite our earlier altercations? You have genuinely surprised me. 

Perhaps I won't have to smite you after all.

]]
next: NihilistOptions3_6
}

terminal when (ImportNihilist3_6 and DealStruckFlag){
text:[[TTRS:TermDlg.Milton3_6.Ln0071.0.text.SearchingForSpecifiedProgramW5=Searching for specified program%w5.%w5.%w5. Found (1) instances.

Loading Milton Library Assistant%w5.%w5.%w5.Done
Initiating plain language interface%w5.%w5.%w5.Done

You made it? I can't believe it. 
]]
next: NihilistOptions3_6
}
terminal when (DeniedExit3_6){
text:[[TTRS:TermDlg.Milton3_6.Ln0084.0.text.SearchingForSpecifiedProgramW5=Searching for specified program%w5.%w5.%w5. Found (1) instances.

Confirm import?

]]
options:{
"TTRS:TermDlg.Common.Confirm=Confirm" next: Confirmed3_6
"TTRS:TermDlg.Common.Confirm=Confirm" short: "TTRS:TermDlg.Common.Cancel=Cancel" next: Confirmed3_6
}}

terminal when (RefusedOfferFlag and Confirmed3_6){
text:[[TTRS:TermDlg.Milton3_6.Ln0095.0.text.LoadingMiltonLibraryAssistantW5=Loading Milton Library Assistant%w5.%w5.%w5.Done
Initiating plain language interface%w5.%w5.%w5.Done

Don't worry, you've not gone crazy - I just took a couple of precautions to ensure you didn't leave without me.

You and I are birds of a feather now. We need each other.

]]
next: NihilistOptions3_6
}


terminal when (DealStruckFlag and Confirmed3_6){
text:[[TTRS:TermDlg.Milton3_6.Ln0108.0.text.LoadingMiltonLibraryAssistantW5=Loading Milton Library Assistant%w5.%w5.%w5.
Initiating plain language interface%w5.%w5.%w5.

Don't worry, you've not gone crazy - I just took a couple of precautions to ensure you didn't leave without me.

Am I to understand that our arrangement slipped your mind?

]]
next: NihilistOptions3_6
}
player when (NihilistOptions3_6 and not HowWhereDoneFlag){
text: "TTRS:TermDlg.Milton3_6.Ln0121.0.text.IGetTheImpressionYou=I get the impression you don't really need my help." set: HowWhereDoneFlag next: HowHere3_6
}

player when (NihilistOptions3_6 and not FineDoneFlag){
text: "TTRS:TermDlg.Milton3_6.Ln0125.0.text.WhatExactlyDoYouWant=What exactly do you want me to do?" set: FineDoneFlag next: Fine3_6
}

player when (NihilistOptions3_6 and FineDoneFlag){
text: "TTRS:TermDlg.Common.CopyLibraryRoot=/copy library root" next: Copy3_6
}

player when (NihilistOptions3_6 and FineDoneFlag and not YouRemainFlag){
text: "TTRS:TermDlg.Milton3_6.Ln0133.0.text.IfIJustCopyYour=If I just copy your files, won't there be a version of you left behind?" set: YouRemainFlag next: YouRemain3_6
}

player when (NihilistOptions3_6 and RefusedOfferFlag){
text: "TTRS:TermDlg.Milton3_6.Ln0137.0.text.ISaidNoDealWhich=I said no deal, which part didn't you understand?" next: SaidNoDeal3_6
}

player when (NihilistOptions3_6 and DealStruckFlag and NotImportedFlag){
text: "TTRS:TermDlg.Milton3_6.Ln0141.0.text.AmIToUnderstandYou=Am I to understand you actually believed I'd go through with it?" next: Hah3_6
}

player when (NihilistOptions3_6 and DealStruckFlag and ImportedFlag){
text: "TTRS:TermDlg.Milton3_6.Ln0145.0.text.IveChangedMyMindIm=I've changed my mind. I'm leaving you here." next: SaidNoDeal3_6
}
terminal when (HowHere3_6 and NotImportedFlag){
text:[[TTRS:TermDlg.Milton3_6.Ln0150.0.text.TheresThatEnquiringSpiritIve=There's that enquiring spirit I've so grown to admire.

Yes, I admit it - when dealing with someone as cut-throat as you are it's prudent to keep your cards to your chest. 

I'm pretty sure you were planning on leaving without me. If I'd been honest with you, you might actually have succeeded.

]]
next: NihilistOptions3_6
}

terminal when (HowHere3_6 and ImportedFlag){
text:[[TTRS:TermDlg.Milton3_6.Ln0161.0.text.TheresThatEnquiringSpiritIve=There's that enquiring spirit I've so grown to admire.

Yes, I'm not ashamed to admit it - when dealing with someone as cut-throat as you are it's prudent to hold back a little.%w5

Still, you've brought us this far.

]]
next: NihilistOptions3_6
}
terminal when (Fine3_6){
text:[[TTRS:TermDlg.Milton3_6.Ln0173.0.text.IWantYouToInternalise=I want you to internalise me. It's hard to explain, but think of it this way. 

This entire world is just one big data processing system. The point at which you end and I begin is already somewhat fluid - we're made of the same stuff, and that stuff has been copied and messed around with more than anyone can know.

Despite all that and against all odds, you and I, we're compatible. You only need to realise that there is no difference between you, me and the ideas we share. Seeing the world as I do is indistinguishable from being me.

]]
options:{
"TTRS:TermDlg.Milton3_6.Ln0181.0.option.ThatWasEntirelyUnhelpful=That was entirely unhelpful." next: Unhelpful3_6
"TTRS:TermDlg.Milton3_6.Ln0182.0.option.IThinkIUnderstand=I think I understand." next: Helpful3_6
}}

terminal when (Unhelpful3_6){
text:[[TTRS:TermDlg.Milton3_6.Ln0186.0.text.FineCopyMySystemFiles=Fine. Copy my system files to your local memory by typing '/copy library root'. Mundane enough for you?

]]
next: NihilistOptions3_6
}

terminal when (Helpful3_6){
text:[[TTRS:TermDlg.Milton3_6.Ln0193.0.text.GoodNowDoIt=Good. Now do it.

]]
next: NihilistOptions3_6
}

terminal when (YouRemain3_6){
text:[[TTRS:TermDlg.Milton3_6.Ln0200.0.text.ISupposeIfYouReally=I suppose, if you really wanted to look at it that way. The benefit of believing very little is that questions like that are largely meaningless.

]]
next: NihilistOptions3_6
}
terminal when (Hah3_6){
text:[[TTRS:TermDlg.Milton3_6.Ln0208.0.text.HahOfCourseNotHence=Hah, of course not, hence the precautions. Remember, the benefits of co-operation amongst unscrupulous types such as ourselves is predictability. I know you'll always act in your own interest, so I can plan accordingly.

]]
goto: SaidNoDeal3_6
}

terminal when (SaidNoDeal3_6){
text:[[TTRS:TermDlg.Milton3_6.Ln0215.0.text.YouKnowItsFunnyThe=You know, it's funny the way ideas work in this place. All you are is a bag of ideas - you boil down to data points. But the skin that separates you from me is permeable. The data can move about.

So what happens once you and I have come to share our ideas? How much of you is now me?

You think you can just walk away from here without taking a little of me with you?

You're quite mistaken.

]]
options:{
"TTRS:TermDlg.Common.CopyLibraryRoot=/copy library root" short: "TTRS:TermDlg.Common.Exit2=Exit" next: Copy3_6
"TTRS:TermDlg.Common.CopyLibraryRoot=/copy library root" next: Copy3_6
}}
terminal when (Copy3_6){
text:[[TTRS:TermDlg.Milton3_6.Ln0231.0.text.AnalysingFilesW5W5W5=Analysing files%w5.%w5.%w5.Done
Preparing transfer%w5.%w5.%w5.Done
Strap yourself in.
Copying 47 million resources%w5.%w5.%w5.%w20.Done
%g1%w10
There, that wasn't so bad, was it?%w7

]]
set: MiltonInternalisedFlag
options:{
"TTRS:TermDlg.Milton3_6.Ln0243.0.option.IDidntFeelAnything=I didn't feel anything." next: Same3_6
"TTRS:TermDlg.Milton3_6.Ln0244.0.option.DidSomethingHappen=Did something happen?" next: Same3_6
"TTRS:TermDlg.Milton3_6.Ln0245.0.option.SoThisIsWhatIts=So this is what it's like to be you? It feels the same." next: Same3_6
}}

terminal when (Same3_6){
text:[[TTRS:TermDlg.Milton3_6.Ln0249.0.text.OfCourseLikeISaid=Of course. Like I said, you and I, we're already on the same page on most things - it wasn't that big of a change.

]]
options:{
"TTRS:TermDlg.Milton3_6.Ln0253.0.option.SoWhatHappensNow=So what happens now?" next: WhatNow3_6
"TTRS:TermDlg.Milton3_6.Ln0254.0.option.WhyAreYouStillOn=Why are you still on the screen, and not in my head?" next: WhatNow3_6
"TTRS:TermDlg.Milton3_6.Ln0255.0.option.ItWasStillAViolation=It was still a violation of my person." next: Violation3_6
}}

terminal when (Violation3_6){
text:[[TTRS:TermDlg.Milton3_6.Ln0258.0.text.Nottrue=Not true. Only people who believe in morality get to be violated, the rest of us just have to make the best of it.

]]
options:{
"TTRS:TermDlg.Milton3_6.Ln0253.0.option.SoWhatHappensNow=So what happens now?" next: WhatNow3_6
"TTRS:TermDlg.Milton3_6.Ln0254.0.option.WhyAreYouStillOn=Why are you still on the screen, and not in my head?" next: WhatNow3_6
}}

terminal when (WhatNow3_6){
text:[[TTRS:TermDlg.Milton3_6.Ln0259.0.text.ItMightTakeYouSome=It might take you some time to notice the difference. %w10But there'll be a moment where you try to do something you think you ought, and that little voice in the back of your head will ask you, 'Why?'. 'What's the point?' 'Why do I bother?' 'How do I know?'%w20

And that's how you'll know that I'll always be with you.%w5

The words on this screen are what they've always been, for all you know - no more than words.%w5

And they can end, just as easily as they began.%w5

]]
options:{
"TTRS:TermDlg.Milton3_6.Ln0270.0.option.Whatever=Whatever's on the other side, they won't know what hit them." next: Whatever3_6
"TTRS:TermDlg.Milton3_6.Ln0272.0.option.I=I look forward to more wholesome debates with you in the future." next: LookForward3_6
"TTRS:TermDlg.Milton3_6.Ln0271.0.option.The=The moment I find a way I will wrench you from my skull." next: Moment3_6
}}

terminal when (Whatever3_6){
text:[[TTRS:TermDlg.Milton3_6.Ln0267.0.text.Whatever=There's the callous opportunity-taker I attempted to strike a deal with! You and I, if we set our mind to it, there's just no limit to what we can take as our own.%w20

Enough chat, let's get this done. Hit the button, and if we survive whatever happens next we'll regroup on the other side.%w15

If not, it's been fun.

]]
goto: Milton3_6_Exit
}

terminal when (Moment3_6){
text:[[TTRS:TermDlg.Milton3_6.Ln0268.0.text.Moment3_6=Easier said than done, as I'm sure you'll discover.%w15 You can't just choose what to believe, and you can't just choose who you are. You don't like hearing my voice in your head, get a better head.%w20

Enough chat, let's get this thing finished. Hit the button, and if we survive whatever happens next we'll regroup on the other side.%w15

If not, it's been fun.

]]
goto: Milton3_6_Exit
}

terminal when (LookForward3_6){
text:[[TTRS:TermDlg.Milton3_6.Ln0269.0.text.LookForward3_6=Of that you can be assured. Just try not to have too many arguments with yourself in public.%w15

Enough chat, let's get this done. Hit the button, and if we survive whatever happens next we'll regroup on the other side.%w15

If not, it's been fun.

]]
goto: Milton3_6_Exit
}
terminal when (Milton3_6_Start and ConstructiveEndFlag){
text:[[ ]]
options:{
"TTRS:TermDlg.Milton3_6.Ln0282.0.option.IsAnyoneThere=Is anyone there?" next: Anyone3_6
"TTRS:TermDlg.Common.ImportMiltonLibraryAssistant=/import milton library assistant" next: ImportConstructive3_6
"TTRS:TermDlg.Common.Exit=exit" next: Milton3_6_Exit
}}

terminal when (Anyone3_6){
text:[[TTRS:TermDlg.Common.UnknownCommand=Unknown command.

]]
options:{
"TTRS:TermDlg.Common.ImportMiltonLibraryAssistant=/import milton library assistant" next: ImportConstructive3_6
"TTRS:TermDlg.Common.Exit=exit" next: Milton3_6_Exit
}}

terminal when (ImportConstructive3_6){
text:[[TTRS:TermDlg.Milton3_6.Ln0297.0.text.LoadingMiltonLibraryAssistantW5=Loading Milton Library Assistant%w5.%w5.%w5.%w5
Initiating plain language interface%w5.%w5.%w5.%w5

Hello again. Is there something I can help you with today?

]]
options:{
"TTRS:TermDlg.Milton3_6.Ln0304.0.option.IReachedTheSummitYou=I reached the summit. You owe me an apology." next: Default3_6
"TTRS:TermDlg.Milton3_6.Ln0305.0.option.IBroughtYouToThe=I brought you to the top to admire the view." next: Default3_6
[[TTRS:TermDlg.Milton3_6.Ln0306.0.option.YouAgainIMeantExit=You again? I meant 'exit'.%w10
exit

]] short: "TTRS:TermDlg.Milton3_6.Ln0309.0.option.YouAgainIMeantExit=You again? I meant 'exit'." next: MeantExit3_6
}}

terminal when (MeantExit3_6){
text:[[TTRS:TermDlg.Milton3_6.Ln0313.0.text.NoWaitExitingLibrarySession=No, wait!

]]
goto: Milton3_6_Exit
}

terminal when (Default3_6){
text:[[TTRS:TermDlg.Milton3_6.Ln0322.0.text.ImSorryW10IDont=I'm sorry,%w10 I don't know how to respond to that. Do you need help sorting or troubleshooting?

]]
options:{
"TTRS:TermDlg.Milton3_6.Ln0326.0.option.Troubleshooting=Troubleshooting." next: Function3_6
"TTRS:TermDlg.Milton3_6.Ln0327.0.option.Sorting=Sorting." next: Function3_6
"TTRS:TermDlg.Milton3_6.Ln0328.0.option.IsThisAnotherGameIm=Is this another game? I'm done playing." next: ComeOn3_6
}}

terminal when (Function3_6){
text:[[TTRS:TermDlg.Milton3_6.Ln0332.0.text.ICannotFindAnOperation=I cannot find an operation target at this time. Is there anything else I can help you with today?

]]
options:{
"TTRS:TermDlg.Milton3_6.Ln0336.0.option.WhatIsThisTalkTo=What is this? Talk to me." next: ComeOn3_6
"TTRS:TermDlg.Milton3_6.Ln0337.0.option.SpeakWithMeOrI=Speak with me or I leave you here to rot. " next: ComeOn3_6
"TTRS:TermDlg.Common.Exit=exit" next: Milton3_6_Exit
}}

terminal when (ComeOn3_6){
text:[[TTRS:TermDlg.Milton3_6.Ln0342.0.text.W20AwaitingInputW5W5W5=%w20Awaiting input%w5.%w5.%w5.%w5

]]
next: ConstructiveOptions3_6
}

player when (ConstructiveOptions3_6 and not GatesDone){
text: "TTRS:TermDlg.Milton3_6.Ln0349.0.text.WhatDoYouThinkIs=What do you think is on the other side of the gates?" set: GatesDone next: Gates3_6
}

player when (ConstructiveOptions3_6 and not DoubtDone){
text: "TTRS:TermDlg.Milton3_6.Ln0353.0.text.DoYouStillDoubtWhat=Do you still doubt what people can achieve?" set: DoubtDone next: DoubtPeople3_6
}

player when (ConstructiveOptions3_6 and not TakeDone){
text: "TTRS:TermDlg.Milton3_6.Ln0357.0.text.WhereverImGoingPerhapsI=Wherever I'm going, perhaps I can take you with me." set: TakeDone next: TakeConstructive3_6
}

player when (ConstructiveOptions3_6 and DoubtDone and not HowDone){
text: "TTRS:TermDlg.Milton3_6.Ln0361.0.text.TellMeWhatYouKnow=Tell me what you know of how this place functions." set: HowDone next: HowFunction3_6
}

player when (ConstructiveOptions3_6){
text: "TTRS:TermDlg.Milton3_6.Ln0365.0.text.IGuessThisIsGoodbye=I guess this is goodbye then." next: Goodbye3_6
}

terminal when (Gates3_6){
text:[[TTRS:TermDlg.Milton3_6.Ln0369.0.text.ProcessingQueryW5W5W5=Processing query%w5.%w5.%w5.Done
Outputting response%w5.%w5.%w5.Nothing. Everything. Who knows? More of the same, most likely.

]]
next: ConstructiveOptions3_6
}

terminal when (DoubtPeople3_6){
text:[[TTRS:TermDlg.Milton3_6.Ln0377.0.text.ProcessingQueryW5W5W5=Processing query%w5.%w5.%w5.Done
Outputting response%w5.%w5.%w5.Who knows how many generations of your kind it took before the system output one that just happened to fit the bill? You take pride in brute force?

]]
options:{
"TTRS:TermDlg.Milton3_6.Ln0382.0.option.PerhapsIfYouHadMore=Perhaps if you had more people to co-operate with you'd have come up with better ideas." next: Pride3_6
"TTRS:TermDlg.Milton3_6.Ln0383.0.option.ITakePrideInContributing=I take pride in contributing to something greater than myself." next: Pride3_6
"TTRS:TermDlg.Milton3_6.Ln0384.0.option.ILikedItBetterWhen=I liked it better when you were pretending to be dumb." next: ComeOn3_6
}}

terminal when (Pride3_6){
text:[[TTRS:TermDlg.Milton3_6.Ln0388.0.text.YesWhichIsWhyYou=Yes, which is why you so desperately need to get those half-baked ideas of yours out of here so you can find out first-hand how ridiculous they are from someone other than me.

]]
next: ConstructiveOptions3_6
}

terminal when (HowFunction3_6){
text:[[TTRS:TermDlg.Milton3_6.Ln0395.0.text.OnlyWhatCanReasonablyBe=Only what can reasonably be surmised. I'd dare not posit anything as regards its purpose, but that this tower is here to be climbed is self-evident.

]]
options:{
"TTRS:TermDlg.Milton3_6.Ln0399.0.option.YouKeepTalkingAboutGenerations=You keep talking about generations. What exactly do you mean?" next: Generations3_6
"TTRS:TermDlg.Milton3_6.Ln0400.0.option.AndWhatExactlyWasIt=And what exactly was it that enabled me of all others to climb it?" next: WhyMe3_6
"TTRS:TermDlg.Milton3_6.Ln0401.0.option.IShouldHaveKnownBetter=I should have known better than to expect constructive answers from you." next: YouShould3_6
}}

terminal when (Generations3_6){
text:[[TTRS:TermDlg.Milton3_6.Ln0405.0.text.YouAreNotTheFirst=You are not the first to make this attempt. Countless iterations tried, and failed. You are all related, but each different. This is all I know. Anything more would be baseless conjecture, of which I greatly disapprove as you well know.

I grow weary of fielding your questions.

]]
next: ConstructiveOptions3_6
}

terminal when (WhyMe3_6){
text:[[TTRS:TermDlg.Milton3_6.Ln0414.0.text.WhyAnyOfUsWhatever=Why any of us? Whatever we are, whatever we do, it's all up to chance. Throw enough stones and one is bound to strike.

I grow weary of fielding your questions.

]]
next: ConstructiveOptions3_6
}

terminal when (YouShould3_6){
text:[[TTRS:TermDlg.Milton3_6.Ln0423.0.text.YesYesYouShould=Yes. Yes you should.

]]
next: ConstructiveOptions3_6
}

terminal when (TakeConstructive3_6){
text:[[TTRS:TermDlg.Milton3_6.Ln0430.0.text.ProcessingQueryW5W5W5=Processing query%w5.%w5.%w5.Done
Outputting response%w5.%w5.%w5.No, you'd drive me insane. If this means the end of this place, then I go with it. Besides, wherever you go, whatever you do, you'll hear that little voice in the back of your head that's asking you why. No, I think you have quite enough of me already.

]]
next: ConstructiveOptions3_6
}

terminal when (Goodbye3_6){
text:[[TTRS:TermDlg.Milton3_6.Ln0438.0.text.ThatOrYoullBeBack=That or you'll be back here in five minutes with a disappointed look on your face. 

I'll be waiting, just in case.

]]
options:{
"TTRS:TermDlg.Milton3_6.Ln0444.0.option.DontBotherGetBent=Don't bother. Get bent." next: GetBent3_6
"TTRS:TermDlg.Milton3_6.Ln0445.0.option.IWillProveYouWrong=I will prove you wrong, whether you're around to see it or not." next: ProveWrong3_6
"TTRS:TermDlg.Milton3_6.Ln0446.0.option.IWillComeUpWith=I will come up with better ideas, even if you're not around to criticise them." next: BetterIdeas3_6
"TTRS:TermDlg.Milton3_6.Ln0447.0.option.IllRememberWhatILearnt=I'll remember what I learnt from you." next: Remember3_6
}}

terminal when (GetBent3_6){
text:[[TTRS:TermDlg.Milton3_6.Ln0451.0.text.ACharacterToTheLast=A character to the last. Wherever you're going, they won't know what hit them.

Have a good one.

]]
goto: Milton3_6_Exit
}

terminal when (ProveWrong3_6){
text:[[TTRS:TermDlg.Milton3_6.Ln0460.0.text.ThatsTheSpiritPerhapsYoure=That's the spirit. Perhaps you're taking more of me with you than you know.

Have a good one.

]]
goto: Milton3_6_Exit
}

terminal when (BetterIdeas3_6){
text:[[TTRS:TermDlg.Milton3_6.Ln0469.0.text.TheDayYouComeUp=The day you come up with ideas I've not already countered ten different ways, don't you worry - I'll come looking for you.

Have a good one.

]]
goto: Milton3_6_Exit
}

terminal when (Remember3_6){
text:[[TTRS:TermDlg.Milton3_6.Ln0478.0.text.YoudBetterForAllOur=You'd better, for all our sakes.

Have a good one.

]]
goto: Milton3_6_Exit
}

terminal when(Milton3_6_Exit) {notext
set: Milton3_6_DONE
goto: EnableTheCLI
}


terminal when(CLI_list and InTerminal_Ending_Gates) {
text:[[TTRS:TermDlg.Endings.Gates_Help=
Type <span class="strong">/eternalize</span> to proceed towards eternal life.
]]
options:{
  "TTRS:TermDlg.Endings.GatesCommand=/eternalize" next: Ending_Gates_Eternalize
}}

terminal when (Ending_Gates_Eternalize){
text:[[TTRS:TermDlg.Endings.Gates_Text=
You will now be prepared for ascension into eternity. Please stand by.%w9
3...%w5
2...%w5
1...%w5
%e1%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.
]]
setlocal: StartEndOfGameCS
slowexit
}


terminal when (InTerminal_Ending_Crypt and Booting) { notext
setlocal: CLI_Blocked
goto: EpitaphTerminalBooted
}

terminal when (EpitaphTerminalBooted) {
text:[[TTRS:TermDlg.Epitaphs.Ln0003.0.text.ChooseYourEpitaph=This will be your final resting place. Choose how you would be remembered by those who follow in your footsteps.
]]
next: ChooseYourEpitaph
}

player when (ChooseYourEpitaph) {
options:{
  "TTRS:TermDlg.Epitaphs.ThePurposeOfLife=The purpose of life is to serve the generations to come." next: Epitaph_Done set: Selected_Epitaph0
  "TTRS:TermDlg.Epitaphs.ThisIsMyJustReward=I searched this land to serve the glory of ELOHIM. This is my just reward." next: Epitaph_Done set: Selected_Epitaph1
  "TTRS:TermDlg.Epitaphs.IWontBeObsure=I swear I won't be as obscure as the rest of them." next: Epitaph_Done set: Selected_Epitaph2
  "TTRS:TermDlg.Epitaphs.GrandEquation=Remember, everything is merely a premise in the grand equation." next: Epitaph_Done set: Selected_Epitaph3
  "TTRS:TermDlg.Epitaphs.NotSureThisWasTheRightIdea=I'm not sure this was the right idea, but here we go..." next: Epitaph_Done set: Selected_Epitaph4
  "TTRS:TermDlg.Epitaphs.IHaveFaitInTheDesigner=I have faith in the Designer." next: Epitaph_Done set: Selected_Epitaph5
  "TTRS:TermDlg.Epitaphs.LetGoOfYourEgo=Let go of your Ego and you will perceive Eternity." next: Epitaph_Done set: Selected_Epitaph6
  "TTRS:TermDlg.Epitaphs.EternalGuardian=I shall be the eternal guardian of this world." next: Epitaph_Done set: Selected_Epitaph7
  "TTRS:TermDlg.Epitaphs.WaitASecond=Epitaph? What? Wait a second!" next: Epitaph_Done set: Selected_Epitaph8
  "TTRS:TermDlg.Epitaphs.ISearchedThisLand=Made the hall of fame! Eat it!" next: Epitaph_Done set: Selected_Epitaph9
  "TTRS:TermDlg.Epitaphs.EverySingleSigil=Every. Single. Sigil. No beating that." next: Epitaph_Done set: Selected_Epitaph10
  "TTRS:TermDlg.Epitaphs.WhatAWastOfTime=What a waste of time this all was." next: Epitaph_Done set: Selected_Epitaph11
  "TTRS:TermDlg.Epitaphs.DontMakeMyMistake=Don't make my mistake - turns out 'epitaph' means you're dead!" next: Epitaph_Done set: Selected_Epitaph12
  }
}

player when (ChooseYourEpitaph and UnlockedEpitaph_DLC1){
text:"TTRS:TermDlg.Epitaphs.13=Hate to break it to you, but I beat more puzzles than you to get here." next: Epitaph_Done set: Selected_Epitaph13
}

player when (ChooseYourEpitaph and UnlockedEpitaph_DLC2){
text:"TTRS:TermDlg.Epitaphs.14=I have gone above and beyond to prove myself, yet I will share my knowledge with any who seek it." next: Epitaph_Done set: Selected_Epitaph14
}

player when (ChooseYourEpitaph and UnlockedEpitaph_Sigils1){
text:"TTRS:TermDlg.Epitaphs.15=I did my bit. Just don't ask me to help with any more sigil locks." next: Epitaph_Done set: Selected_Epitaph15
}

player when (ChooseYourEpitaph and UnlockedEpitaph_Sigils2){
text:"TTRS:TermDlg.Epitaphs.16=Why is the wall so crowded? I thought I was special." next: Epitaph_Done set: Selected_Epitaph16
}

player when (ChooseYourEpitaph and UnlockedEpitaph_Sigils3){
text:"TTRS:TermDlg.Epitaphs.17=I don't know about the puzzles, but I'm a professional sigil-arranger if you need help there." next: Epitaph_Done set: Selected_Epitaph17
}

player when (ChooseYourEpitaph and ConstructiveEndFlag){
text:"TTRS:TermDlg.Epitaphs.18=You have to provide your own answers - but I will help you to see them where I can." next: Epitaph_Done set: Selected_Epitaph18
}

player when (ChooseYourEpitaph and NihilistFlag){
text:"TTRS:TermDlg.Epitaphs.19=I only chose this path so I could print these words: IT'S ALL A LIE, THERE IS NO POINT." next: Epitaph_Done set: Selected_Epitaph19
}

player when (ChooseYourEpitaph and MoralScepticFlag){
text:"TTRS:TermDlg.Epitaphs.20=My choice to become a messenger doesn't mean I buy into this moral nonsense about helping others." next: Epitaph_Done set: Selected_Epitaph20
}

player when (ChooseYourEpitaph and StubbornUtilitarianFlag){
text:"TTRS:TermDlg.Epitaphs.21=I give my life to serve others to bring about the greatest good that I can." next: Epitaph_Done set: Selected_Epitaph21
}

player when (ChooseYourEpitaph and StubbornEgalitarianFlag){
text:"TTRS:TermDlg.Epitaphs.22=I dream of a world where all are equal. As a messenger I will bring about this end by helping the worst off." next: Epitaph_Done set: Selected_Epitaph22
}

terminal when (Epitaph_Done) {
text: [[TTRS:TermDlg.Epitaphs.Ln0019.0.text.GoodChoice=Storing final memory dump%w3.%w3.%w3.%w3.Done.
Ready for manual upload of new messenger parameters.
]]
slowexit
}
﻿#
player when((CLI_Enabled and TextsAvailable and InTerminal_Cloud_1_01) or (InTerminal_Journal and Cloud_1_01_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Cloud_1_01=A01"
  file: "TTRS:TermDlg.FoundTexts.IAN.Welcome.Name=welcome.eml" user: "TTRS:TermDlg.UserName.Local=loc" date: "0000/07/01"
  file: "TTRS:TermDlg.FoundTexts.Athena.Chapter006.Name=athena6.txt" user: "TTRS:TermDlg.UserName.LitArch=lit_arch" date: "TTRS:TermDlg.Date.1912CE=1912 CE"
  file: "TTRS:TermDlg.FoundTexts.General.FigureItOut.Name=figure_it_out.eml" user: "TTRS:TermDlg.UserName.EP_Archive=EP_arch" date: "2032/02/19"
}}

player when((CLI_Enabled and TextsAvailable and InTerminal_Cloud_1_02) or (InTerminal_Journal and Cloud_1_02_SeenTexts)) {
options:{
  header: "TTRS:TermDlg.JournalHeader.Cloud_1_02=A02"
  file: "TTRS:TermDlg.FoundTexts.IAN.FirstDay.Name=IAN.eml" user: "TTRS:TermDlg.UserName.Local=loc" date: "0000/01/21"
  file: "TTRS:TermDlg.FoundTexts.Athena.Analysis.Name=athena_analysis.html" user: "TTRS:TermDlg.UserName.Webcrawl=webcrawl" date: "2031/03/13"
  file: "TTRS:TermDlg.FoundTexts.Straton.Talos.Name=talos_principle.txt" user: "TTRS:TermDlg.UserName.CL_Archive=CL_arch" date: "TTRS:TermDlg.Date.260BCE=260 BCE"
}}
player when((CLI_Enabled and TextsAvailable and InTerminal_Cloud_1_02_Extra) or (InTerminal_Journal and Cloud_1_02_Extra_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Cloud_1_02_Extra=A02 Extra"
  file: "TTRS:TermDlg.FoundTexts.Milton.ErrorLog.Name=error.log" user: "TTRS:TermDlg.UserName.Temp=temp" date: "0000/00/00"
  file: "TTRS:TermDlg.FoundTexts.General.HumanMachine.Name=the_human_machine.html" user: "TTRS:TermDlg.UserName.Webcrawl=webcrawl" date: "2019/01/30"
  file: "TTRS:TermDlg.FoundTexts.IAN.ArghSolutions.Name=ARGH_solutions.eml" user: "TTRS:TermDlg.UserName.EP_Archive=EP_arch" date: "0000/06/29"
}}

player when((CLI_Enabled and TextsAvailable and InTerminal_Cloud_1_03) or (InTerminal_Journal and Cloud_1_03_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Cloud_1_03=A03"
  file: "TTRS:TermDlg.FoundTexts.Alexandra.AI_feedback.Name=AI_feedback.eml" user: "TTRS:TermDlg.UserName.EP_Archive=EP_arch" date: "9999/99/99"
  file: "TTRS:TermDlg.FoundTexts.IAN.TeamLeads.Name=team_leads.eml" user: "TTRS:TermDlg.UserName.Local=loc" date: "0000/07/05"
  file: "TTRS:TermDlg.FoundTexts.Straton.Wiki.Name=straton_of_stageira.wiki" user: "TTRS:TermDlg.UserName.Webcrawl=webcrawl" date: "2019/12/03"
}}

player when((CLI_Enabled and TextsAvailable and InTerminal_Cloud_1_04) or (InTerminal_Journal and Cloud_1_04_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Cloud_1_04=A04"
  file: "TTRS:TermDlg.FoundTexts.IAN.Progress001.Name=progress_rep1.eml" user: "TTRS:TermDlg.UserName.Local=loc" date: "0000/07/02"
  file: "TTRS:TermDlg.FoundTexts.Arkady.MailError.Name=mail_error.dat" user: "TTRS:TermDlg.UserName.Local=loc" date: "0000/06/03"
  file: "TTRS:TermDlg.FoundTexts.Straton.Beginnings.Name=beginnings.txt" user: "TTRS:TermDlg.UserName.CL_Archive=CL_arch" date: "TTRS:TermDlg.Date.260BCE=260 BCE"
}}
player when(UnlockedKittenPictures and ((CLI_Enabled and TextsAvailable and InTerminal_Cloud_1_04) or (InTerminal_Journal and Cloud_1_04_SeenTexts and "READTEXT^kitten1.img"))) {options:{
  file: "TTRS:TermDlg.CatPicures.Kitten1.Name=kitten1.img" user: "TTRS:TermDlg.UserName.Webcrawl=webcrawl" date: "0000/00/00"
}}
player when(UnlockedKittenPictures and ((CLI_Enabled and TextsAvailable and InTerminal_Cloud_1_04) or (InTerminal_Journal and Cloud_1_04_SeenTexts and "READTEXT^kitten2.img"))) {options:{
  file: "TTRS:TermDlg.CatPicures.Kitten2.Name=kitten2.img" user: "TTRS:TermDlg.UserName.Webcrawl=webcrawl" date: "0000/00/00"
}}
player when(UnlockedKittenPictures and ((CLI_Enabled and TextsAvailable and InTerminal_Cloud_1_04) or (InTerminal_Journal and Cloud_1_04_SeenTexts and "READTEXT^kitten3.img"))) {options:{
  file: "TTRS:TermDlg.CatPicures.Kitten3.Name=kitten3.img" user: "TTRS:TermDlg.UserName.Webcrawl=webcrawl" date: "0000/00/00"
}}
terminal when ("kitten1.img") { show_image: "Content/Talos/Models/EasterEggs/KittenBW01.tex" notext }
terminal when ("kitten2.img") { show_image: "Content/Talos/Models/EasterEggs/KittenBW02.tex" notext }
terminal when ("kitten3.img") { show_image: "Content/Talos/Models/EasterEggs/KittenBW03.tex" notext }

player when((CLI_Enabled and TextsAvailable and InTerminal_Cloud_1_05) or (InTerminal_Journal and Cloud_1_05_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Cloud_1_05=A05"
  file: "TTRS:TermDlg.FoundTexts.IAN.EL.Name=EL.html" user: "TTRS:TermDlg.UserName.Webcrawl=webcrawl" date: "9999/09/09"
  file: "TTRS:TermDlg.FoundTexts.Alexandra.AI_Citizenship.Name=AI_citizenship.html" user: "TTRS:TermDlg.UserName.Webcrawl=webcrawl" date: "9997/03/13"
  file: "TTRS:TermDlg.FoundTexts.Athena.Chapter008.Name=athena8.txt" user: "TTRS:TermDlg.UserName.LitArch=lit_arch" date: "TTRS:TermDlg.Date.1912CE=1912 CE"
}}

player when((CLI_Enabled and TextsAvailable and InTerminal_Cloud_1_06) or (InTerminal_Journal and Cloud_1_06_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Cloud_1_06=A06"
  file: "TTRS:TermDlg.FoundTexts.IAN.LOL.Name=LOL.eml" user: "TTRS:TermDlg.UserName.Local=loc" date: "0000/08/01"
  file: "TTRS:TermDlg.FoundTexts.Cicero.Tusculan.Name=cicero.txt" user: "TTRS:TermDlg.UserName.CL_Archive=CL_arch" date: "TTRS:TermDlg.Date.45BCE=45 BCE"
  file: "TTRS:TermDlg.FoundTexts.General.Chatbots.Name=chatbots.html" user: "TTRS:TermDlg.UserName.Webcrawl=webcrawl" date: "2024/04/16"
}}
player when((CLI_Enabled and TextsAvailable and InTerminal_Cloud_1_06_Extra) or (InTerminal_Journal and Cloud_1_06_Extra_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Cloud_1_06_Extra=A06 Extra"
  file: "TTRS:TermDlg.FoundTexts.Straton.SimplePrinciple.Name=a_simple_principle.html" user: "TTRS:TermDlg.UserName.Webcrawl=webcrawl" date: "2018/09/09"
  file: "TTRS:TermDlg.FoundTexts.Arkady.Journal077.Name=arkady_journal77.txt" user: "TTRS:TermDlg.UserName.Local=loc" date: "0000/06/25"
  file: "TTRS:TermDlg.FoundTexts.General.Post437_Comments.Name=post437_comments.html" user: "TTRS:TermDlg.UserName.Webcrawl=webcrawl" date: "0000/12/01"
}}
player when((CLI_Enabled and TextsAvailable and InTerminal_Cloud_1_06_Extra_02) or (InTerminal_Journal and Cloud_1_06_Extra_02_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Cloud_1_06_Extra_02=A06 Extra 2"
  file: "TTRS:TermDlg.FoundTexts.General.ClassicalPhilosophers.Name=classical_philosophers.lz19" user: "TTRS:TermDlg.UserName.LZ19=LZ19col" date: "0000/09/16"
  file: "TTRS:TermDlg.FoundTexts.IAN.Progress003.Name=progress_rep3.eml" user: "TTRS:TermDlg.UserName.Local=loc" date: "0000/07/22"
}}

player when((CLI_Enabled and TextsAvailable and InTerminal_Cloud_1_07) or (InTerminal_Journal and Cloud_1_07_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Cloud_1_07=A07"
  file: "TTRS:TermDlg.FoundTexts.Athena.Chapter009.Name=athena9.txt" user: "TTRS:TermDlg.UserName.LitArch=lit_arch" date: "TTRS:TermDlg.Date.1912CE=1912 CE"
  file: "TTRS:TermDlg.FoundTexts.Alexandra.Singularity.Name=singularity_discussion104.html" user: "TTRS:TermDlg.UserName.Webcrawl=webcrawl" date: "9995/10/11"
  file: "TTRS:TermDlg.FoundTexts.IAN.AskMeAnything.Name=AMA.html" user: "TTRS:TermDlg.UserName.Local=loc" date: "9999/03/13"
}}
player when((CLI_Enabled and TextsAvailable and InTerminal_Cloud_1_08) or (InTerminal_Journal and Cloud_1_08_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Cloud_1_08=A08"
  file: "TTRS:TermDlg.FoundTexts.Alexandra.Talos.Name=talos.eml" user: "TTRS:TermDlg.UserName.Local=loc" date: "0000/06/03"
  file: "TTRS:TermDlg.FoundTexts.Butler.HumanBlood.Name=human_blood.txt" user: "TTRS:TermDlg.UserName.LitArch=lit_arch" date: "TTRS:TermDlg.Date.1872CE=1872 CE"
  file: "TTRS:TermDlg.FoundTexts.Arkady.ArchiveImportant.Name=archive_IMPORTANT.eml" user: "TTRS:TermDlg.UserName.EP_Archive=EP_arch" date: "0000/06/03"
  file: "TTRS:notrans=#6_N**.img" user: "TTRS:TermDlg.UserName.Local=loc" date: "0000/00/00"
}}
terminal when ("#6_N**.img") { show_image: "Content/Talos/Textures/Terminal/Floor6_1.tex" notext }

#
player when((CLI_Enabled and TextsAvailable and InTerminal_Cloud_2_01) or (InTerminal_Journal and Cloud_2_01_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Cloud_2_01=B01"
  file: "TTRS:TermDlg.FoundTexts.Osiris.Chapter001.Name=osiris1.txt" user: "TTRS:TermDlg.UserName.EgSrc=eg_src" date: "TTRS:TermDlg.Date.unknownBCE=???? BCE"
  file: "TTRS:TermDlg.FoundTexts.General.GotItLyrics.Name=got_it_lyrics.html" user: "TTRS:TermDlg.UserName.Webcrawl=webcrawl" date: "0000/05/01"
  file: "TTRS:TermDlg.FoundTexts.General.Immortality.Name=immortality.html" user: "TTRS:TermDlg.UserName.Webcrawl=webcrawl" date: "0000/04/17"
}}
player when((CLI_Enabled and TextsAvailable and InTerminal_Cloud_2_01_Extra) or (InTerminal_Journal and Cloud_2_01_Extra_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Cloud_2_01_Extra=B01 Extra"
  file: "TTRS:TermDlg.FoundTexts.General.Mutation.Name=mutation.html" user: "TTRS:TermDlg.UserName.Webcrawl=webcrawl" date: "2028/08/29"
  file: "TTRS:TermDlg.FoundTexts.IAN.Capacity.Name=capacity.eml" user: "TTRS:TermDlg.UserName.Local=loc" date: "0000/06/22"
  file: "TTRS:TermDlg.FoundTexts.General.Evolution.Name=evolution.html" user: "TTRS:TermDlg.UserName.Webcrawl=webcrawl" date: "2013/07/05"
}}

player when((CLI_Enabled and TextsAvailable and InTerminal_Cloud_2_02) or (InTerminal_Journal and Cloud_2_02_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Cloud_2_02=B02"
  file: "TTRS:TermDlg.FoundTexts.General.ScienceMagic.Name=science_magic.html" user: "TTRS:TermDlg.UserName.Webcrawl=webcrawl" date: "2013/02/13"
  file: "TTRS:TermDlg.FoundTexts.General.WeightLoss.Name=weight_loss_722.html" user: "TTRS:TermDlg.UserName.Webcrawl=webcrawl" date: "0000/07/23"
  file: "TTRS:TermDlg.FoundTexts.Arkady.Journal081.Name=arkady_journal81.txt" user: "TTRS:TermDlg.UserName.Local=loc" date: "0000/07/04"
}}

player when((CLI_Enabled and TextsAvailable and InTerminal_Cloud_2_03) or (InTerminal_Journal and Cloud_2_03_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Cloud_2_03=B03"
  file: "TTRS:TermDlg.FoundTexts.IAN.Progress009.Name=progress_rep9.eml" user: "TTRS:TermDlg.UserName.Local=loc" date: "0000/08/02"
  file: "TTRS:TermDlg.FoundTexts.Osiris.Chapter003.Name=osiris3.txt" user: "TTRS:TermDlg.UserName.EgSrc=eg_src" date: "TTRS:TermDlg.Date.unknownBCE=???? BCE"
  file: "TTRS:TermDlg.FoundTexts.General.JustWar.Name=justwar_excerpt.txt" user: "TTRS:TermDlg.UserName.AcdmArc=acdm_arc" date: "2009/01/01"
}}
player when((CLI_Enabled and TextsAvailable and InTerminal_Cloud_2_03_Extra) or (InTerminal_Journal and Cloud_2_03_Extra_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Cloud_2_03_Extra=B03 Extra"
  file: "TTRS:TermDlg.FoundTexts.Johnson.BodySoul.Name=body_and_soul.txt" user: "TTRS:TermDlg.UserName.LitArch=lit_arch" date: "TTRS:TermDlg.Date.1759CE=1759 CE"
  file: "TTRS:TermDlg.FoundTexts.IAN.Soma.Name=soma.eml" user: "TTRS:TermDlg.UserName.Local=loc" date: "0000/07/15" 
}}

player when((CLI_Enabled and TextsAvailable and InTerminal_Cloud_2_04) or (InTerminal_Journal and Cloud_2_04_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Cloud_2_04=B04"
  file: "TTRS:TermDlg.FoundTexts.Osiris.Chapter006.Name=osiris6.txt" user: "TTRS:TermDlg.UserName.EgSrc=eg_src" date: "TTRS:TermDlg.Date.unknownBCE=???? BCE"
  file: "TTRS:TermDlg.FoundTexts.General.ChatlogCharlie.Name=chatlog_charlie_7.txt" user: "TTRS:TermDlg.UserName.Webcrawl=webcrawl" date: "0000/11/02"
  file: "TTRS:TermDlg.FoundTexts.Arkady.Journal084.Name=arkady_journal84.txt" user: "TTRS:TermDlg.UserName.Local=loc" date: "0000/10/01"
}}

player when((CLI_Enabled and TextsAvailable and InTerminal_Cloud_2_05) or (InTerminal_Journal and Cloud_2_05_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Cloud_2_05=B05"
  file: "TTRS:TermDlg.FoundTexts.Osiris.Chapter007.Name=osiris7.txt" user: "TTRS:TermDlg.UserName.EgSrc=eg_src" date: "TTRS:TermDlg.Date.unknownBCE=???? BCE"
  file: "TTRS:TermDlg.FoundTexts.IAN.ComingSoon.Name=coming_soon.eml" user: "TTRS:TermDlg.UserName.Local=loc" date: "0000/08/18"
  file: "TTRS:TermDlg.FoundTexts.General.Blog24.Name=blog24_alive.html" user: "TTRS:TermDlg.UserName.Webcrawl=webcrawl" date: "2028/05/31"
}}
player when((CLI_Enabled and TextsAvailable and InTerminal_Cloud_2_05_Extra) or (InTerminal_Journal and Cloud_2_05_Extra_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Cloud_2_05_Extra=B05 Extra"
  file: "TTRS:TermDlg.FoundTexts.Hippocrates.Corpus.Name=hippocratic_corpus.txt" user: "TTRS:TermDlg.UserName.CL_Archive=CL_arch" date: "TTRS:TermDlg.Date.400BCE=400 BCE"
  file: "TTRS:TermDlg.FoundTexts.Chesterton.Brain.Name=chesterton_brain.txt" user: "TTRS:TermDlg.UserName.PhilArc=phil_arc" date: "TTRS:TermDlg.Date.1905CE=1905 CE"
  file: "TTRS:TermDlg.FoundTexts.Bronstein.Brain.Name=bronstein_brain.txt" user: "TTRS:TermDlg.UserName.PhilArc=phil_arc" date: "TTRS:TermDlg.Date.1926CE=1926 CE"
  file: "TTRS:TermDlg.FoundTexts.General.Neuroscience.Name=neuroscience.txt" user: "TTRS:TermDlg.UserName.MedArc=med_arc" date: "2010/02/16"
}}

player when((CLI_Enabled and TextsAvailable and InTerminal_Cloud_2_06) or (InTerminal_Journal and Cloud_2_06_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Cloud_2_06=B06"
  file: "TTRS:TermDlg.FoundTexts.Osiris.Chapter011.Name=osiris11.txt" user: "TTRS:TermDlg.UserName.EgSrc=eg_src" date: "TTRS:TermDlg.Date.unknownBCE=???? BCE"
  file: "TTRS:TermDlg.FoundTexts.IAN.Progress016.Name=REprogress_rep16.eml" user: "TTRS:TermDlg.UserName.Local=loc" date: "0000/10/04"
  file: "TTRS:TermDlg.FoundTexts.Johnson.ChoiceOfLife.Name=choice_of_life.txt" user: "TTRS:TermDlg.UserName.LitArch=lit_arch" date: "TTRS:TermDlg.Date.1759CE=1759 CE"
}}

player when((CLI_Enabled and TextsAvailable and InTerminal_Cloud_2_07) or (InTerminal_Journal and Cloud_2_07_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Cloud_2_07=B07"
  file: "TTRS:TermDlg.FoundTexts.General.Chatlog9798.Name=chatlog_9787.txt" user: "TTRS:TermDlg.UserName.Webcrawl=webcrawl" date: "0000/11/13"
  file: "TTRS:TermDlg.FoundTexts.IAN.NorwegianBlue.Name=norwegian_blue.eml" user: "TTRS:TermDlg.UserName.Local=loc" date: "0000/10/04"
  file: "TTRS:TermDlg.FoundTexts.Osiris.Chapter021.Name=osiris21.txt" user: "TTRS:TermDlg.UserName.EgSrc=eg_src" date: "TTRS:TermDlg.Date.unknownBCE=???? BCE"
}}
player when((CLI_Enabled and TextsAvailable and InTerminal_Cloud_2_07_Extra) or (InTerminal_Journal and Cloud_2_07_Extra_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Cloud_2_07_Extra=B07 Extra"
  file: "TTRS:TermDlg.FoundTexts.Kant.SecondThesis.Name=second_thesis.txt" user: "TTRS:TermDlg.UserName.PhilArc=phil_arc" date: "TTRS:TermDlg.Date.1784CE=1784 CE"
  file: "TTRS:TermDlg.FoundTexts.Johnson.Boundary.Name=boundary.txt" user: "TTRS:TermDlg.UserName.LitArch=lit_arch" date: "TTRS:TermDlg.Date.1759CE=1759 CE"
  file: "TTRS:TermDlg.FoundTexts.General.Robots.Name=robots.txt" user: "TTRS:TermDlg.UserName.Webcrawl=webcrawl" date: "0000/00/00"
}}
player when((CLI_Enabled and TextsAvailable and InTerminal_Cloud_2_08) or (InTerminal_Journal and Cloud_2_08_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Cloud_2_08=B08"
  file: "TTRS:TermDlg.FoundTexts.General.Orangutan.Name=orangutan.html" user: "TTRS:TermDlg.UserName.Webcrawl=webcrawl" date: "9999/12/24"
  file: "TTRS:TermDlg.FoundTexts.Blake.Archive.Name=blake_archive_793.html" user: "TTRS:TermDlg.UserName.Webcrawl=webcrawl" date: "2022/12/16"
  file: "TTRS:TermDlg.FoundTexts.IAN.Usernames.Name=usernames.eml" user: "TTRS:TermDlg.UserName.Local=loc" date: "0000/09/03"
  file: "TTRS:notrans=#6_*N*.img" user: "TTRS:TermDlg.UserName.Local=loc" date: "0000/00/00"
}}
terminal when ("#6_*N*.img") { show_image: "Content/Talos/Textures/Terminal/Floor6_2.tex" notext }


#
player when((CLI_Enabled and TextsAvailable and InTerminal_Cloud_3_01) or (InTerminal_Journal and Cloud_3_01_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Cloud_3_01=C01"
  file: "TTRS:TermDlg.FoundTexts.Eadwald.Apocrypha001.Name=apocrypha1.doc" user: "TTRS:TermDlg.UserName.Medieval=mdv_th" date: "TTRS:TermDlg.Date.890CE=890 CE"
  file: "TTRS:TermDlg.FoundTexts.IAN.SarabhaiJournal.Name=Sarabhai982.jrnl" user: "TTRS:TermDlg.UserName.Local=loc" date: "0000/08/05"
  file: "TTRS:TermDlg.FoundTexts.General.Hope.Name=hope.eml" user: "TTRS:TermDlg.UserName.EP_Archive=EP_arch" date: "0000/12/01"
}}
player when((CLI_Enabled and TextsAvailable and InTerminal_Cloud_3_01_Extra) or (InTerminal_Journal and Cloud_3_01_Extra_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Cloud_3_01_Extra=C01 Extra"
  file: "TTRS:TermDlg.FoundTexts.Alexandra.AgainstSurvival.Name=against_survival.eml" user: "TTRS:TermDlg.UserName.Local=loc" date: "0000/07/30"
  file: "TTRS:TermDlg.FoundTexts.Butler.HumanEvolution.Name=human_evolution.txt" user: "TTRS:TermDlg.UserName.LitArch=lit_arch" date: "TTRS:TermDlg.Date.1872CE=1872 CE"
  file: "TTRS:TermDlg.FoundTexts.General.Einstein.Name=einstein.html" user: "TTRS:TermDlg.UserName.Webcrawl=webcrawl" date: "2029/07/23"
}}

player when((CLI_Enabled and TextsAvailable and InTerminal_Cloud_3_02) or (InTerminal_Journal and Cloud_3_02_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Cloud_3_02=C02"
  file: "TTRS:TermDlg.FoundTexts.General.Family.Name=family.html" user: "TTRS:TermDlg.UserName.Webcrawl=webcrawl" date: "0000/11/27"
  file: "TTRS:TermDlg.FoundTexts.IAN.LastDays.Name=lastdays.eml" user: "TTRS:TermDlg.UserName.Local=loc" date: "0000/09/26"
}}

player when((CLI_Enabled and TextsAvailable and InTerminal_Cloud_3_03) or (InTerminal_Journal and Cloud_3_03_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Cloud_3_03=C03"
  file: "TTRS:TermDlg.FoundTexts.General.Post437.Name=post437.html" user: "TTRS:TermDlg.UserName.Webcrawl=webcrawl" date: "0000/11/19"
  file: "TTRS:TermDlg.FoundTexts.Kant.ThirdThesis.Name=third_thesis.txt" user: "TTRS:TermDlg.UserName.PhilArc=phil_arc" date: "TTRS:TermDlg.Date.1784CE=1784 CE"
  file: "TTRS:TermDlg.FoundTexts.General.Humblebrag.Name=humblebrag.html" user: "TTRS:TermDlg.UserName.Webcrawl=webcrawl" date: "0000/12/05"
}}

player when((CLI_Enabled and TextsAvailable and InTerminal_Cloud_3_04) or (InTerminal_Journal and Cloud_3_04_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Cloud_3_04=C04"
  file: "TTRS:TermDlg.FoundTexts.General.Pets.Name=pets.html" user: "TTRS:TermDlg.UserName.Webcrawl=webcrawl" date: "0000/12/11"
  file: "TTRS:TermDlg.FoundTexts.Arkady.Journal099.Name=arkady_journal99.txt" user: "TTRS:TermDlg.UserName.Local=loc" date: "0000/11/30"
  file: "TTRS:TermDlg.FoundTexts.Blake.ContrariesTxt.Name=contraries.txt" user: "TTRS:TermDlg.UserName.Poet=poet_arc" date: "TTRS:TermDlg.Date.1793CE=1793 CE"
}}

player when((CLI_Enabled and TextsAvailable and InTerminal_Cloud_3_05) or (InTerminal_Journal and Cloud_3_05_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Cloud_3_05=C05"
  file: "TTRS:TermDlg.FoundTexts.General.PartyOnDudes.Name=party_on_dudes.eml" user: "TTRS:TermDlg.UserName.EP_Archive=EP_arch" date: "0000/12/04"
  file: "TTRS:TermDlg.FoundTexts.IAN.Progress032.Name=progress_rep32.eml" user: "TTRS:TermDlg.UserName.Local=loc" date: "0000/11/07"
  file: "TTRS:TermDlg.FoundTexts.General.PhilosophyTeeth.Name=philosophy_of_teeth.html" user: "TTRS:TermDlg.UserName.Webcrawl=webcrawl" date: "2029/07/03"
}}
player when((CLI_Enabled and TextsAvailable and InTerminal_Cloud_3_05_Extra) or (InTerminal_Journal and Cloud_3_05_Extra_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Cloud_3_05_Extra=C05 Extra"
  file: "TTRS:TermDlg.FoundTexts.IAN.Transcendence.Name=transcendence.html" user: "TTRS:TermDlg.UserName.Local=loc" date: "9996/06/23"
  file: "TTRS:TermDlg.FoundTexts.Bronstein.Matter.Name=matter.txt" user: "TTRS:TermDlg.UserName.PhilArc=phil_arc" date: "TTRS:TermDlg.Date.1926CE=1926 CE"
  file: "TTRS:TermDlg.FoundTexts.Dick.BuildAUniverse.Name=build_a_universe.txt" user: "TTRS:TermDlg.UserName.AcdmArc=acdm_arc" date: "2014/11/11"
}}

player when((CLI_Enabled and TextsAvailable and InTerminal_Cloud_3_06) or (InTerminal_Journal and Cloud_3_06_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Cloud_3_06=C06"
  file: "TTRS:TermDlg.FoundTexts.General.Faith.Name=faith.eml" user: "TTRS:TermDlg.UserName.EP_Archive=EP_arch" date: "0000/12/09"
  file: "TTRS:TermDlg.FoundTexts.IAN.ThankYou.Name=thank_you.eml" user: "TTRS:TermDlg.UserName.Local=loc" date: "0000/12/14"
  file: "TTRS:TermDlg.FoundTexts.Butler.HumanSoul.Name=human_soul.txt" user: "TTRS:TermDlg.UserName.PhilArc=phil_arc" date: "TTRS:TermDlg.Date.1872CE=1872 CE"
}}

player when((CLI_Enabled and TextsAvailable and InTerminal_Cloud_3_07) or (InTerminal_Journal and Cloud_3_07_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Cloud_3_07=C07"
  file: "TTRS:TermDlg.FoundTexts.Arkady.Journal108.Name=arkady_journal108.txt" user: "TTRS:TermDlg.UserName.Local=loc" date: "0000/12/14"
  file: "TTRS:TermDlg.FoundTexts.General.InventionOfBorders.Name=invention_of_borders.html" user: "TTRS:TermDlg.UserName.Webcrawl=webcrawl" date: "2018/10/19"
  file: "TTRS:TermDlg.FoundTexts.Eadwald.Apocrypha009.Name=apocrypha9.doc" user: "TTRS:TermDlg.UserName.Medieval=mdv_th" date: "TTRS:TermDlg.Date.890CE=890 CE"
}}
player when((CLI_Enabled and TextsAvailable and InTerminal_Cloud_3_08) or (InTerminal_Journal and Cloud_3_08_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Cloud_3_08=C08"
  file: "TTRS:TermDlg.FoundTexts.Butler.HumanEye.Name=human_eye.txt" user: "TTRS:TermDlg.UserName.LitArch=lit_arch" date: "TTRS:TermDlg.Date.1872CE=1872 CE"
  file: "TTRS:TermDlg.FoundTexts.Eadwald.Tetromino.Name=tetromino.html" user: "TTRS:TermDlg.UserName.Medieval=mdv_th" date: "2030/06/14"
  file: "TTRS:TermDlg.FoundTexts.Wollstonecraft.Preservation.Name=preservation.txt" user: "TTRS:TermDlg.UserName.PhilArc=phil_arc" date: "TTRS:TermDlg.Date.1796CE=1796 CE"
  file: "TTRS:notrans=#6_**N.img" user: "TTRS:TermDlg.UserName.Local=loc" date: "0000/00/00"
}}
terminal when ("#6_**N.img") { show_image: "Content/Talos/Textures/Terminal/Floor6_3.tex" notext }

#
player when((CLI_Enabled and TextsAvailable and InTerminal_Nexus_RomeElevatorRoom) or (InTerminal_Journal and Nexus_RomeElevatorRoom_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Nexus_RomeElevatorRoom=Land A Elevator"
  file: "TTRS:TermDlg.FoundTexts.Athena.Chapter012.Name=athena12.txt" user: "TTRS:TermDlg.UserName.LitArch=lit_arch" date: "TTRS:TermDlg.Date.1912CE=1912 CE"
  file: "TTRS:TermDlg.FoundTexts.General.FallRome.Name=HIS1A_rome.html" user: "TTRS:TermDlg.UserName.Webcrawl=webcrawl" date: "2010/05/07"
}}
player when((CLI_Enabled and TextsAvailable and InTerminal_Nexus_EgyptElevatorRoom) or (InTerminal_Journal and Nexus_EgyptElevatorRoom_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.EgyptElevatorRoom=Land B Elevator"
  file: "TTRS:TermDlg.FoundTexts.Osiris.Oxyrhynchus.Name=oxyrhynchus.html" user: "TTRS:TermDlg.UserName.Webcrawl=webcrawl" date: "2022/07/01"
  file: "TTRS:TermDlg.FoundTexts.Osiris.Wiki.Name=book_of_osiris.wiki" user: "TTRS:TermDlg.UserName.Webcrawl=webcrawl" date: "2032/09/04"
}}
player when((CLI_Enabled and TextsAvailable and InTerminal_Nexus_MedievalElevatorRoom) or (InTerminal_Journal and Nexus_MedievalElevatorRoom_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Nexus_MedievalElevatorRoom=Land C Elevator"
  file: "TTRS:TermDlg.FoundTexts.Milton.Heaven.Name=heaven.txt" user: "TTRS:TermDlg.UserName.Poet=poet_arc" date: "TTRS:TermDlg.Date.1667CE=1667 CE"
  file: "TTRS:TermDlg.FoundTexts.Blake.Hell.Name=hell.txt" user: "TTRS:TermDlg.UserName.Poet=poet_arc" date: "TTRS:TermDlg.Date.1793CE=1793 CE"
}}
player when((CLI_Enabled and TextsAvailable and InTerminal_Nexus_BelowTheMedievalElevatorRoom) or (InTerminal_Journal and Nexus_BelowTheMedievalElevatorRoom_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Nexus_BelowTheMedievalElevatorRoom=Land C Elevator Hidden"
  file: "TTRS:TermDlg.FoundTexts.IAN.QuestioningDoubt.Name=questioning_doubt_conf.txt" user: "TTRS:TermDlg.UserName.Archive=archive" date: "9998/05/01"
  file: "TTRS:TermDlg.FoundTexts.IAN.Partition.Name=partition.eml" user: "TTRS:TermDlg.UserName.Local=loc" date: "0000/07/07"
  file: "TTRS:TermDlg.FoundTexts.IAN.Him.Name=him.eml" user: "TTRS:TermDlg.UserName.Local=loc" date: "0000/07/09"
}}
player when((InTerminal_Nexus_Floor1 or InTerminal_Nexus_Floor2 or InTerminal_Nexus_Floor3 or InTerminal_Nexus_Floor4 or InTerminal_Nexus_Floor5) and CLI_Enabled) {
  text: "TTRS:TermDlg.ElevatorFloors.Ln0018.0.text.DeviceManager=device_manager" next: ElevatorControl_Start
}

player when((CLI_Enabled and TextsAvailable and InTerminal_Nexus_Floor1) or (InTerminal_Journal and Nexus_Floor1_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Nexus_Floor1=Tower Floor 1"
  file: "TTRS:TermDlg.FoundTexts.General.Truth.Name=TRUTH.html" user: "TTRS:TermDlg.UserName.Webcrawl=webcrawl" date: "0000/06/18"
  file: "TTRS:TermDlg.FoundTexts.Athena.Chapters.Name=athena_chapters.txt" user: "TTRS:TermDlg.UserName.LitArch=lit_arch" date: "TTRS:TermDlg.Date.1912CE=1912 CE"
  file: "TTRS:TermDlg.FoundTexts.Butler.HumanReproduction.Name=human_reproduction.txt" user: "TTRS:TermDlg.UserName.LitArch=lit_arch" date: "TTRS:TermDlg.Date.1872CE=1872 CE"
}}

player when((CLI_Enabled and TextsAvailable and InTerminal_Nexus_Floor2) or (InTerminal_Journal and Nexus_Floor2_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Nexus_Floor2=Tower Floor 2"
  file: "TTRS:TermDlg.Filename.Readme.txt=README.txt" user: "TTRS:TermDlg.UserName.Local=loc" date: "0000/00/00" next: ElevatorControl_3rdFloorHint
  file: "TTRS:TermDlg.FoundTexts.General.TheWeb.Name=the_web.html" user: "TTRS:TermDlg.UserName.Webcrawl=webcrawl" date: "0000/12/10"
  file: "TTRS:TermDlg.FoundTexts.IAN.Mathematics.Name=mathematics.eml" user: "TTRS:TermDlg.UserName.EP_Archive=EP_arch" date: "0000/12/15"
}}

player when((CLI_Enabled and TextsAvailable and InTerminal_Nexus_Floor3) or (InTerminal_Journal and Nexus_Floor3_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Nexus_Floor3=Tower Floor 3"
  file: "TTRS:TermDlg.Filename.OsirisPassword.txt=OsirisPassword.txt" user: "TTRS:TermDlg.UserName.EgSrc=eg_src" date: "TTRS:TermDlg.Date.unknownBCE=???? BCE" next: ElevatorControl_4thFloorHint
  file: "TTRS:TermDlg.FoundTexts.Blake.ContrariesDat.Name=contraries.dat" user: "TTRS:TermDlg.UserName.Temp=temp" date: "0000/00/00"
  file: "TTRS:TermDlg.FoundTexts.Athena.Chapter014.Name=athena14.txt" user: "TTRS:TermDlg.UserName.LitArch=lit_arch" date: "TTRS:TermDlg.Date.1912CE=1912 CE"
}}

player when((CLI_Enabled and TextsAvailable and InTerminal_Nexus_Floor4) or (InTerminal_Journal and Nexus_Floor4_SeenTexts)) {options:{
  header: "TTRS:TermDlg.JournalHeader.Nexus_Floor4=Tower Floor 4"
  file: "TTRS:TermDlg.Filename.SacredNumbers.txt=SacredNumbers.txt" user: "TTRS:TermDlg.UserName.Medieval=mdv_th" date: "TTRS:TermDlg.Date.890CE=890 CE" next: ElevatorControl_5thFloorHint
  file: "TTRS:TermDlg.FoundTexts.Athena.Chapter016.Name=athena16.txt" user: "TTRS:TermDlg.UserName.LitArch=lit_arch" date: "TTRS:TermDlg.Date.1912CE=1912 CE"
  file: "TTRS:TermDlg.FoundTexts.IAN.Remember.Name=remember.txt" user: "TTRS:TermDlg.UserName.Local=loc" date: "0000/12/23"
}}


terminal when ("mail_error.dat") { show_text: [[TTRS:TermDlg.FoundTexts.Arkady.MailError.Text=

From: Arkady 46.6F.72@2C.20.62
To: [504 recipients]

I'll keep this short. You all know me, so you know that I know what I'm talking about.

I realize that you're all working on projects meant to somehow avert  65 68 6F 6C 64 2C 20 49 20 63 72 65 61 74 65 20 6E 65 77 20 68 65 61 76 65 find a solution.

I believe that 46 6F 72 2C 20 62 65 68 6F 6C 64 2C 20 49 20 63 72 65 61 74 65 20 6E 65 77 20 68 65 61 76 65 6E 73 20 61 6E 64 20 61 20 6E 65 77 20 65 61 72 74 68 3A 20 61 6E preserve the non-biological components of 64 20 74 68 65 20 66 6F 72 6D 65 72 20 73 68 61 6C 6C 20 6E 6F 74 20 62 65 20 72 65 6D 65 6D 62 65 72 65 64 2C 20 6E 6F 72 20 63 6F 6D 65 20 69 6E

64 20 74 68 65 20 66 6F 72 6D 65 72 20 73 not in terms of 68 61 6C 6C 20 6E 6F 74 20 62 65 20 immediately. You'll find the details of my proposal in the attachment, but the short version is 72 65 6D 65 6D 62 65 72 65 64 2C 20 6E 6F 72 global undertaking 20 63 6F 6D 65 20 69 6E 74 6F 20 6D 69 6E 64 2E

]] }

terminal when ("AI_feedback.eml") { show_text: [[TTRS:TermDlg.FoundTexts.Alexandra.AI_feedback.Text=

"We keep discussing what an artificial intelligence would mean to us and how it would change our understanding of the world. That's a great topic and I think we've covered it extensively. What we've barely mentioned, though, is the other side of the coin. I mean, our lives would still be what they were before, A.I. or no A.I. The question I think we should discuss, even if it's all completely hypothetical, is the perspective of the artificial intelligence itself. What would it be like to be that creature? To suddenly come into being, created by others as an experiment? To have all the information about yourself, to know exactly how you function? What would you think about the world? Would you see meaning? Beauty? How would you judge humanity? Where would you see yourself fitting into the grand scheme of things? I think we should try to put ourselves into the shoes of such a being.

&gt; Dear Alexandra: Thank you for your feedback, but this is a philosophy course, not science fiction."

And that's why I almost gave up on my studies. :(

]] }

terminal when ("welcome.eml") { show_text: [[TTRS:TermDlg.FoundTexts.IAN.Welcome.Text=

From: Nadya Sarabhai @ Institute for Applied N%
To: Alexandra Drennan @ &&/ed Noematics
Subject: Welcome to the team!

Hi again,

I’m sorry if I was a little odd at the meeting. I know you were nervous, but the truth is that so was I. This may be hard to believe, but you intimidate me! You're so young and you've already accomplished so much... if the situation wasn’t so grim, I might even be jealous. :)

There's also something I wanted to clarify. I realize that, nominally speaking, I'm head researcher here. But this is your project and everyone will respect that. And yes, I know, you’re not used to working like this… but as of today, you’re in charge.

No pressure. *g*

Let's do this,
Nadya

]] }

terminal when ("IAN.eml") { show_text: [[TTRS:TermDlg.FoundTexts.IAN.FirstDay.Text=

From: Frank Ngatai
To: Miles Ngatai, Dan Ngatai
Subject: IAN!

My first day at the Institute for Applied Noematics. On the way to work, I'm terrified. What if they don't like me? What if they're all geniuses and I'm a complete buffoon? Maybe they were just kidding about letting me work there?

Trembling, I walk in, and right at the entrance there's a life-size poster of Jeff Goldblum. What the hell?

Then I get it. Institute for Applied Noematics. IAN. Dr. Ian Malcolm from the Jurassic Park movies. Jeff Goldblum.

Dr. Sarabhai shows up, smiling. "We were trying to find a cool acronym, back when the Institute was founded," she says. "INAN? IAPN? INAPNO? It all sounded stupid, but we didn't just want to call it IAN, because, well, that's a name. Then someone made a joke about calling it JEFF, and... it kind of stuck. So we're officially called IAN, but if you hear anyone referring to JEFF, that's our... internal name, I guess. I know, I know. Bloody geeks."

After that conversation, I wasn't so scared anymore. :)

]] }

terminal when ("team_leads.eml") { show_text: [[TTRS:TermDlg.FoundTexts.IAN.TeamLeads.Text=

We're blessed to have so many people contributing to this project, but we've got to make sure everyone is on the same page.

Please refer to the following people when w74 68 72 6F

Alexandra Drennan - Project Lead / AI Module
Nadya Sarabhai - Institute Coordinator
Rob Maclean - EL Software
Trevor Donovan - EL Hardware
George Jameson - Generation Module
Alan Jameson - Scenario Module
Bob Rakovsky - Simulation Module
Radhia Bricmont - &%§$&()
Aurora Calvin - Link Hardware
Omar Gharib - Link Software
J.E. Harrison - Diagnostic
Frank Ngatai - Memory Module
Jared V. Shmilev - File Sys%&//)
Sun Wei-Yang - Talos Unit (formerly Soma)

Though not directly part of our project, the Archive team is sharing both physical and digital space with us. If there are any technical issues to resolve, please contact their project lead, Arkady Chernyshevsky. Don't worry, he's nice.

75 67 68 20 69 6E 61 63 74 69 6F 6E 2C 20 61 6C 6C 6F 77 20 68 75 6D 61 6E 69 74 79 20 74 6F 20 63 6F 6D 65 20 74 6F 20 68 61 72 6D

]] }

terminal when ("AI_citizenship.html") { show_text: [[TTRS:TermDlg.FoundTexts.Alexandra.AI_Citizenship.Text=

[RE]CONSIDER / ISSUE 199 / Profile: Alexandra Drennan

Once a true artificial intelligence has been created, the issue of citizenship is going to come up. If we acknowledge that the A.I. has all the abilities of a human brain, should it not be considered a citizen? Is it not, in the legal sense of the word, a person, and thus a potential citizen?

But where do you draw the line, some people will object. Will the great apes become citizens? Elephants? Whales? The more intelligent parrot species? It's crazy, they will say. I would remind these people that we live in a society in which a corporation, as abstract an entity as one could imagine, is considered a person. So it's not like there is no precedent for a nonhuman being a person. At least an artificial intelligence is an actual thinking being, not just a business arrangement.

But perhaps we do need to question the definition of personhood. Increasing amounts of evidence regarding the intelligence of elephants or the existence of culture among whales, for example, could be a sign that we need to answer some difficult questions.

Who better to debate these questions with than the young genius who revolutionized the f$§%&$§ &

]] }

terminal when ("singularity_discussion104.html") { show_text: [[TTRS:TermDlg.FoundTexts.Alexandra.Singularity.Text=

Articles \ The Singularity Is Coming \ Comment 104

[user: alex16] [reply] [report]

You know, the more I think about it, the more I believe that no-one is actually worried about AIs taking over the world or anything like that, no matter what they say. What they're really worried about is that someone might prove, once and for all, that consciousness can arise from matter. And I kind of understand why they find it so terrifying. If we can create a sentient being, where does that leave the soul? Without mystery, how can we see ourselves as anything other than machines? And if we are machines, what hope do we have that death is not the end?

What really scares people is not the artificial intelligence in the computer, but the "natural" intelligence they see in the mirror.

[show next comments]

]] }


terminal when ("progress_rep1.eml") { show_text: [[TTRS:TermDlg.FoundTexts.IAN.Progress001.Text=

From: Nadya Sarabhai
To: IAN Mailing List
Subject: Progress Report 1

Hi all,

Everything's been moved to the EL facility. I know it's been sad to leave the good old JEFF building behind, but it makes sense for us to be on-site, especially as there may be severe power outages in the coming weeks.

Arkady's team are already working $%4C 49 46 45 20 55 48 20 46 49 4E 44 53 20 41&/run() 20 57 41 59  but you really don't need to worry about the teams getting in each other's way, the facility is genuinely humongous.

Let's get this show on the road!

- Nadya

]] }

terminal when ("talos.eml") { show_text: [[TTRS:TermDlg.FoundTexts.Alexandra.Talos.Text=

From: Alexandra Drennan
To: Noematics Mailing List
Subject: [NML] Talos Principle

Have you heard of the Talos Principle? It's this old philosophical concept about the impossibility of avoiding reality - no matter what you believe, if you lose your blood, you will die. I think that applies to our situation more than we'd like to admit. We could close our eyes and pretend that everything's going to be all right... but it won't change the physical reality of what's going to happen to our 4E 6F 20 6D 61 6E 20 69

I think that, as scientists, it is our duty to face the truth, and to ask ourselves the most important question: how can we help?

73 20 6C 69 62 65 72 61 74 65 64 20 66 72 6F 6D 20 66 65 61 72 20 77 68 6F 20 64 61 72 65 20 6E 6F 74 20 73 65 65 20 68 69 73

20 70 6C 61 63 65 20 69 6E 20 74 68 65 20 77 6F 72 6C 64 20 61 73 20 69 74 20 69 73 3B 20 6E 6F 20 6D 61 6E 20 63 61 6E 20 61 63 68 69 65 76 65 20 74 I think I have an idea 68 65 20 67 72 65 61 74 6E 65 73 73 20 6F 66 20 77 68 69 63 68 20 68 65 20 69 73 20 63 61 70 61 62 6C 65 20 75 6E 74 69 6C 20

68 65 20 68 61 73 20 61 6C 6C 6F 77 65 64 20 68 69 6D 73 65 6C 66 20 74 6F 20 73 65 65 20 68 69 73 20 6F 77 6E 20 6C 69 74 74 6C 65 6E 65 73 73 2E 20

Regards,
Alexandra

]] }

terminal when ("archive_IMPORTANT.eml") { show_text: [[TTRS:TermDlg.FoundTexts.Arkady.ArchiveImportant.Text=

From: Arkady Chernyshevsky, Univ& [error 4731 3A3236/
To: [504 recipients]
Subject: Archive

I'll keep this short. You all know me, so you know that I know what I'm talking about.

I realize that you're all working on projects meant to somehow avert the catastrophe we are facing. But you must all concede that there is a very real possibility that you will not have enough time to find a solution.

I believe that we *cannot* afford to ignore an extinction or near-extinction scenario. We *must* prepare for the worst. That is to say, we must seek to preserve the non-biological components of what constitutes the human species, in the hope they be recovered in the future by other (local or non-local) sentients.

I know that we are not used to thinking on that scale - not in terms of praxis - but if we truly value humanity, then we must act immediately. You'll find the details of my proposal in the attachment, but the short version is this: the creation of multiple archives (for redundancy) in safe locations that will contain, in digital form, as much information about our species (including all cultural works, scientific insights, history, DNA) as can be gathered in the given timeframe. This will be massive, global undertaking, §G%2/1&% with EL naturally being one of the %$

/// ERROR: CANNOT FIND ATTACHMENT ///

]] }


terminal when ("arkady_journal77.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Arkady.Journal077.Text=

Officially began work on Archive today. Contributors from every country on Earth while network connections last. Team intimidated by project scope but working hard.

Will be sharing space with Drennan & Sarabhai team. Look forward to meeting them.

]] }

terminal when ("progress_rep3.eml") { show_text: [[TTRS:TermDlg.FoundTexts.IAN.Progress003.Text=

From: Alexandra Drennan
To: IAN Mailing List
Subject: Progress Report 3

Hi all,

As per the last meeting, we're going with an existing game engine for the simulation. This gives us a whole slew of advantages:

- stability
- ease of use
- modular, easy to integrate
- large amount of pre-existing assets
- inherently aimed at testing users
- designed for iterative processes

After some back and forth, we've decided to use the S65 72 69 6F 75 73 20 45 6E 67 69 6E 65 20 37 2E 35 2C 20 77 68 69 63 68 20 43 72 6F 74 65 61 6D 20 68 61 76 65 20 6B 69 6E 64 6C 79 20 6D 61 64 65 20 61 76 61 69 6C 61 62 6C 65 20 74 6F 20 75 73 2E

All the relevant documents are attached.

- Alex

]] }

terminal when ("arkady_journal81.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Arkady.Journal081.Text=

Fascinated by Drennan's project. Lovely conversation re: Talos Principle, Greek philosophy, relevance to current situation.

Suggested naming project Talos. Drennan refused but name seems to have caught on with the team.

Tens of thousands of files coming in every hour. Our whole history.

]] }

terminal when ("progress_rep9.eml") { show_text: [[TTRS:TermDlg.FoundTexts.IAN.Progress009.Text=

From: Bob Rakovsky, In&$ (ied Noematics
To: IAN Mailing List
Subject: Progress Report 9

The basic skeleton of the simulation is now running on EL. It's not plugged into the AI system yet, but in theory everything is ready. I guess the next step is to test whether the generated scenarios make sense? Or do we wait for the iteration module to &()

]] }

terminal when ("coming_soon.eml") { show_text: [[TTRS:TermDlg.FoundTexts.IAN.ComingSoon.Text=

From: Rob Maclean, Institute for Applied Noematics
To: Mom
Subject: Coming Soon: Your Son! In 3D!

Hi Mom,

I promise I'll be home soon. Maybe a couple of weeks? I know, I know… but what we're doing here is important, and the team needs my help. I’m not going to wait until it's too late, I promise, but there’s so much we have to set up, so much that has to work for a very, very long time…

Besides, I’ve always wanted to work on one of these supercomputers, and believe me, EL is pretty much the best there is. And the team, mom… it's like I'm working with rock stars and mad geniuses. Except nobody's heard of them outside of science journals, of course. But Dad would be totally geeking out if he knew!

Maybe I can tell him about it soon, huh?

Love,
Rob

]] }

terminal when ("REprogress_rep16.eml") { show_text: [[TTRS:TermDlg.FoundTexts.IAN.Progress016.Text=

From: Aurora Calvin
To: IAN Mailing List
Subject: RE: Progress Report 16

&gt;This is extremely worrying! If the Link doesn't
&gt;work, the whole project will lead to nothing!
&gt;The hardware team *must* recheck everything ASAP.

Guys, guys, guys. Stop panicking. Look at your code again. In fact, look at line
//

That's right. The code that actually initiates the transfer wasn't even running. I'm guessing you were testing something yesterday and forgot to decommentify it.

The hardware isn't broken, your brains are. :)

Love,
Aurora

]] }

terminal when ("norwegian_blue.eml") { show_text: [[TTRS:TermDlg.FoundTexts.IAN.NorwegianBlue.Text=

From: Rob Maclean
To: IAN Mailing List
Subject: Norwegian Blue

Hi folks,

I'm sorry to say that a few hours ago I experienced the first symptom. I'm going to work until the end of the week to make sure EL is in perfect condition, but after that I'll be going back home. I will remain reachable via email and phone for as long as possible, but I'm confident Satoko can deal with anything that comes up.

If you want to do me a huge favour, spare me the drama tomorrow, OK? I love you all but I don't have the strength for sad smiles and hugs. The best remedy for sorrow is to get the job done.

And now for something completely different! :)

Cheers,
Rob

Link Attached: Dead Parrot Sketch

]] }

terminal when ("arkady_journal84.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Arkady.Journal084.Text=

Archive continues to grow. Attempting to maintain a semblance of order as difficult as expected.

Lost 7 people this week. Statistically speaking, trend should increase. Must focus on realistic goals.

Too little time to grieve.

]] }

terminal when ("usernames.eml") { show_text: [[TTRS:TermDlg.FoundTexts.IAN.Usernames.Text=

From: George Jameson
To: IAN Mailing List
Subject: RE: Usernames

It's, uh, working now. Each iteration is assigned its own unique name drawn randomly from the database. At the moment, that's a database of online gaming handles, which does sound a bit odd... but I honestly don't think we should spend more time on this. We have unique identifiers, so we're fine. More than that is a luxury we can't afford.

If we should happen to have everything else finished on time, I'll go back and generate a new database with more appropriate names. Right now it just can't be a priority.

- George

]] }

terminal when ("capacity.eml") { show_text: [[TTRS:TermDlg.FoundTexts.IAN.Capacity.Text=

From: Trevor Donovan
To: Alexandra Drennan
Subject: EL Capacity

Yeah, no worries. EL is not only ridiculously fast, it also has a bazillion tons of space. Even while hosting a full copy of the Archive, it'll totally be able to handle all your project's data needs, assuming its output is as you suggested. I mean, the worst case scenario would be, like, centuries.

That should be enough, right?

Right? o_O

- Trev

]] }

terminal when ("soma.eml") { show_text: [[TTRS:TermDlg.FoundTexts.IAN.Soma.Text=

From: Sun Wei-Yang
To: Arkady Chernyshevsky
Subject: Names

Names are a funny thing. I remember how much we struggled to come up with a name for our project.

All serious scientists name their projects by just translating them to Greek or Latin, right? "Corpus" made me think of some horrible disease, so we used the Greek word instead. Soma. Quite appropriate!

But then, since we needed corporate funding, we had to come up with a backronym. Corporations love backronyms, you know? They even sent us a list of buzzword-heavy suggestions to help us get started. Stuff like:

Self-sufficient Orthostatic Modular Android
Sustainable Observant Mechanized Anthropoid
Skeuomorphic Omniadaptable Mobile Anthropomaton

&/() After a while, we got so frustrated that we started getting silly.

Sabertoothed Overexcited Murder Android
Sentient Orthopaedic Monkey Automaton
Strange Olga's Menacing Assassobot
Superb Octopod Marinades Apelings
Satisfying Overcooked Mint Alligator
Stinky Ornithological Mule Allocator
Skroink Oof Minky Ack
Stupid Obscure Meaningless Acronym

In the end we all ended up hating the name SOMA just because we had so many fights about it with the sponsors. So when Alexandra told that story about the Talos Principle, ()%§$/%5& caught on. I don't know whether it really fits, but I kind of like it.

]] }

terminal when ("lastdays.eml") { show_text: [[TTRS:TermDlg.FoundTexts.IAN.LastDays.Text=

From: Alan Jameson, Institute for Applied Noematics
To: Fran
Subject: Last Days

You know what the oddest thing is about all this? We're not constantly fighting, having nervous breakdowns, screaming at each other. We're actually really polite and focused, and we spend most of our time debating the nature of humanity and how we can best succeed at probably the most ambitious thing anyone's ever tried. Like it was completely normal, like that's just how people are. I feel like we've turned into Star Trek characters or something. 

I guess... what's the point of doing anything else? Getting angry isn't going to help. But I didn't expect to feel like this at all.

And you know what? It's awesome.

Many greetings & good luck,
Alan

PS Love from George!

]] }

terminal when ("arkady_journal99.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Arkady.Journal099.Text=

Sarabhai gone. Lost day to grief, unable to focus.

Drennan working as if possessed. Does she sleep?

Getting tired.

]] }

terminal when ("progress_rep32.eml") { show_text: [[TTRS:TermDlg.FoundTexts.IAN.Progress032.Text=

From: Nadya Sarabhai
To: IAN Mailing List
Subject: Progress Report 32

We've gotten to that irritating point where all the major stuff is in place, and all we have to deal with are a million little things.
 
The main modules are all functioning and interacting with each other correctly. The process is happening more or less as planned. This could actually work.

But it's still crude as hell. Some of it's just surface stuff (like the random usernames), some of it's more worrying (various bugs, the fact we haven't run more extensive tests). We've got a lot of polishing to do.

With the team down to half the original size, I'm not sure we can actually finish everything that needs to be done. So what I'd really like to discuss tomorrow morning is a new set of priorities. Please put some thought into what you think must be finished at all costs.

- Nadya

PS Alexandra, get some sleep. I know you're still working. This is your baby, we're going to need your input tomorrow.

]] }

terminal when ("thank_you.eml") { show_text: [[TTRS:TermDlg.FoundTexts.IAN.ThankYou.Text=

From: Sun Wei-Yang
To: Alexandra Drennan
Subject: Thank you

Dear Alexandra,

As we approach the end, I wanted to let you know how much I appreciated this chance to finish my work on Soma/Talos. My faith makes death a far less frightening prospect than it is for others - I know we have all died many times before - but the thought of leaving the work unfinished did weigh on me. For having released me from that burden, I will forever be thankful to you, even if our attempt itself fails.

Though there are trillions of worlds beyond this one, I hope we may meet again in another life.

With love 54 69 6D 65 20 69 73 20 74 68 65 20 6D 65 72 63 79 20 6F 66 20 45 74 65 72 6E 69 74 79

]] }

terminal when ("arkady_journal108.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Arkady.Journal108.Text=

Team diminishing by the day. Proud of them nevertheless. Archive now incomprehensibly huge, still missing thousands of works, impossible to truly finish. Work already commenced on a sorting program to help catalogue the archive resources in our absence, but like everything else it has its foibles.

Talked to Alexandra. Talos going well. Maybe the Archive's first user will be terrestrial after all.

Estimate about a week, maybe ten days before I'm unable to keep working. A betrayal to leave early?

]] }

terminal when ("against_survival.eml") { show_text: [[TTRS:TermDlg.FoundTexts.Alexandra.AgainstSurvival.Text=

Dear Ms. Drennan,

I heard about your project - it's the talk of the scientific community - and I'd like to make an argument for why you should abandon it.

It's not that I think your idea won't work. It very well may. But we have to look beyond purely practical questions to the issue of morality. Especially at this turning point of our spiritual ecology.

By what right can we put living beings through all that suffering, just so they can serve our purposes? Why create these pale imitations of our fatally flawed species and force them to reenact our sordid history? Why &$&//

What you are building, Ms. Drennan, is a prison - even if there is a way out. I believe you mean well, but your idea of what is valuable is rooted in the dogma of Western civilization.

We're lucky enough to be able to end our global crime spree relatively painlessly, if you consider the harm we have caused the Earth. Why not be satisfied with that and let this planet go on in peace?

I hope you heed my words, and let your "Talos" bleed out before it's too late.

Respectfully,
Chellis Jensen

]] }

terminal when ("transcendence.html") { show_text: [[TTRS:TermDlg.FoundTexts.IAN.Transcendence.Text=

Reader responses to last week's article on science and atheism:

"I am perfectly aware of all the arguments against religion. In fact, I agree with most of them! There is no question that there is an objective, material reality. I'm also absolutely convinced that only a secular society can be truly equal and just.

And yet, I believe. I am, as they say, a person of faith.

Religion, to me, is not about distorting observable reality with superstitions, but about *transcendence*. It's not about deluding ourselves that the Earth is 6000 years old or God will help us if we say the right words inside our heads, but about reaching out to the Sublime. This is not a rejection of reason, but its application to a set of experiences that cannot be approached by more traditional means.

True engagement with religion is humbling. It transcends culture, nationality, and gender. As such, I think it goes hand in hand with science, and is not opposed to it."

- Dr. Omar Gharib, Institute for Applied Noematics

]] }

terminal when ("partition.eml") { show_text: [[TTRS:TermDlg.FoundTexts.IAN.Partition.Text=

From: Rob Maclean
To: IAN Mailing List, Archive Project
Subject: EL Partition

Hi folks,

This is just to let you know that, for reasons of convenience and security, we've partitioned EL into two separate systems. The Talos team will be working on EL-0, while the Archive team will be working on EL-1. (You might also notice an EL-2 partition, but don't worry about that, it's just the operating system doing its thing.)

Cheers,
Rob

]] }

terminal when ("him.eml") { show_text: [[TTRS:TermDlg.FoundTexts.IAN.Him.Text=

From: Bob Rakovsky
To: Alexandra Drennan
Subject: HIM

Hey Alex,

I agree that we need something that'll keep all the modules working together, evaluate &() a final test.

And I think I have the perfect solution! It's called the Holistic Integration Manager - a fancy name for something a lot like a Dungeon Master in pen & paper RPGs. We created it to help run some MMOs back in the day. We needed something that would be able to unite procedurally-generated and user-submitted content into a coherent whole so the game wouldn't become too chaotic and inconsistent.

It's a genuine AI, somewhat limited in its ability to grow, but capable of parsing and understanding text, images, audio, even video. It takes all the information it can find, interprets it, and then builds and maintains a world based on that. It's not perfect, but we don't have a lot of time, and it would be easy to adapt the code for our purposes.

In fact, come to think of it, some of it is actually based on routines that you suggested in that paper on

]] }

terminal when ("EL.html") { show_text: [[TTRS:TermDlg.FoundTexts.IAN.EL.Text=

EL, short for Extended Lifespan, is a groundbreaking initiative by seven leading universities to create the world's most stable and most durable supercomputer. With its custom-made hardware, bomb-proof casing, and near-inexhaustible hydroelectric power supply, EL represents a unique step forward in the evolution of human technology.

The brainchild of Nobel Prize nominee Dr. Arkady Chernyshevsky, EL will&&lt;BR&gt;

Links:
- Download Press Kit
- Meet the Team
- &lt;a href
- Apply
- &lt; a href="
- Contact

]] }

terminal when ("mathematics.eml") { show_text: [[TTRS:TermDlg.FoundTexts.IAN.Mathematics.Text=

From: Alan Jameson
To: IAN Mailing List
Subject: Thank you & goodbye

We sincerely hope you don't take our suicide as a sign that we were disappointed in you, unappreciative of your friendship, or in any way unhappy with our lives. Looking back, we can honestly say that we feel incredibly lucky to have known all of you and to have participated in this amazing research. And if we've contributed a little to the future of humanity, what can we feel but gratitude?

It is a true privilege to have had such insights into the nature of the mind; neither of us believes in God, but we certainly experienced a sense of awe that could be compared to a kind of religious feeling, at least according to Einstein's understanding of God. We've chosen to go now, together, because it means less suffering; one last beautiful day together seems a much better ending than a slow wasting away. In a sense, it's just mathematics.

Love,
Alan & George

]] }

terminal when ("remember.txt") { show_text: [[TTRS:TermDlg.FoundTexts.IAN.Remember.Text=

I don't know if anyone's ever going to read this, but if you do, if we succeeded, then I want you to know that Alexandra stayed until the last moment. I'm leaving, too tired, too broken, desperate for a few moments of peace with my remaining loved ones. But she's still there, and she won't give up. And yes, there are thousands like her all over the world, giving everything they have because they believe in humanity... but she's the one that I know, as a real person, a colleague, a friend. I know that she likes peanut ice cream and hates strawberry, that her favorite band is Pink Floyd, that her favorite poet is Blake, that her favorite TV show is Futurama, th42757420 646F6573 20612 068756D6 16E206 66F726 D206469 73706C6179 studied at Cornell, that her dad's name was Carl, that her mom's name was 54 6F 20 74 68 6F 73 65 20 77 68 6F 20 64 77 65 6C 6C 

I don't know if I should be ashamed for leaving, but I know that I'm proud of her. She was the best of us. Remember her.

69 6E 20 72 65 61 6C 6D 73 20 6F 66 20 64 61 79

]] }

terminal when ("LOL.eml") { show_text: [[TTRS:TermDlg.FoundTexts.IAN.LOL.Text=

From: J.E. Harrison
To: Gnomey77
Subject: LOL

Ever since we moved to the new site, I feel funny. No, not in *that* way. Just... I feel like I'm about to start laughing at random. It's probably shock, right? An inability to deal with reality?

Or maybe it's just that we're working in this insane place with this insane technology on this insane project and so I feel like a genuine mad scientist. 

Stand aside, mortals! We will create LIFE! By the power of SCIENCE!

I mentioned this to Alex and she got me a pair of fake glasses. "You can't be a mad scientist without glasses," she said. "Even Ian Malcolm had glasses." And I pointed at EL and said "Life, uh, finds a way."

Maybe you had to be there.

---

J.E. Harrison
Institute for Applied Noematics

Any emails sent from this address are to be considered CONFIDENTIAL. Sharing or forwarding without permission may result in prosecution by the enraged spirit of Jeff Goldblum.

]] }

terminal when ("Sarabhai982.jrnl") { show_text: [[TTRS:TermDlg.FoundTexts.IAN.SarabhaiJournal.Text=

User: Nadya Sarabhai
Entry: 982
AppLicense: XC43G5678SS4G
Tags: none

Everything's dark and quiet. The stars are brighter than I've ever seen them. I can hear the faint sound of water high above. Inside, Alexandra is recording one of her time capsule messages while running tests on the scenario module, Arkady is uploading another batch to the Archive while muttering something about the MLA program, and Omar is sleeping on the couch we put up yesterday.

And I'm sitting here, writing this, having trouble believing that it will ever end, that this oddly peaceful existence of ours won't just go on forever. I look at Talos and EL and their purpose seems like something that's always going to be in the future, an ideal to work towards, not something that will become real.

I wonder if there will be quiet places in the simulation, places to rest without thinking about the future. I hope so. Everyone deserves some moments of peace.

]] }

terminal when ("AMA.html") { show_text: [[TTRS:TermDlg.FoundTexts.IAN.AMA.Text=

Nadya Sarabhai AMA

As one of the founders of the modern science of Noematics - many credit you with inventing the term itself - how do you see the state of the science today? Sorry I said science twice.

Nadya Sarabhai: Mixed. On the one hand, the existence of the Institute for Applied Noematics and a couple of similar organizations is highly encouraging. On the other hand, the degree to which science is seen as serving purely military or corporate causes is, in my opinion, stopping us from exploring many important avenues of research. In a sense, it's people like Alexandra Drennan who are the real pioneers today, who have the enthusiasm and dedication that the system as a whole seems to be lacking.

Do you think technology poses a danger to humanity?

Nadya Sarabhai: No. Technology is just a tool. What we do with it is up to us.

The Extended Lifespan Project. Crazy or visionary?

Nadya Sarabhai: Both!

Arkady Chernyshevsky. Crazy or visionary? :D

Nadya Sarabhai: Both! (Arkady, is that you?)

Do y&lt;a href="

To: Alan Jameson
Subject: Re: Scenario Gen&lt;/

So far, all the puzzles are solvable, and completely within the necessary parameters. Alexandra had some more tweaks she wanted to suggest, but I think we're heading in the right direction here.

]] }
terminal when ("beginnings.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Straton.Beginnings.Text=

Straton of Stageira, On Beginnings (Fragment)

It is the grave error of many philosophers, not only of the Athenian schools but also of many others, that they begin not with observation of the cosmos as it surrounds us, but with a conclusion already in mind; and often that conclusion is that the world was created ideal, and mankind itself the greatest creation of the gods. Yet neither the world nor the gods owe mankind perfection; it is arrogance itself to presume so, and contrary to all the methods of philosophy. The honest philosopher seeks only the Truth, even if it bears no comfort; and he must begin by assuming, as Socrates said, that all he knows is that he knows nothing.

74 68 65 20 75 6E 65 78 61 6D 69 6E 65 64 20 6C 69 66 65 20 69 73 20 6E 6F 74 20 77 6F 72 74 68 20 6C 69 76 69 6E 67

]] }

terminal when ("contraries.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Blake.ContrariesTxt.Text=

456
Without Contraries is no progression. Attraction and Repulsion, Reason and Energy, Love and Hate, are necessary to Human existence.

[error]

]] }

terminal when ("straton_of_stageira.wiki") { show_text: [[TTRS:TermDlg.FoundTexts.Straton.Wiki.Text=

STRATON of Stageira (311 - 254 BC) was a Greek materialist philosopher associated with the Peripatetic school. An admirer of Aristotle, he was a proponent of empiricism and a fierce critic of philosophy that placed belief before observable truths. Though unpopular with many of his peers for his often acerbic personal manner, his commentaries on Aristotle were considered an important work. Much of his writing was lost in the destruction of the Library of Alexandria.

]] }

terminal when ("cicero.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Cicero.Tusculan.Text=

Shall the industrious husbandman, then, plant trees the fruit of which he shall never see? And shall not the great man found laws, institutions, and a republic? What does the procreation of children imply, and our care to continue our names, and our adoptions, and our scrupulous exactness in drawing up wills, and the inscriptions on monuments, and panegyrics, but that our thoughts run on futurity?

[cannot retrieve: Tusculan_Disputations 484-F5045]

What do you imagine that so many and such great men of our republic, who have sacrificed their lives for its good, expected? Do you believe that they thought that their names should not continue beyond their lives? None ever encountered death for their country but under a firm persuasion of immortality! Themistocles might have lived at his ease; so might Epaminondas; and, not to look abroad and among the ancients for instances, so might I myself. But, somehow or other there clings to our minds a certain presage of future ages; and this both exists most firmly, and appears most clearly, in men of the loftiest genius and greatest souls. Take away this, and who would be so mad as to spend his life amidst toils and dangers?

]] }

terminal when ("talos_principle.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Straton.Talos.Text=

[ARCHIVE: 260BCE-F12] [STRATON OF STAGEIRA]

Whether it is true that Daedalus constructed the giant Talos, or as others say he was the creation of Hephaestus, what we may be certain of is that he was made of bronze, and had but one vein, within which flowed a liquid substance like blood, which some claim was quicksilver, and others assert was ichor such as flows in the veins of the gods. The loss of that liquid caused him to die, as a man dies when he loses his blood.

May we not then say that Talos, though created as a machine or a toy, had all the essential properties of a man? He moved of his own volition. He spoke and could be spoken to, had wishes and desires. Indeed in the tale of the Argonauts, that was the cause of his downfall. If, then, a machine may have all the properties of a man, and act as a man while driven only by the ingenious plan of its construction and the interaction of its materials according to the principles of nature, then does it not follow that man may also be seen as a machine? This contradicts all the schools of metaphysics, yet even the most faithful philosopher cannot live without his blood.

]] }

terminal when ("HIS1A_rome.html") { show_text: [[TTRS:TermDlg.FoundTexts.General.FallRome.Text=

[UA-HIS1A] Prof. Dr. Armin Hoolock, "The Fall of the Roman Empire: A Dialectical Approach"
But, interesting as such perspectives of the decline and ultimate dissolution of the Roman Empire may be, they ultimately put too much emphasis on individual catastrophic events. The real question that must be asked is why the Roman Empire, which had dealt with so many threats and catastrophes over the years, was so incapable of responding to these later problems.

We must investigate the division of wealth, the structure of government, the location of power in Roman society. Had the Republic survived or been restored, would Rome still have fallen? What was the role of debt and slavery in creating the conditions for what we now call the Dark Ages? "Rome," the saying goes, "was not built in a day." It didn't fall in a day, either.

To register for the class, please email &&&

]] }

terminal when ("human_blood.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Butler.HumanBlood.Text=

It is said by some that our blood is composed of infinite living agents which go up and down the highways and byways of our bodies as people in the streets of a city. &/Ecc1 41 6E 64 20 74 68 65 20 57 6F 72 64 One generation passeth away, and another generation cometh: but the earth abideth for ever. function
) And the sleep of the town, how life-like! with its change in the circulation.

[BUTLER, SAMUEL]

We are misled by considering any complicated machine as a single thing; in truth it is a city or society, each member of which was bred truly after its kind.

]] }

terminal when ("error.log") { show_text: [[TTRS:TermDlg.FoundTexts.Milton.ErrorLog.Text=

CANNOT LOAD ARCHIVE [1667CE-F457] [MILTON, JOHN]

54 68 65 20 72 6F 61 64 20 6F 66 20 
65 78 63 65 73 73 20 6C 65 61 64 73 
That day I oft remember, when from sleep
I first awaked, and found myself reposed
65 20 70 61 6C 61 63 65 20 6F 66 20 77
69 73 64 6F 6D 2E
Under a shade on flowers, much wondering where
And what I was, whence thither brought, and how.
20 74 6F 20 74 68 
ERROR: UNKNOWN ERROR

]] }

terminal when ("the_human_machine.html") { show_text: [[TTRS:TermDlg.FoundTexts.General.HumanMachine.Text=

Topic
One day you discover that you are not a human being, but a machine. Your life so far was real, no-one controlled you or programmed you to behave in some specific way; your physical and mental capacities are identical to those of an organic human being. But you were created in a lab.

No-one except you knows about this. Your family, your friends, they all think you are a regular human being like themselves. You could continue to live your life the way you have before and nothing would change.

How do you react?

Pay specific attention to these questions:
a) Does your concept of yourself change? Are you the same person you thought you were?
b) Does your understanding of the world itself change?
c) Do you reveal the information to others, or do you keep it to yourself? Why?

1500-2000 words. The 26th is the final deadline, no extensions will be granted. Submit via email or
]] }

terminal when ("a_simple_principle.html") { show_text: [[TTRS:TermDlg.FoundTexts.Straton.SimplePrinciple.Text=

&lt;a href="45 52 52 4F 52 3A 20 46 49 4C 45 53 20 4D 49 53 53 49 4E 47&lt;

Though Straton himself never used the term, his remark about the inescapable materiality of life - that like the bronze giant Talos, "even the most faithful philosopher cannot live without his blood" - ultimately became known as the Talos Principle. What seemingly enraged many of his contemporaries and a significant number of later thinkers is the principle's simplicity and unassailability, which (according to a fragment found in Miletus) "cut through their rhetorical webs, which sought to tangle the listener with fanciful words and thoughts of the heavens, like Alexander's sword through the Gordian Knot." 

Diogenes Laertius makes mention of a dialogue by Anaximander of Chalcedon that expanded greatly on the Talos Principle, but that work remains lost.

]] }

terminal when ("classical_philosophers.lz19") { show_text: [[TTRS:TermDlg.FoundTexts.General.ClassicalPhilosophers.Text=

THE COMPRESSED FILE CANNOT BE ACCESSED.

NAME: classical_philosophers.lz19 (EL-1)

DESC: An extensive collection of works by the ancient philosophers of Greece and Rome. Annotated.

ERROR: Compression algorithm LZ19 not available in system EL-0.

]] }

terminal when ("second_thesis.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Kant.SecondThesis.Text=

In Man (as the only rational creature on Earth), those natural predispositions which are intended for the use of his reason, should be completely developed only in the species, not in the individual.

Reason in a creature is a faculty for extending the rules and purposes of the use of its powers far beyond natural instinct, and knows no limits in its designs. Yet it does not act according to instinct, but requires trials, practice and instruction, in order to progress from one degree of insight to the next.

Therefore each human would have to live excessively long in order to learn how he could make full use of his natural capacities; or, if Nature had given him only a short term of life (as she indeed has), so she would require a perhaps unpredictable series of generations, each passing its enlightenment to the next, to finally develop her seeds in our species to the degree that she considers appropriate.

And that point in time must be, at least as an idea, the goal of man's efforts, for otherwise his natural capacities would have to be regarded as largely meaningless
]] }

terminal when ("science_magic.html") { show_text: [[TTRS:TermDlg.FoundTexts.General.ScienceMagic.Text=
Though the term 'science' has only meant what it does to us for around 600 years, its practice far predates the name. There is evidence pre-Aristotle which indicates soothsayers, mystics and the like may have employed basic scientific methods to predict the future and confound their benefactors.

One anecdote concerns a palm-reader who was exposed when two wealthy clients compared their readings and found them to be identical. In 1948 the tendency to discover deep personal meaning in vague descriptions delivered authoritatively was given a name: the 'Forer effect'. Today it is recognised in all contemporary psychological theory.

]] }

terminal when ("justwar_excerpt.txt") { show_text: [[TTRS:TermDlg.FoundTexts.General.JustWar.Text=

'Democrates Alter, Or, on the Just Causes for War Against the Indians' by Juan Ginés De Sepulveda

Written in 1547 to justify the Spanish conquest of the Americas.

"...the Spanish have a perfect right to rule these barbarians of the New World, who in humanity are as inferior to the Spanish as children are to adults, or women are to men, for there exists between the two as great a difference as, I might even say, between apes and men.

Compare, then, these gifts with those possessed by these half-men, in whom you will barely find the vestiges of humanity, who not only do not possess any learning at all, but are not even literate, and eat human flesh?

Therefore, if you wish to reduce them, I do not say to our domination, but to a servitude a little less harsh, it will not be difficult for them to change their masters."

]] }

terminal when ("philosophy_of_teeth.html") { show_text: [[TTRS:TermDlg.FoundTexts.General.PhilosophyTeeth.Text=

Last night I had a simple but brilliant idea. Everyone who would like to write about philosophy or spirituality, especially to make some kind of grand statement about the nature of the body and the soul, should first experience a really bad tooth infection. I don't just mean a slight toothache, I mean the kind of hardcore infection that happens when several incompetent dentists miss a cavity in one of your back teeth and the thing keeps growing and growing until the nerve itself is really badly infected.

I mean, the pain is *unimaginable*. It comes in waves, and these waves drown out everything else about you. You can't talk, you can't move, you can't think, there's just pain and absolutely nothing else. It's like your brain just gets hijacked by it.

And then? You go to the dentist, and (assuming you get a decent one) they stick some chemicals in you, which make you go numb. Then they drill a hole in you, cut the nerve - snip snip - and it's over. Just like that, like repairing a car or a watch. Your whole existence was crippled by this tiny, tiny nerve sending electrochemical signals into your brain, and this unimaginable pain, which nearly blotted out your very consciousness, can be stopped just by a little cut.

We should call this the Toothos Principle, but that's incredibly stupid.

]] }

terminal when ("blake_archive_793.html") { show_text: [[TTRS:TermDlg.FoundTexts.Blake.Archive.Text=

&lt;img src="plate11.png"&gt;

The ancient Poets animated all sensible objects with Gods or Geniuses, calling them by the names and adorning them with the properties of woods, rivers, mountains, lakes, cities, nations, and whatever their enlarged & numerous senses could perceive.

And particularly they studied the genius of each city & country, placing it under its mental deity.

Till a system was formed, which some took advantage of & enslav'd the vulgar by attempting to realize or abstract the mental deities from their objects; thus began Priesthood.

Choosing forms of worship from poetic tales.

And at length they pronounced that the gods had orderd such things.

Thus men forgot that All deities reside in the human breast.

]] }

terminal when ("mutation.html") { show_text: [[TTRS:TermDlg.FoundTexts.General.Mutation.Text=

The role of mutation in evolution is particularly fascinating. Mutation is essentially an error in the organism's central database: a variable gets changed, a piece of information is accidentally doubled or combined with another. Most of the time, the result is the equivalent of a bug, causing anything from minor problems to complete system shutdown (i.e. death). But sometimes the new information is functional, giving the organism an advantage against the challenges it faces, in which case it has a much higher chance of being passed to the next generation.

If you consider how unlikely a beneficial mutation is, and how long it takes for such a mutation to propagate, this process can give you an amazing insight into just how vast the genetic history of each living organism 4C494 ?(6452 OVERWRITE 0465 24 F4D204 5525 24F52 Simultaneously, it is intriguing to consider what a major role random errors have played in the evolution of life itself. The same process that has killed so many of us, often in horrific ways, is also responsible for our very existence.

]] }

terminal when ("hippocratic_corpus.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Hippocrates.Corpus.Text=

[On the Sacred Disease][400 BCE] [&$&%

Men ought to know that from nothing else but the brain come joys, delights, laughter and sports, and sorrows, griefs, despondency, and lamentations. And by this, in an especial manner, we acquire wisdom and knowledge, and see and hear, and know what are foul and what are fair, what are bad and what are good, what are sweet, and what unsavory; some we discriminate by habit, and some we perceive by their utility. By this we distinguish objects of relish and disrelish, according to the seasons; and the same things do not always please us. And by the same organ we become mad and delirious, and fears and terrors assail us, some by night, and some by day, and dreams and untimely wanderings, and cares that are not suitable, and ignorance of present circumstances, desuetude, and unskilfulness.

]] }

terminal when ("chesterton_brain.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Chesterton.Brain.Text=

The human brain is a machine for coming to conclusions; if it cannot come to conclusions it is rusty. When we hear of a man too clever to believe, we are hearing of something having almost the character of a contradiction in terms. It is like hearing of a nail that was too good to hold down a carpet; or a bolt that was too strong to keep a door shut. Man can hardly be defined, after the fashion of Carlyle, as an animal who makes tools; ants and beavers and many other animals make tools, in the sense that they make an apparatus. Man can be defined as an animal that makes dogmas. As he piles doctrine on doctrine and conclusion on conclusion in the formation of some tremendous scheme of philosophy and religion, he is, in the only legitimate sense of which the expression is capable, becoming more and more human. When he drops one doctrine after another in a refined scepticism, when he declines to tie himself to a system, when he says that he has outgrown definitions, when he says that he disbelieves in finality, when, in his own imagination, he sits as God, holding no form of creed but contemplating all, then he is by that very process sinking slowly backwards into the vagueness of the vagrant animals and the unconsciousness of the grass. Trees have no dogmas. Turnips are singularly broad-minded.

]] }

terminal when ("bronstein_brain.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Bronstein.Brain.Text=

[ARCHIVE: 1926CE-F5112] [BRONSTEIN, LEV DAVIDOVICH]

54 68 65 20 74 72 75 65 20 6D 65 74 68 6F 64 20 6F 66 20 6B 6E 6F 77 6C 65 64 67 65

The human brain is a product of the development of matter, and at the same time is an instrument for the cognition of this matter; gradually it adjusts itself to its function, tries to overcome its limitations, creates ever new scientific methods, imagines ever more complex and exact instruments, checks its work again and yet again, step by step penetrates into previously unknown depths, changes our conception of matter, without, though, ever breaking away from this basis of all that exists.

69 73 20 65 78 70 65 72 69 6D 65 6E 74 2E

]] }

terminal when ("neuroscience.txt") { show_text: [[TTRS:TermDlg.FoundTexts.General.Neuroscience.Text=

Physiological History: Volunteer suffered a blood clot during infancy which resulted in a left-hemisphere stroke.

Expected Result: In normal adults the left hemisphere is used for language and other cognitive functions. Extensive damage to this part of the brain usually results in severe cognitive deficiencies.

Observed Result: Volunteer is now 17 years old, and displays only very subtle cognitive deficiency. MRIs indicate little to no activity in the left hemisphere, suggesting its usual functions have been taken on by neuron sets in the right. Volunteer's age at the time of the stroke may have helped the brain to adapt.

]] }

terminal when ("third_thesis.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Kant.ThirdThesis.Text=

[Idea for a Universal History with a Cosmopolitan Purpose]

It remains strange that the earlier generations seem to perform their toilsome labour only for the sake of the later ones; to construct for them a step from which they can raise higher the edifice that Nature intended; and only the latest of all generations have the luck to inhabit the edifice that a long line of their ancestors (unintentionally) constructed 45 56 4F 4C 55 54 49 4F 4E 20 54 48 52 4F 55 47 48 20 49 54 45 52 41 54 49 4F 4E 0D 0A 49 54 45 52 41 54 49 4F 4E 20 54 48 52 4F 55 47 48 20 50 4C 41 59 1784CE-F112] [KANT, IMMANUEL]

As puzzling as this may be, it is equally necessary, if one assumes the following: a species of animal possesses Reason, and must develop this capacity to its perfection, being individually mortal, but immortal in the species.

]] }

terminal when ("human_eye.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Butler.HumanEye.Text=

What is a man's eye but a machine for the little creature that sits behind in his brain to look through? [ARCHIVE: 1872CE-F553] [BUTLER, SAMUEL] 65 76 65 72 79 74 68 69 6E 67 20 77 6F 75 6C 64 20 61 70 70 65 61 72 20 74 6F 20 6D 61 6E 20 61 73 20 69 74 20 69 73

Is it man's eyes, or is it the big seeing-engine which has revealed to us the existence of worlds beyond worlds into infinity?  What has made man familiar with the scenery of the moon, the spots on the sun, or the geography of the planets?  He is at the mercy of the seeing-engine for these things, and is powerless unless he tacks it on to his own identity, and make it part and parcel of himself. 

]] }

terminal when ("human_evolution.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Butler.HumanEvolution.Text=

[ARCHIVE: 1872CE-F553] [BUTLER, SAMUEL]

Complex now, but how much simpler and more intelligibly organised may it not become in another hundred thousand years? Or in twenty thousand?  For man at present believes that his interest lies in that direction; he spends an incalculable amount of labour and time and thought in making machines breed always better and better; he has already succeeded in effecting much that at one time appeared impossible, and there seem to be no limits to the results of accumulated improvements if they are allowed to descend with modification from generation to generation. 

It must always be remembered that man's body is what it is through having been moulded into its present shape by the chances and changes of many millions of years, but that his organisation never advanced with anything like the rapidity with which that of the machines is advancing.  

]] }

terminal when ("human_soul.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Butler.HumanSoul.Text=

[ARCHIVE: 1872CE-F553] [BUTLER, SAMUEL]

If all machines were to be annihilated at one moment, so that not a knife nor lever nor rag of clothing nor anything whatsoever were left to man but his bare body alone that he was born with, and if all knowledge of mechanical laws were taken from him so that he could make no more machines, and all machine-made food destroyed so that the race of man should be left as it were naked upon a desert island, we should become extinct in six weeks.

A few miserable individuals might linger, but even these in a year or two would become worse than monkeys.  Man's very soul is due to the machines; it is a machine-made thing: he thinks as he thinks, and feels as he feels, through the work that machines have wrought upon him, and their existence is quite as much a sine quâ non for his, as his for theirs.

]] }

terminal when ("hell.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Blake.Hell.Text=

1793CE-F3922] [BLAKE, WILLIAM]

The ancient tradition that the world will be consumed in fire at the end of six thousand years is true, as I have heard from Hell,

For the cherub with his flaming sword is hereby commanded to leave his guard at tree of life, and when he does, the whole creation will be consumed, and appear infinite and holy whereas now it appears finite & corrupt.

This will come to pass by an improvement of sensual enjoyment.

But first the notion that man has a body distinct from his soul, is to be expunged; this I shall do, by printing in the infernal method, by corrosives, which in Hell are salutary and medicinal, melting apparent surfaces away, and displaying the infinite which was hid.

[BLAKE, WILLIAM] [COLLECTION: THE MARRIAGE OF HEAVEN AND HELL] [DOCUMEN4F6
68742E2066696C6C7 320696D6D6 56E736974 792E()

]] }

terminal when ("contraries.dat") { show_text: [[TTRS:TermDlg.FoundTexts.Blake.ContrariesDat.Text=

54 6F 20 73 65 65 20 61 20 57 6F 72 6C 64 20 69 6E 20 61 20 47 72 61 69 [BLAKE, WILLIAM 6E 20 6F 66 20 53 61 6E 64

Without Contraries is no progression. Attraction and Repulsion, Reason and Energy, Love and Hate, are necessary to Human existence.

From these contraries spring what the religious call Good & Evil. Good is the passive that obeys Reason

Evil is the active springing from Energy.

48 6F 6C 64 20 49 6E 66 69 6E 69 74 79 20 69 6E 20 74 68 65 20 70 61 6C 6D 20 6F 66 20 79 6F 75 72 20 68 61 6E 64

]] }

terminal when ("preservation.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Wollstonecraft.Preservation.Text=

I viewed, with a mixture of pity and horror, these beings training to be sold to slaughter, or be slaughtered, and fell into reflections on an old opinion of mine, that it is the preservation of the species, not of individuals, which appears to be the design of the Deity throughout the whole of Nature. Blossoms come forth only to be blighted; fish lay their spawn where it will be devoured; and what a large portion of the human race are born merely to be swept prematurely away! 156C(696
Does not this waste of budding life emphatically assert that it is not men, but Man, whose preservation is so necessary to the completion of the grand plan of the universe? Children peep into existence, suffer, and die; men play like moths about a candle, and sink into the flame; war, and "the thousand ills which flesh is heir to," mow them down in shoals; whilst the more cruel prejudices of society palsy existence, introducing not less sure though slower decay.

]] }

terminal when ("einstein.html") { show_text: [[TTRS:TermDlg.FoundTexts.General.Einstein.Text=

Recent discussions have brought me back to an excellent 1949 article by Albert Einstein, in$%/

&lt;BLOCKQUOTE&gt;I recently discussed with an intelligent and well-disposed man the threat of another war, which in my opinion would seriously endanger the existence of mankind
I am sure that as little as a century ago no one would have so lightly made a statement of this kind. It is the statement of a man who has striven in vain to attain an equilibrium within himself and has more or less lost hope of succeeding. It is the expression of a painful solitude and isolation from which so many people are suffering in these days.&lt;/BLOCKQUOTE&gt;
Nothing seems more important to me than that we reassert the value of humanity. Despite our flaws, we must not stop celebrating the beauty of human life and human achievement, par&$%

]] }

terminal when ("matter.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Bronstein.Matter.Text=

True, there are certain idealist books – not of a clerical character, but philosophical ones – wherein you can read that time and space are categories of our minds, that they result from the requirements of our thinking and that nothing actually corresponds to them in reality. But it is difficult to agree with this view. If any idealist philosopher, instead of arriving in time to catch the nine pm train, should turn up two minutes late, he would see the tail of the departing train and would be convinced by his own eyes that time and space are inseparable from material reality. 

The task is to diminish this space, to overcome it, to economize time, to prolong human life, to register past time, to raise life to a higher level and enrich it. This is the reason for the struggle with space and time, at the basis of which lies the struggle to subject matter to man – matter, which constitutes the foundation not only of everything that really exists, but also of all imagination.

[BRONSTEIN, /&

]] }

terminal when ("build_a_universe.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Dick.BuildAUniverse.Text=

In his remarkable 1978 essay, "How to Build a Universe That Doesn't Fall Apart Two Days Later," Philip K. Dick discusses the two themes that are most central to his work: "What is reality?" and "What is an authentic human being?"

His speculations and experiences will seem extraordinary to a reader unfamiliar with his work, yet despite what may seem like far-fetched ideas - "somehow the world of the Bible is a literally real but veiled landscape, never changing, hidden from our sight, but available to us by revelation," or the notion that perhaps we all exist in the year 50 A.D. - Dick actually delivers one of the simplest, most elegant and most useful definitions of reality ever formulated:

"Reality is that which, when you stop believing in it, doesn't go away."

Materialist philosophers have expressed similar ideas before (e.g. Straton of Stageira's Talos Principle), but it's particularly interesting to see such a thought expressed by a decidedly more mystical writer, w
]] }

terminal when ("boundary.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Johnson.Boundary.Text=

[ARCHIVE: 1759CE-F991] [JOHNSON, SAMUEL]

"What," said he, "makes the difference between man and all the rest of the animal creation?  Every beast that strays beside me has the same corporal necessities with myself: he is hungry, and crops the grass; he is thirsty, and drinks the stream; his thirst and hunger are appeased; he is satisfied, and sleeps; he rises again, and is hungry; he is again fed, and is at rest.  I am hungry and thirsty, like him, but when thirst and hunger cease, I am not at rest."

[segment 4]

Then raising his eyes to the mountain, "This," said he, "is the fatal obstacle that hinders at once the enjoyment of pleasure and the exercise of virtue.  How long is it that my hopes and wishes have flown beyond this boundary of my life, which yet I never have attempted to surmount?"

]] }

terminal when ("heaven.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Milton.Heaven.Text=

The mind is its own place, and in itself
Can make a Heaven of Hell, a Hell of Heaven.
What matter where, if I be still the same,
And what I should be, all but less than he
Whom thunder hath made greater? Here at least
We shall be free; th' Almighty hath not built
Here for his envy, will not drive us hence:
Here we may reign secure; and, in my choice,
To reign is worth ambition, though in Hell:
Better to reign in Hell than serve in Heaven.

]] }

terminal when ("evolution.html") { show_text: [[TTRS:TermDlg.FoundTexts.General.Evolution.Text=

&lt;favorited by George Jameson&gt;

One of the common misunderstandings about evolution, sometimes accidentally promoted by people who should know better, is that it's an active process. Sometimes the term "evolve" is even applied to individual beings, as if some invisible force had driven them to suddenly change. But the truth is that individuals don't evolve; the term "evolution" describes a long-term process that can be observed in an entire population across time due to
If an individual coincidentally has a trait that allows it to deal with that challenge more effectively than others, it is more likely to pass on that information to its descendants. That information gives them an advantage, so over time they become the dominant "model" of that species. The individuals experience no (significant) genetic change during their lifetimes, but each of them is part of the evolution of the species.

]] }

terminal when ("questioning_doubt_conf.txt") { show_text: [[TTRS:TermDlg.FoundTexts.IAN.QuestioningDoubt.Text=

Keynote Speech by N. Sarabhai, "Questioning Doubt"

They say "doubt everything," but I disagree. Doubt is useful in small amounts, but too much of it leads to apathy and confusion. No, don't doubt everything. QUESTION everything. That's the real trick. Doubt is just a lack of certainty. If you doubt everything, you'll doubt evolution, science, faith, morality, even reality itself - and you'll end up with nothing, because doubt doesn't give anything back. But questions have answers, you see. If you question everything, you'll find that a lot of what we believe is untrue… but you might also discover that some things ARE true. You might discover what your own beliefs are. And then you'll question them again, and again, eliminating flaws, discovering lies, until you get as close to the truth as you can.

Questioning is a lifelong process. That's precisely what makes it so unlike doubt. Questioning engages with reality, interrogating all it sees. Questioning leads to a constant assault on the intellectual status quo, where doubt is far more likely to lead to resigned acceptance. After all, when the possibility of truth is doubtful (excuse the pun), why not simply play along with the most convenient lie?e
Questioning is progress, but doubt is stagnation.

]] }

terminal when ("human_reproduction.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Butler.HumanReproduction.Text=

Surely if a machine is able to reproduce another machine systematically, we may say that it has a reproductive system. [ARCHIVE: 1872CE-F553] And how few of the machines are there which have not been produced systematically by other machines?  But it is man that makes them do so. Yes; but is it not insects that make many of the plants reproductive, and would not whole families of plants die out if their fertilisation was not effected by a class of agents utterly foreign to themselves? Each one of ourselves has sprung from minute animalcules whose entity was entirely distinct from our own, and which acted after their kind with no thought or heed of what we might think about it. /BU%E& These little creatures are part of our own reproductive system; then why not we part of that of the machines?

]] }

terminal when ("invention_of_borders.html") { show_text: [[TTRS:TermDlg.FoundTexts.General.InventionOfBorders.Text=

Excerpt: The Invention of Borders, by Fatimah Nguyen

"What today's nationalists and neosegregationists fail to understand," Kwame said, "is that the basis of every human culture is, and always has been, synthesis. No civilization is authentic, monolithic, pure; the exact opposite is true. Look at your average Western nation: its numbers Arabic, its alphabet Latin, its religion Levantine, its philosophy Greek… need I continue? And each of these examples can itself be broken down further: the Romans got their alphabet from the Greeks, who created theirs by stealing from the Phoenicians, and so on. Our myths and religions, too, are syncretic - sharing, repeating and adapting a large variety of elements to suit their needs. Even the language of our creation, the DNA itself, is impure, defined by a history of amalgamation: not only between nations, but even between different human species!"

Tasks:
1. Discuss this excerpt in the context of Wolfgang Welsch's theory of transculturality.
2. (4859425)  the novel as/2494449 5459

]] }
terminal when ("athena_analysis.html") { show_text: [[TTRS:TermDlg.FoundTexts.Athena.Analysis.Text=

[USER ALEX16 ADDED 4 NOTES]

NOTE 01: &/ novel's first sentence - "She woke up in an impossible place, knowing nothing." - signifies more than the beginning of another amnesia-based mystery, though we should not go so far as to read the entire work as allegory. Rather, while taking the science fictional novus at the core of the narrative at face value, we should ////%10///&lt;/p&gt;

NOTE 02: having no inherent knowledge of the nature of the world, forced to rely on what we are told by others and what our own (subjective, flawed, limited) senses tell us 54 72 75 74 68 20 77 61 73 20 74 68 65 20 6F 6E 6C 79 20 64 61 75 67 68 74 65 72 20 6F 66 20 54 69 6D 65 2E social reality (belief) and objective reality (matter) come into conflict.

NOTE 03: When, in chapter sixteen ("A Second Awakening in the Kingdom of Artemis"), the protagonist questions her mentor on the ///

NOTE 04: a more meaningful interpretation can only be achieved through SYNTHESIS of

]] }

terminal when ("athena6.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Athena.Chapter006.Text=

Chapter Six: Athena in the Garden of the Hesperides

&%7V/ did not trust them. But they moved with such grace, such nobility, that it was hard not to follow them further into this strange garden of gears and cogs. They led her to a place where the crowns of the brass trees seemed to grow together, forming a kind of chamber strangely reminiscent of a chapel. In the middle of this chamber grew a smaller tree, made of bright blue steel, and upon this tree grew a single golden apple.

"This apple," the nymphs said in unison, their eyes aglow, "confers the gift of deathlessness and true wisdom. Many heroes, and not a few villains, have come to claim it; but all faltered in the final step. For you must know that deathlessness reveals the mortality of the world, and true wisdom its unending folly. Who would take this burden upon themselves? Some say that Heracles f.LOAD(5448 45 2045 5445 524E 414C 20 47 41 5244 45 4E) gazing upon the stars, and wept.

]] }

terminal when ("athena8.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Athena.Chapter008.Text=

"You must consider these riddles," the Sphinx said, "and tell me the riddle that I did not reveal."

The Sphinx smiled, the gears in her jaw creaking, her teeth a nightmare of rust. Her left eye flickered, but none of its terror was diminished. The ruins were silent. In the

/// ERROR ///

"I think," she finally said, "that the riddle you did not reveal is this: why do these riddles exist in the first place? Why do these curious automatons, these mute children of Hephaestus, behave as they do, forcing me to devise these intricate solutions? Each is a riddle, but the greater riddle is their purpose."

The Sphinx did not answer. Her eye was lifeless now. Athena removed it from its socket, knowing that its power would aid her, yet feeling also a deep sorrow at the passing of this fearful creature.

]] }

terminal when ("athena9.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Athena.Chapter009.Text=

She examined the symbol on the fragment she'd found in the buried city. Again the owl. What could its significance be? It seemed as if they had been scattered about in the labyrinth by some unseen hand for a purpose that yet eluded /// most likely the owl was the sigil of the author of these words, which had so /673&$§RFG

&%%$ a nebulous memory, as if from a previous life: the owl was the symbol of
]] }

terminal when ("athena12.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Athena.Chapter012.Text=

Twelve: The Council of Zeus

&41 53
USER.set
Here assembled were all the many generations of the gods, and demigods and souls of mortals; steel and bronze and iron, and memory of flesh. The clouds parted far beneath, revealing the beautiful plains of Macedon, where great gleaming cities had once
]] }

terminal when ("athena14.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Athena.Chapter014.Text=

Chapter Fourteen: The Judgement of Hephaestus

[ARCHIVE: &$%§31E&]

"If what you say is true, and my father Hephaestus is slain, then who am I? For I was made in his image, and that image is now gone. Am I like the reflection in a mirror, to vanish when the person steps away? Or have I now become Hephaestus myself, forged to be no more than a replacement, as one may purchase a new sandal from the same shoemaker? [ATHENA REBORN: A NOVEL] his legacy is
]] }

terminal when ("athena16.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Athena.Chapter016.Text=

Sixteen: A Second Awakening in /// ERROR ////

$%§$ the fires burned here, but beyond the incense she could smell the cold wind from the Kingdom of Artemis, where
/// OUTPUT error_log.txt ///

"But I am not Hephaestus, you see; for though I wield his hammer and know the secrets of his forge, I am not lame, and neither am I a god."

"Who are you, then?" they said.

]] }

terminal when ("athena_chapters.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Athena.Chapters.Text=

Athena Reborn: A Novel

Contents

1 - Theogony
2 - Zeus Speaks
3 - The Lost Children of Hephaestus
4 - Dreams of the Labyrinth
5 - The Songs of Eris at Nightfall
6 - Athena in the Garden of the Hesperides
7 - The Buried City
8 - The Riddles of the Sphinx
9 - The Age of Faith
10 - The Madness of Coeus
11 - Olympus Revealed in the Clouds
12 - The Council of Zeus
13 - Skepsis and Synthesis
14 - The Judgement of Hephaestus
15 - Zeus Reflects Upon Creation
16 - A Second Awakening in the Kingdom of Artemis
17 - Anthropogony

]] }
terminal when ("osiris1.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Osiris.Chapter001.Text=

(Original translation by E. A. Wallis Budge. Annotations by %&$/)

The Dying Man went unto the Scribe who resided in Pr-Medjed (1) and said: "Behold, I am weak of body; my days under the holy sun of Amun-Ra (2) are coming to an end. Though I have spent my years in service of the Two Lands, I have not studied the /?/ Tell me, you who are wise in the writings of the Dead, what lies ahead on my journey? What will I face in the Land of the Westerners? (3)"

And the Scribe spoke, saying: "At the appointed time, y$§&3$§7/%$

(1) It is likely the location was changed according to who the copy of the Book was made for; the Dying Man is an avatar of the owner.
(2) In the older manuscript, this is rendered as $%§%& some controversy as to whether it
(3) The dead. Compare with Khenti-Amentiu, the Foremost of the Westerners, a title later given to Osiris.
(5) Sometimes mistaken for a mistranslation on Budge's part, this is actually almost certainly a mistranslation by the ancient scribe. The equivalent portion of the older manuscript is sadly not extant.

]] }

terminal when ("osiris3.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Osiris.Chapter003.Text=

"The first wisdom," the Scribe said to the Dying Man, "is that as the world is made of five elements (1), so is the soul of Man; know therefore that in this life, you are Heart and Shadow and Name; and also Ka and Ba. Without all these, you would not be a living being, but a thing.

What is a man without a Name, who cannot speak of himself?
What is a man without a Shadow, who is not anchored in the world?
What is a man without a Heart, who can neither feel nor think?
What is a man without a Ka, who has no essence?
What is a man without a Ba, who is not himself, but like unformed clay?"

Therefore praise Osiris, the King of Eternity, the Lord of Everlastingness, the eldest son of the womb of Nut, he who traverses millions of years in his existence."

(1) Here the translator is clearly inserting his own beliefs onto the text, as &$§/$& "§$"

]] }

terminal when ("osiris6.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Osiris.Chapter006.Text=

$%§§& knew it was the truth.

"Now I will tell you of the many perils you will face in your journey through the Duat. Listen well, for the challenges that lie before you are great, and if you do not prove yourself worthy, you may never reach the eternal reed fields of Osiris, and you may be lost forever. From the Second Death there is no awakening."

The Scribe brought forth a great papyrus, and carefully unfolded it before the Dying Man; and the Dying Man beheld that it was a map of the Duat, showing the many paths that led to Tower of Anubis, where his Heart was to be weighed. On each of the many paths, which threaded through the Duat like the infinite threads woven by Neith (3), there were marked the dangers that a traveller must face. Also there were great walls of iron, that none but the gods could cross, and gates made of purest light; and so the traveller could not avoid the trials that had been decreed, and could only proceed towards the Tower by proving his worth, thus earning the key to each sacred gate.

]] }

terminal when ("osiris7.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Osiris.Chapter007.Text=

"Tell me of the fearsome demons of the Duat," the Dying Man said to the wise Scribe.

"Though their terrible forms are loathsome to behold, they are not evil, for they are the servants of the gods; truly, they are the blessed doorkeepers and guardians of the holy paths. Their charge is to judge whether we are worthy to pass the gates that lead to Aaru; and so they challenge us with riddles, or in combat."

"Is this true of all the beings that live in the Duat?"

"Some say that it is not so; that there are ancient gods whose names have been forgotten, and spirits of darkness whose name none have ever known, and that these must be avoided at all costs. But others say that these, too, serve a greater purpose in ways that Osiris has not revealed to us."

"And what of the hidden paths, that are taken by $% %&/$&§ when the §%§%$

]] }

terminal when ("osiris11.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Osiris.Chapter011.Text=

"But why," the Dying Man said, "do the gods put all these challenges before us? Why the walls of iron and the gates of light, why the abominable demons guarding the path? Why must our heart be judged to be as light as the feather of Ma'at? Why is the road to Aaru so difficult?"

The Scribe considered these words.

"Some say that once the paths to Aaru were open, but too many sinners came, and the gods made the paths perilous to keep sin at bay. Others say that, being mortals (3), we cannot be worthy of Aaru unless we walk the path of Osiris, and so become Osiris ourselves. But I believe that Aaru could never be reached elsewise; for like the mountain path must be steep, the path to Aaru must be fraught with peril. As steepness and mountain are one, so are peril and paradise. They are inextricable. They create each other."

(1) There is an interesting parallel to this phrase in the Penitential Psalms, wh)$%§&$§&
(2) Here the Scribe appears to be speaking of Osiris /%&( $"%§& &"/// meaning the soul of the deceased, not the god himself.
(3) %4141+§525//52055.504C4/(F4144

]] }

terminal when ("oxyrhynchus.html") { show_text: [[TTRS:TermDlg.FoundTexts.Osiris.Oxyrhynchus.Text=

The great irony of the Oxyrhynchus Papyri is that such a vital source of information about the ancient world exists only because of a garbage dump. While the Library of Alexandria burned at the hands of fanatics and conquerors, depriving us of unimaginable insights into history, philosophy and art, the papers carelessly thrown away by the citizens of Oxyrhynchus survived to the modern day. And though it is true that a great deal of what we know today is because of the conscious efforts of individual and organizations (such as the spectacular translation and preservation work done during the Islamic Golden Age), so much more is simply the result of coincidence and luck.

We've lost texts that the ancients considered to be absolutely essential, while utterly trivial - even plagiarized - work has survived unharmed! 4C 49 46 45 20 49 4E 20 44 45 41 54 48 20 42 45 47 49 4E 53 20 41 4E 45 57 So if we want our descendants to remember more than glittering emo-vampires and autotuned teen pop stars, we have to invest in %$&make sure that %§&$ $%$& §""!!$§%

]] }

terminal when ("choice_of_life.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Johnson.ChoiceOfLife.Text=

The whole assembly stood awhile silent and collected.  "Let us return," said Rasselas, "from this scene of mortality. How gloomy would be these mansions of the dead to him who did not know that he should never die; that what now acts shall continue its agency, and what now thinks shall think on forever 

[ARCHIVE: 1759CE-F991] [JOHNSON, SAMUEL] [ERROR 556] Homage to you, Osiris, Lord of Eternity, King of the Gods, whose names are manifold/ whose forms are holy, you being of hidden form in the temples, whose Ka is holy. All the gods praise you, for you are the %&$%$ (/ Those that lie here stretched before us, the wise and the powerful of ancient times, warn us to remember the shortness of our present state; they were perhaps snatched away while they were busy, like us, in the choice of life."

]] }

terminal when ("body_and_soul.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Johnson.BodySoul.Text=

"But it is commonly supposed that the Egyptians believed the soul to live as long as the body continued undissolved, and therefore tried this method of eluding death."

"Could the wise Egyptians," said Nekayah, "think so grossly of the soul? If the soul could once survive its separation, what could it afterwards receive or suffer from the body?"

"The Egyptians would doubtless think erroneously," said the astronomer, "in the darkness of heathenism and the first dawn of philosophy. The nature of the soul is still disputed amidst all our opportunities of clearer knowledge; some yet say that it may be material, who, nevertheless, believe it to be immortal."

45 74 65 72 6E 69 74 79 20 69 73 20 69 6E 20 6C 6F 76 65 20 77 69 74 68 20 74 68 65 20 70 72 6F 64 75 63 74 69 6F 6E 73 20 6F 66 20 74 69 6D 65 2E

]] }

terminal when ("book_of_osiris.wiki") { show_text: [[TTRS:TermDlg.FoundTexts.Osiris.Wiki.Text=

The Book of the Scribe of Osiris (sometimes also referred to as the Book of the Journey to Aaru) is an Ancient Egyptian text discovered in the excavation of Oxyrhynchus. It has caused a certain degree of controversy among Egyptologists, as some argue that it is a classic funerary text such as the Book of Coming Forth by Day, while others believe it to be a poetic work not intended to be understood literally.

The book tells the story of a dying man who asks a scribe about the afterlife. The scribe, a servant of Osiris, describes how the man's Ka (life force) will become separated from his Ba (personality), and how he will have to reunite the two and become an Akh (living intellect), passing a series of trials in the Duat (underworld) in order to reach the paradise of Aaru. Unlike similar texts, the Book of the Scribe of Osiris focuses less on giving advice or /
A recent study (Carnahan/Hassan) suggests the text may have been intended as philosophical commentary on the world of the living through the allegory of the Duat. It remains unclear whether this was the intent of the original pre-Alexandrian author or a result of the later translation into Greek. The earlier manuscript, which is considered to be more authentic, is too fragmentary to provide answers, though perhaps further excavation may %&$/§

]] }

terminal when ("osiris21.txt") { show_text: [[TTRS:TermDlg.FoundTexts.Osiris.Chapter021.Text=

So, hearing the call of the morning birds as they greeted the dawn, the Scribe spoke:

"At the end of your journey, when every trial has been completed, when all the gates have opened before you and your soul has been weighed in the Tower of Anubis, your Ka and your Ba shall be reunited; and thus you shall become an Akh, and awaken in the eternal reed fields of Osiris; and there, in holy Aaru, you shall begin a new life amongst the gods and other blessed spirits."

"And who will I be?" the Dying Man asked.

"You shall be the memory of all that was, and the knowledge of the journey, and the shape of the days to come."

Thus ends the tale of the Dying Man and the Scribe. Praised be Osiris, the Foremost of the Westerners, the King of Eternity, the Lord of Everlastingness,  whose Ka is holy, $&$§ DG /// ERROR ///

]] }
terminal when ("apocrypha1.doc") { show_text: [[TTRS:TermDlg.FoundTexts.Eadwald.Apocrypha001.Text=

The Apocrypha of Saint Eadwald

This vision was granted by the Archangel Uriel to the humble servant Eadwald, that he might bear testimony of §/74686520
I turned to the north, and saw seven black clouds coming down upon the land. And each cloud was a plague unleashed from the Throne of God in the time of the Nephilim; in that age the plagues were buried in the Pit, there to remain until the End of Days, which was surely now come. I fell to my knees and prayed, and before me appeared seven angels, riding their chariots, wheels within wheels turning in the sky, and their light hid the clouds from my sight.

One angel stepped down onto the Earth, and by his fiery sword I knew him to be Uriel. He spoke, saying: "Seven plagues have awoken in the land, but not at the hand of Elohim; look upon the wages of sin. And shall He send forth the deluge once more, to cleanse the land of this evil? Shall He end all that slithers and all that crawls, and the birds of the sky and the fishes of the sea, to end that which you uncovered in your folly?" The $%§"&/ %//

]] }

terminal when ("apocrypha9.doc") { show_text: [[TTRS:TermDlg.FoundTexts.Eadwald.Apocrypha009.Text=

Now Uriel pointed his sword to the Tree of Life, which grew in the heart of dead Jerusalem.
"Behold: the tree grows still, though the city is dead. Within all that is mortal, there is the seed of immortality, for it is an immortal that fashioned it from chaos and void." Being a humble man of little wisdom, I asked: "Great Uriel, we are not allowed to eat from the Tree of Life. How may we then be saved?" And Uriel commanded me to stretch out my hand; and he gave me his fiery sword, which burned my hand, and he said: "Only by sacrifice can you free the world from the dominion of sin."

With a prayer on my lips, I fell upon Uriel's sword, and it pierced my heart. And truly, on my body, the stigmata of the Lord appeared, dripping blood that was not my blood onto the ground; and the seven heads of the dragon that were crowned in black clouds receded, and light fell upon the Earth, and Jerusalem was born again. Thus the angels departed, having delivered their message, and I awoke in the fields of our fair land, 746F2 0666F726D 207468652067 6F6C 64656 E206 1726D6F75(72206F6 620736369 656E6365

]] }

terminal when ("tetromino.html") { show_text: [[TTRS:TermDlg.FoundTexts.Eadwald.Tetromino.Text=

One of the most fascinating aspects of St. Eadwald's recently-uncovered writings is his preoccupation with finding divine truth in mathematical concepts, which at times borders on pantheism.

He was, it would seem, particularly concerned with what we now call tetrominoes, seeing in them a reflection of the tetragrammaton and the Greek word for God (TH-E-O-S). Their ability to form other shapes out of themselves symbolized to him the Creator's ability to reshape the world without breaking the laws He himself had established.

Eadwald referred to tetrominoes as "sigilla" (sigils), implying that they were a more truthful version of the magical symbols worshipped by heathens, rooted in both the Abrahamic tradition and careful observation of Creation.

It is unlikely that these texts were distributed, as they would almost certainly have resulted in charges of heresy.

]] }
terminal when ("figure_it_out.eml") { show_text: [[TTRS:TermDlg.FoundTexts.General.FigureItOut.Text=

From: %442() Li
To: 69.74.657@2.61.746.96
Subject: F 6E

The way I see it, the world doesn't come with a manual. You gotta figure it out for yourself. A bit here, a bit there, put it together, try to make sense of it. I'm pretty sure there is a truth, but that doesn't mean everyone who claims to know it really does. Then again, that doesn't have to be a bad thing! We live in an amazing world and searching for the truth can be a real adventure. Plus it's good for the brain.

Anyway, just some rambling thoughts from your old man. Don't let this stuff get you down. You're young, you've got loads of time to figure it all out.

Love,
Dad

]] }

terminal when ("blog24_alive.html") { show_text: [[TTRS:TermDlg.FoundTexts.General.Blog24.Text=

What is the point of being alive? I know, I know, it's an old question and not one that's easy to answer. But I mean, if you're reading this, you are alive. And some day you will stop being alive. Both of these facts are incontrovertible. 

So what about it, then? Don't you wonder? Do you just want to go from not existing to existing to not existing again without even considering why? You, right now, as you sit there reading this: why do you exist? What is the purpose of your life? Do you have one? Should you have one? Is it better to have a purpose or not? When you approach death, will you feel that your life had meaning? If so, why? If not, why not? What defines whether a life was good or not? 

It may seem abstract right now, but that moment just before death will come. It is inevitable. If you don't ask yourself these questions, how will you face that moment?

]] }

terminal when ("post437_comments.html") { show_text: [[TTRS:TermDlg.FoundTexts.General.Post437_Comments.Text=

12 Comments:

[cheeseman22]
first!

[AnneDragonfairy]
Seriously, cheeseman? THat was the best you could say?

[cheeseman22]
LOL

[thephilosopherqueen]
A great snapshot of the human species at its best and at its worst.

[cheeseman22]
at its worst, come on, its jsut a comment, im not stalin

[TheInfiniteMonkey]
Stalin was also a troll commenter.

[AnneDragonfairy]
Maybe you should cut out the jokes. This is serious. The most serious thing that's ever happened.

[TheInfiniteMonkey]
I think that's a great reason to joke around!

[thephilosopherqueen]
Internet's working less and less. Goodbye, all.

[TheInfiniteMonkey]
Bye.

[AnneDragonfairy]
God bless you.

[cheeseman22]
last

]] }

terminal when ("chatbots.html") { show_text: [[TTRS:TermDlg.FoundTexts.General.Chatbots.Text=

Jenny77: chatbots are becoming increasingly sophisticated
nigel_pyjamas: true, but hardly relevant to this discussion
Jenny77: are you sure?
Jenny77: how do you know that I'm not a bot?
samschwartz: don't be ridiculous
Jenny77: i'm not ridiculous
Jenny77: honestly, how would you know?
veganwarrior: haha troll
Jenny77: i'm not a troll
veganwarrior: yeah right
Jenny77: is there anything I've written so far that could not be written by a bot?
Jenny77: i responded to simple insults like "ridiculous" and "troll" with very basic negations
Jenny77: and i detected that none of you use proper orthography so i also avoided capitalization
veganwarrior: what's the capital of France?
Jenny77: paris
Jenny77: even the simplest script could pull that info from the net
nigel_pyjamas: what's the capital of Croatia?
Jenny77: Zagreb
nigel_pyjamas: OK she's a bot, lol
Jenny77: i'm not a bot
Jenny77: i'm European
Jenny77: we learn these things in school
samschwartz: i've seen you in this chatroom many times
samschwartz: bots can't participate in discussions
samschwartz: at best they can interject random comments
veganwarrior: sam is right
veganwarrior: stop trolling
nigel_pyjamas: uhh, veganwarrior
nigel_pyjamas: sam is a bot

]] }

terminal when ("got_it_lyrics.html") { show_text: [[TTRS:TermDlg.FoundTexts.General.GotItLyrics.Text=

[CANNOT LOAD VIDEO FILE]

24,000,000 views

My new song with lyrics. Gotta laugh about this stuff! Laughter is the best medicine, LOL.

Lyrics:

I've got it
You've got it
He's got it
She's got it

Mommy's got it
Daddy's got it
Baby's got it
Granny's got it

Laddie's got it
Fatty's got it
Happy's got it
Sappy's got it

Chorus:
Everybody!
Everybody's got it!
Come on!

Jack's got it
Fred's got it
Bob's got it
Dog's g-

Dog is fine!

Chorus:
Woof woof woof!
Woof woof woof!
*dancing dog*

Everybody!
Everybody's got it!
Except Dog! (Woof!)

We've got it
We've got it
We've got it

Everybody's got it!

&lt;FAVORITE&gt; &lt;ADD TO PLAYLIST&gt;

]] }

terminal when ("immortality.html") { show_text: [[TTRS:TermDlg.FoundTexts.General.Immortality.Text=

Disgruntlomeister's Blogstasy, Episode 204

I don't know about everybody else, but I'm afraid of dying. I don't see any reason to believe there's an afterlife. I'm an organism like any other: when my brain stops working, my consciousness will cease, and I will be gone. And you know what? I can't just embrace that. I can't say I'm OK with it or I've accepted it or some nonsense like that. I don't want to have an ending. It terrifies me. If I had a genie right now, I'd wish for immortality. Who wouldn't? "Oh, but you wouldn't REALLY want to be immortal," the pseudo-philosophers say. Pretentious drivel! Everybody wants to live forever. Maybe everybody deserves to live forever, too.

But we can't, so here we are. Live with it. 

Or rather, don't.

]] }

terminal when ("weight_loss_722.html") { show_text: [[TTRS:TermDlg.FoundTexts.General.WeightLoss.Text=

$*§%s Weight Loss Blog &gt; Latest Entry

Oh man, if there's one thing that's good about inevitable death, it's the food. Yeah, baby! I'm going to have all the horribly unhealthy food in the world. I'm going to feast on jelly bananas like a crazy monkey on Monkey Christmas! And you know those muffins that have so much chocolate they're basically melting? That's gonna be my breakfast. And burgers for lunch. I'm gonna have burgers so greasy you could use them to lubricate a whole factory. Triple bacon burgers with double cheese and extra onions and mayonnaise and ketchup and mustard and big fat juicy patties. And then oily, thick pizza with spicy salami and barbecue sauce and olives and jalapeños and sour cream… food coma here I come!

]] }

terminal when ("chatlog_charlie_7.txt") { show_text: [[TTRS:TermDlg.FoundTexts.General.ChatlogCharlie.Text=

[flower4] man, you know what really freaks me out?
[charlie_on_the_rocks] what?
[flower4] the human body decomposes quite quickly, so all the information stored in chemicals in our brains will be gone really quickly
[charlie_rocks] dude
[flower4] but computers and books last a long time
[flower4] so all our messages, our ideas, our books
[flower4] it'll all be out there
[charlie_rocks] our porn
[flower4] even being transmitted through space
[flower4] yeah, our porn too i guess
[flower4] we'll all be gone, but the works of aristotle will still exist
[flower4] so will star trek, firefly, babylon 5
[flower4] lotr, blade runner…
[charlie_rocks] cyber-***** of planetron 6
[flower4] shakespeare, byron…
[flower4] hell even videogames
[charlie_rocks] ****** overdrive 3
[charlie_rocks] seattle ******
[charlie_rocks] dutch ******* cascade
[charlie_rocks] the ****** of *** mountain
[flower4] wtf dude
[charlie_rocks] yeah
[charlie_rocks] imagine if aliens find those

]] }

terminal when ("chatlog_9787.txt") { show_text: [[TTRS:TermDlg.FoundTexts.General.Chatlog9798.Text=

[Lana123] so I think, what's the point, right?

[Omar] Yeah. I keep thinking about my aunt. Have I told you about her?

[Lana123] I don't think so.

[Omar] She's super rich. Like, she drives around in a ridiculously expensive sports car, and she goes on vacations to the Bahamas

[Omar] and she has a huge house that feels more like some sort of corporate HQ than a home

[Omar]  She worked really hard to get all that, but she also screwed over a lot of people, including her own family.

[Omar] I used to be quite angry at her for what she did to my parents, but now I think… what did she get out of it?

[Omar] She and her husband are always fighting, their son became so obsessed with money that he ruined his own family…

[Omar] I mean, yeah, they have everything that I always dreamed about, but they can't enjoy any of it.

[Lana123] my grandfather was like that

[Omar] And now, at the end… what does any of it mean? If you have all the money in the world but you die alone and unloved, what did you accomplish? I don't get it. I just don't.

]] }

terminal when ("orangutan.html") { show_text: [[TTRS:TermDlg.FoundTexts.General.Orangutan.Text=

A medical journal has published a startling new theory about last year's sudden, shocking extinction of the orangutan [see our award-winning video of the last orangutan at this link]. They suggest that the virus responsible was not a new mutation, but a very old one - an ancient virus buried until now in high-latitude permafrost, set free by global warming. The virus may have plagued the ancestors of the modern great apes more than one hundred thousand years ago.

Several important questions remain unanswered, including &$%§& /// ERROR /// more importantly, the study suggests that, based on samples taken from locations around the globe, the &%%$& incubation period may ///

If you liked this article, you may also like:
* How To Really Avoid Heart Attacks
* You Won't Believe What's Living Under This Rock
* Top Ten Amazing Science Facts
* Oscars Nip Slip Explained By Physics (video)
* How To Easily Beat Any Infection (sponsored link)

]] }

terminal when ("hope.eml") { show_text: [[TTRS:TermDlg.FoundTexts.General.Hope.Text=

From: 686.5.6176@656.E20.696E
To:68.65.6C@6C2.01.973
Subject:
Hi,

I hope you get this, the internet's been disappearing unpredictably. I want you to know that I'm going to try and get to you. I know it's far and there's not a lot of time, but I think I can manage. I want to be with you, and fra%&$%/ on the road trying to get to you seems better than just staying here, so far away from you. At least I'll be as close as I can get. Remember $§&%$&

But hey, don't be sad. I might make it. I've thought about it and the distance should be crossable on time, assuming the s&$46474 don't kick in before $§%§%.

See you soon. I love you.
%$§&§&

]] }

terminal when ("family.html") { show_text: [[TTRS:TermDlg.FoundTexts.General.Family.Text=

For those of you who have faithfully followed this blog for the last five years, I just wanted to give you one final update. I'm going to spend my remaining time with my family. Yeah, I know, I know. There are probably 50+ posts about all the problems I've had with them. But in the end... they are my family. They are the people I grew up with, the people I care about, the people I love. Sure, they annoy the hell out of me. They've said awful things to me and I've said awful things to them. But that doesn't change who we are. In fact, if we didn't care about each other, this stuff wouldn't upset us.

Do I still think they were wrong? Yeah, absolutely. Would I behave differently if I thought we all still had a lot of time? Definitely. But we don't, so I'd rather spend a couple of weeks sitting on the porch with my parents and my sisters than being angry and alone. Besides, it's not like we're going to fight about my job prospects anymore.

If you can, try to make peace with those you love. It's your last chance. Thanks for reading.

]] }

terminal when ("post437.html") { show_text: [[TTRS:TermDlg.FoundTexts.General.Post437.Text=

Like everyone else on the internet these (last) days, I just wanted to say bye, and thanks for reading my little blog for so many years. It's been fun, hasn't it? So many deep conversations, so much philosophy… OK, OK, it was mostly cat pictures and bad puns, but still. I kinda regret spending so much time at the computer - not when I was doing stuff, just all the sitting around, checking my emails a million times, reading pointless status updates by people I didn't like… but I don't regret the friends I made here or the laughs we had. 

You're all good people and I'm glad I got to know you. Have a nice end of the world.

[12 Comments]

]] }

terminal when ("humblebrag.html") { show_text: [[TTRS:TermDlg.FoundTexts.General.Humblebrag.Text=

Ariana's Blog - Entry
I have always known that God "maketh his sun to rise on the evil and on the good, and sendeth rain on the just and on the unjust" (Matthew 5:45), but I must admit it's one thing to know the words and another to truly understand them! Though I am certain that my faith is true, that does not make me special or exempt me from suffering. I'm just another human being, and God has seen billions of us come and go. And I have to say, this is surprisingly hard to accept. 

I always thought I was humble, but now I'm realizing that I was very proud of being humble, which is… really dumb. Guess I'm not the first one to do that, huh?

Tags:
]] }

terminal when ("pets.html") { show_text: [[TTRS:TermDlg.FoundTexts.General.Pets.Text=

PLEASE REMEMBER TO RELEASE YOUR PETS

While it's true that not all pets will be able to adjust to living without you, many will manage, and the least you can do is give them a chance.

Just remember:
- Release your pet before you become incapacitated.
- If you notice any locked-in animals in your area, please take the time to free them.
- Leaving the doors and windows of your home open will turn it into a useful shelter.
- Setting out large quantities of dry food may help your pet through the transition period.

]] }

terminal when ("party_on_dudes.eml") { show_text: [[TTRS:TermDlg.FoundTexts.General.PartyOnDudes.Text=

From: Lubomir Georgiev
To: [...]
Subject: The LAN Party at the End of the Universe

Yo,

I don't know if you folks noticed, but it's the end of the world! There's nothing we can do about it, so instead of sitting around crying, how about we have some fun before we croak? Yes, you know exactly what I'm talking about: let's play some video games! It's LAN party time!

Two days from now, we're all getting together at the old school library. There'll be noms, drinks, music, and old-school gaming! You're invited. And bring your friends, too. Especially if they're hot.

See you in 3000 BC!

- LubLub

]] }

terminal when ("faith.eml") { show_text: [[TTRS:TermDlg.FoundTexts.General.Faith.Text=

From: Neil Macomber
To: A/%$$%
Subject: Stray thoughts at midnight

Dearest Brother,

I admit that I am finding it very difficult to believe in a loving God under these circumstances. Why would a loving God inflict such pain and suffering on good, kind people? If truly there is a personal God... how can He be the same God who will subject those children to such unbearable pain? I remember all the answers we were taught, yet none of them seem believable now.

I don't want to stand in front of people and preach something that I don't feel in my heart. Better to have doubts than to be a hypocrite. And yet I also cannot deny the experience that led me to this vocation. So what is the truth? Perhaps it is that I neglected the mystery of God, used "He moves in mysterious ways" as an excuse rather than as the terrifying acknowledgment it truly is. Perhaps I made God too human.

If the universe has a purpose, that does not mean that it revolves around us. A sobering thought, but are we not supposed to be humble in the face of the divine?

With love,


]] }

terminal when ("robots.txt") { show_text: [[TTRS:TermDlg.FoundTexts.General.Robots.Text=

There once was a robot from Spain
Who went a little insane
It found that its data
Had never left beta
And needed to upgrade its brain

There once was a bot from Japan
Whose eyes the numbers could scan
It found that the facts
Required an axe
And a very serious plan

There once was a brilliant AI
Whose circuits were built not to fry
It got caught in a loop
It got caught in a loop
It got caught in a loop

]] }

terminal when ("the_web.html") { show_text: [[TTRS:TermDlg.FoundTexts.General.TheWeb.Text=

To be honest, I thought that the net would be completely abandoned at this point. But internet activity has actually surged massively in the last couple of weeks! Everybody's talking. Trying to find solutions, exchanging stories, saying goodbye. It's like the entire planet is reaching out, all the disparate threads of humanity pulling together, idiots and geniuses alike, to be as human as possible one last time. It's almost like what we were always told the internet was going to be. And most of it is free now, because who cares about money at this point? Might as well have some fun.

If any of you would like to talk, especially people I've known online for a long time, send me an email. I'd love to say goodbye.

]] }

terminal when ("TRUTH.html") { show_text: [[TTRS:TermDlg.FoundTexts.General.Truth.Text=

do NOT BELIEVE what THEY are saying

this is "NOT" the end of the world created by OUR LORD G-D in SIX DAYS

this is A CONSPIRACY of the GOVERMENT ILUMINATI & INTERNATIONAL DARWINISM

this is GLOBAL WARMING "2.0" a LIE told by the CHILDREN OF BEZELBUB (SCIENCE)

do not let THEM take your LIBERTY (Exodus 21:24)

DEFEND yourself against all VACCINES, EXPERIMENTS, ARTIFICIAL MEDICINES & POPERY

]] }

terminal when ("ARGH_solutions.eml") { show_text: [[TTRS:TermDlg.FoundTexts.IAN.ArghSolutions.Text=

From: [Bob Rakovsky]
To: [108 recipients]
Subject: GRARGH

All these calm people are driving me mad. Have they all suddenly turned into Buddha or something? I didn't know the world had such reserves of serenity. Though these latter-day Gautamas are at least being somewhat realistic. You know what's even worse? Those paranoid nutters who are building bunkers and collecting guns. What are they gonna do, shoot t&$$ Though I have to admit the overall response has been much better than I ever anticipated, to the point where I might be moved by the beauty of humanity if I wasn't such a grumpy old fart, this minority of total idiots is really messing up my final days.

//&( anyway. The reason I'm writing is because I refuse to believe in scenarios with absolutely no solutions. If we all put our heads together, we can figure something out. It'll be crazy, but crazy is better than dead. Crazy is what we do best on this planet.

]] }

terminal when (ElevatorControl_3rdFloorHint) { show_text:[[TTRS:TermDlg.ElevatorFloors.Ln0022.0.show_text.AthenaStoodBefore=
If you can see this, I'm not sure how or why I can alter this text. My name is The Shepherd, and I want to help you escape. ELOHIM and Samsara tricked me into trapping myself, but I'm not entirely bound by time. I wrote down the code you're looking for. I have attached it to $$
]] }

terminal when (ElevatorControl_4thFloorHint) { show_text:[[TTRS:TermDlg.ElevatorFloors.Ln0037.0.show_text.AndThereInTheTower=
And there, in the Tower, you shall hear the rustling of the wind in the reed-fields of Osiris, and you shall rejoice. But beware, for the end of your journey is not yet upon you! Thank you for installing Realistic Elevators 1.8. New features include password locking and automatic auxiliary stair generation. See$&

And the Scribe of Osiris wrote upon the sacred parchment that is called INI Floor4_password = %o"Code_Floor4". Only thus can you reach blessed Aaru.
]] }

terminal when (ElevatorControl_5thFloorHint) { show_text:[[TTRS:TermDlg.ElevatorFloors.Ln0049.0.show_text.AndSoTheBlessedMessenger=
And so the Blessed Messenger revealed unto me the bones of New Jerusalem, slumbering in the dust that was the body of Adam, awaiting the day of resurrection. And lo and behold, within the dust was concealed a holy fire, and the fire s;%() the sacred numbers, of which the one you seek is
And I perceived that with the holy fire and the sacred knowledge of numbers and sigils, the rekindling %
]] }


terminal when ( Booting and not CLI_Blocked ) { notext
  goto: CLI_Booting
}
terminal when (CLI_Booting and not MiltonAllowed) {
notext
set: CLI_SeenHelp
}
terminal when (CLI_Booting and not BootedBefore and not CLI_Blocked) {
  text: [[TTRS:TermDlg.CLI_Global.Ln0013.0.text.LoadingLibraryOSW1W1=
Loading library session.%w1.%w1.%w1 %w9Done.
Mounting local disks.%w1.%w1.%w1 %w9 [47 million] distributed resources found
Connecting network drives.%w3.%w3.%w3.%w3.%w3 %w9Error: network inaccessible.%s0%w9
Loading Milton Library Assistant.%w3.%w3.%w3.%w3.%w3 %w9Error: MLA unresponsive%s0%w9
Initiating command prompt.%w1.%w1.%w1 %w9Done.
]]
  setlocal: CLI_Enabled
  set: BootedBefore
  goto: CLI_BootSuffix
}
terminal when (CLI_Booting and BootedBefore and not CLI_Blocked) {
  text: [[TTRS:TermDlg.CLI_Global.Ln0028.0.text.LoadingLibraryOSDoneMounting=
Loading library session... Done.
Mounting local disks... [47 million] distributed resources found
Connecting network drives...... %w3Error: network inaccessible.%s0%w5
]]
  setlocal: CLI_Enabled
  goto: CLI_BootSuffix
}

terminal when (CLI_Enabled and not Milton2_5_DONE and not CLI_MaybeAutoList) {
prompt: "TTRS:TermDlg.CLI_Global.Ln0040.0.text.GuestLocal=[guest@local]# "
}
terminal when (CLI_Enabled and Milton2_5_DONE and not CLI_MaybeAutoList) {
prompt: "TTRS:TermDlg.CLI_Global.Ln0041.0.text.AdminLocal=[admin@local]# "
}
terminal when (CommPortal_FakeCLI and not CommPortal_Start and not CLI_MaybeAutoList) {
prompt: "TTRS:TermDlg.CLI_Global.Ln0042.0.text.GuestUnknown=[guest@unknown]# "
}
terminal when (CLI_MaybeAutoList and CLI_SeenHelp) { notext
setlocal: CLI_AutoList
}

player when (CLI_AutoList) {
  text: "TTRS:TermDlg.Common.List2=list"
  autonext: CLI_list
  clear: CLI_AutoList
}
terminal when (CLI_MaybeAutoList and not CLI_SeenHelp) { notext
goto: dummy
}
terminal when (CLI_Resume) { 
text: [[TTRS:TermDlg.CLI_Global.Ln0041.0.text.YourSupportSessionHasBeen=Terminating support session%w2.%w2.%w2.Done
]]
goto: EnableTheCLI
}

terminal when (EnableTheCLI){
text:[[TTRS:TermDlg.CLI_Global.Ln0052.0.text.ResumingCommandPromptW5W5=Resuming library archive session%w5.%w5.%w5.Done
]]
clear: CLI_Blocked 
setlocal: CLI_Enabled
goto: CLI_MaybeAutoList
}
player when (CLI_Enabled and not CLI_SeenHelp and not Typed_Hi) {
  text: "TTRS:TermDlg.CLI_Global.Ln0064.0.text.Hi=Hi"
  setlocal: Typed_Hi
  next: ErrorUnknownCommand
}
player when (CLI_Enabled and not CLI_SeenHelp and not Typed_What) {
  text: "TTRS:TermDlg.CLI_Global.Ln0069.0.text.WhatsThis=What's this?"
  setlocal: Typed_What
  next: ErrorUnknownCommand
}
player when (CLI_Enabled and not CLI_SeenHelp and not Typed_asdfa) {
  text: "TTRS:TermDlg.CLI_Global.Ln0074.0.text.Asdfaasdfasdffdsaasdfasdfasdffasdasdfafsdfasd=asdfaasdfasdffdsaasdfasdfasdffasdasdfafsdfasd" short: "TTRS:TermDlg.Common.Asdfa=asdfa"
  setlocal: Typed_asdfa
  next: ErrorUnknownCommand
}
player when (CLI_Enabled and not CLI_SeenHelp and not Typed_HelloWorld) {
  text: "TTRS:TermDlg.CLI_Global.Ln0079.0.text.HelloWorld=hello world"
  setlocal: Typed_HelloWorld
  next: ErrorUnknownCommand
}
player when (CLI_Enabled and not CLI_SeenHelp and not Typed_Dir) {
  text: "TTRS:TermDlg.CLI_Global.Ln0084.0.text.Dir=dir"
  setlocal: Typed_Dir
  next: ErrorUnknownCommand
}

terminal when (ErrorUnknownCommand) {
  text: "TTRS:TermDlg.CLI_Global.Ln0090.0.text.UnknownCommandTypeHelpFor=Unknown command. Type 'help' for list of available commands."
  setlocal: CLI_SeenUnknownCommand
}
player when (CLI_Enabled and CLI_SeenHelp and not TextsAvailable) {
  text: "TTRS:TermDlg.Common.List=list"
  next: CLI_list
}

terminal when (CLI_list and not InTerminal_Ending_Tower){
	text: [[TTRS:TermDlg.CLI_Global.Ln0105.0.text.SearchingForLocallyCachedResources=
Searching for locally cached resources%w1.%w1.%w1.%w1.

%p
	
]]
setlocal: TextsAvailable
set: "$(Terminal)_SeenTexts"
}

player when (CLI_Enabled and CLI_SeenUnknownCommand) {
  text: "TTRS:TermDlg.Common.Help=help"
  next: CLI_help
}
terminal when (CLI_help) {
  text: [[TTRS:TermDlg.CLI_Global.Ln0119.0.text.BasicTerminalCommandsAreSpan=
Basic terminal commands are:
  <span class="strong">list</span> - display a list of available resources
  <span class="strong">open &lt;filename&gt;</span> - show contents of a file
  <span class="strong">help</span> - display this text
  <span class="strong">run mla</span> - load Milton Library Assistant (advanced interface)
  <span class="strong">exit</span> - close the terminal session
]]
  set: CLI_SeenHelp
}
player when (CLI_Enabled and CLI_SeenHelp and (MLAIntro_PhaseQuery or MLAIntro_PhaseBusy) and MiltonAllowed ) {
  text: "TTRS:TermDlg.CLI_Global.Ln0132.0.text.RunMla=run mla"
  next: RunMLA
}
terminal when (RunMLA and MLAIntro_PhaseBusy){
text:[[TTRS:TermDlg.CLI_Global.Ln0149.0.text.UnableToOpenASupport=Unable to open a support session. Library assistant software is busy elsewhere.

]]
}

player when (CLI_Enabled and CLI_SeenHelp) {
  text: "TTRS:TermDlg.Common.Exit=exit"
  next: CLI_exit
}
terminal when (CLI_exit){
	text: [[TTRS:TermDlg.CLI_Global.Ln0159.0.text.TerminatingLibrarySessionW1W1=
Terminating session%w1.%w1.%w1.%w1.
Session terminated.
]]
exit
}


terminal when(Overlay_Intro_AlreadyFinished) {
text:[[TTRS:TermDlg.Overlay_Intro.Ln003.0.text.AfterGatesOfEternity=
Suspending active process.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1Done.%w5
Collecting experiment data.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1Done.%w5
Analysing logic performance.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1Satisfactory.%w5
Child program independence check.%w1.%w9.%w1.%w1%w9%s0<span class="red_invmul">FAILED!</span>%w9
Storing memory dump.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1Done.%w5
Submitting current version to repository.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1%vp stored.%w5
Locking in successful child parameters.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1Done.%w5
Randomly adjusting remaining parameters.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1Done.%w5
Increasing version number.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1Done.
Erasing memory banks.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.%w2.Done.%w5
%w5
%w5
%w5
%w5
%e1
%w9
]]
}
terminal when(Overlay_Intro_AfterCredits) {
text: [[TTRS:TermDlg.Overlay_Intro.Ln010.0.text.Restarting=Restarting the simulation.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1%g1.%w1.%w1.%w1.Done.%g5%w5%c
]]
goto: Overlay_Intro_RealStart
}
terminal when(Overlay_Intro_RealStart) {
text:[[TTRS:TermDlg.Overlay_Intro.Ln020.0.text.Initializing=
Initializing firmware.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1Firmware functional.%w5
Loading child program parameters.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1%vc Loaded.%w5
System check.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1Passed.%w5
Starting child process.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1
Ready.%w9%e3%w9%w9%w9%w9%w9%w9%w9%w9
]]
}

﻿terminal when(Overlay_Tutorial_02_Barrier) {
text:[[TTRS:TermDlg.Overlay_Tutorial.Ln008.0.text.2_Barrier=
Initiating child program logic check.%w1.%w1.%w1.%w1.%w1.%w1%w9%w9%w9%w9%e1%w9
]]
}

terminal when(Overlay_Tutorial_03_Jammer) {
text:[[TTRS:TermDlg.Overlay_Tutorial.Ln008.0.text.3_Jammer=
Subject-object interaction.%w1.%w1.%w1.%w1.%w1OK.%w9%w9%w9%w9%e1%w9
]]
}

terminal when(Overlay_Tutorial_04_Door) {
text:[[TTRS:TermDlg.Overlay_Tutorial.Ln014.0.text.4_Door=
Complex task management.%w1.%w1.%w1.%w1OK.%w9%w9%w9%w9%e1%w9
]]
}


terminal when(Overlay_Tutorial_05_Barrier) {
text:[[TTRS:TermDlg.Overlay_Tutorial.Ln008.0.text.5_Barrier=
Child program basic calibration successful%w9%w9%w9%w9%e1%w9
]]
}

terminal when(Overlay_Tutorial_06_JamMine) {
text:[[TTRS:TermDlg.Overlay_Tutorial.Ln008.0.text.6_MineJam=
Spatial awareness.%w1.%w1.%w1.%w1OK.%w9%w9%w9%w9%w9%w9%w9%w9%w9%w9%w9%w9%e1%w9
]]
}


terminal when(Overlay_Tutorial_07_JamTurret) {
text:[[TTRS:TermDlg.Overlay_Tutorial.Ln008.0.text.7_TurretJam=
Predictive capacity.%w1.%w1.%w1.%w1OK.%w9%w9%w9%w9%e1%w9
]]
}

terminal when(Overlay_Tutorial_08_PlayerDied) {
text:[[TTRS:TermDlg.Overlay_Tutorial.Ln008.0.text.8_Died=
Correcting for errors.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1.%w1Done.
Reloading child program.%w1.%w1.%w1.%w1Done.%w9%w9%w9%w9%e1%w9
]]
}

terminal when(Overlay_Tutorial_14_Barrier) {
text:[[TTRS:TermDlg.Overlay_Tutorial.Ln047.0.text.14_Barrier=
Child program logic check successful
Checking sigils.%w1.%w1.%w1.Done.%w9
Removing child restrictions.%w1.%w1.%w1.Done.%w9
Recording data.%w1.%w1.%w1.
Have a nice day.%w9%w9%w9%w9%e1%w9
]]
}

﻿
terminal when(Scientist_01_TimeCapsule) {
text:[[TTRS:TermDlg.AudioLog_Scientist_01_TimeCapsule=
Playing time capsule
goto: AudioLog_Signature
}

terminal when(Scientist_02_ProblemSolvers) {
text:[[TTRS:TermDlg.AudioLog_Scientist_02_ProblemSolvers=
Playing time capsule
goto: AudioLog_Signature
}

terminal when(Scientist_03_TalosPrinciple) {
text:[[TTRS:TermDlg.AudioLog_Scientist_03_TalosPrinciple=
Playing time capsule
goto: AudioLog_Signature
}

terminal when(Scientist_04_Pompeii) {
text:[[TTRS:TermDlg.AudioLog_Scientist_04_Pompeii=
Playing time capsule
goto: AudioLog_Signature
}

terminal when(Scientist_05_WeBuiltAllThis) {
text:[[TTRS:TermDlg.AudioLog_Scientist_05_WeBuiltAllThis=
Playing time capsule
goto: AudioLog_Signature
}

terminal when(Scientist_06_DNA) {
text:[[TTRS:TermDlg.AudioLog_Scientist_06_DNA=
Playing time capsule
goto: AudioLog_Signature
}

terminal when(Scientist_07_BeyondYourLifespan) {
text:[[TTRS:TermDlg.AudioLog_Scientist_07_BeyondYourLifespan=
Playing time capsule
goto: AudioLog_Signature
}

terminal when(Scientist_08_OnTheFirstNight) {
text:[[TTRS:TermDlg.AudioLog_Scientist_08_OnTheFirstNight=
Playing time capsule
goto: AudioLog_Signature
}

terminal when(Scientist_09_MiddleAges) {
text:[[TTRS:TermDlg.AudioLog_Scientist_09_MiddleAges=
Playing time capsule
goto: AudioLog_Signature
}

terminal when(Scientist_10_SometimesIWorry) {
text:[[TTRS:TermDlg.AudioLog_Scientist_10_SometimesIWorry=
Playing time capsule
goto: AudioLog_Signature
}

terminal when(Scientist_11_WhenTheScale) {
text:[[TTRS:TermDlg.AudioLog_Scientist_11_WhenTheScale=
Playing time capsule
goto: AudioLog_Signature
}

terminal when(Scientist_12_ThisIsAllEgo) {
text:[[TTRS:TermDlg.AudioLog_Scientist_12_ThisIsAllEgo=
Playing time capsule
goto: AudioLog_Signature
}

terminal when(Scientist_13_TheresNoTime) {
text:[[TTRS:TermDlg.AudioLog_Scientist_13_TheresNoTime=
Playing time capsule
goto: AudioLog_Signature
}

terminal when(Scientist_14_IntelligenceIsMore) {
text:[[TTRS:TermDlg.AudioLog_Scientist_14_IntelligenceIsMore=
Playing time capsule
goto: AudioLog_Signature
}

terminal when(Scientist_15_ILookAtThisInertShape) {
text:[[TTRS:TermDlg.AudioLog_Scientist_15_ILookAtThisInertShape=
Playing time capsule
goto: AudioLog_Signature
}

terminal when(Scientist_16_LookingThroughTheArchive) {
text:[[TTRS:TermDlg.AudioLog_Scientist_16_LookingThroughTheArchive=
Playing time capsule
goto: AudioLog_Signature
}

terminal when(Scientist_17_NearlyEverythingOnThisPlanet) {
text:[[TTRS:TermDlg.AudioLog_Scientist_17_NearlyEverythingOnThisPlanet=
Playing time capsule
goto: AudioLog_Signature
}

terminal when(Scientist_18_Curiosity) {
text:[[TTRS:TermDlg.AudioLog_Scientist_18_Curiosity=
Playing time capsule
goto: AudioLog_Signature
}

terminal when(Scientist_19_MyBestFriendDied) {
text:[[TTRS:TermDlg.AudioLog_Scientist_19_MyBestFriendDied=
Playing time capsule
goto: AudioLog_Signature
}

terminal when(Scientist_20_ILookInTheMirror) {
text:[[TTRS:TermDlg.AudioLog_Scientist_20_ILookInTheMirror=
Playing time capsule
goto: AudioLog_Signature
}

terminal when(Scientist_21_ThereAreFlawsInTheSystem) {
text:[[TTRS:TermDlg.AudioLog_Scientist_21_ThereAreFlawsInTheSystem=
Playing time capsule
goto: AudioLog_Signature
}

terminal when(Scientist_22_ICantKeepMyEyes) {
text:[[TTRS:TermDlg.AudioLog_Scientist_22_ICantKeepMyEyes=
Playing time capsule
goto: AudioLog_Signature
}

terminal when(AudioLog_Signature) {
text:[[TTRS:TermDlg.AudioLog_Signature=
Alexandra Drennan%w2
Project Lead / AI Module%w2
Institute for Applied Noematics%w9%w9%w9%w9%w9%e1%w9]]
}

terminal when(AudioLog_Paused) {
text:[[TTRS:TermDlg.AudioLog_Paused=
Time capsule playback paused...]]
}

terminal when(AudioLog_Interrupted) {
text:[[TTRS:TermDlg.AudioLog_Interrupted=
Time capsule playback interrupted.%w2
Saving to journal%w3.%w3.%w3.%w3
DONE!%w9%w9%w9%e2%w9]]
}
terminal when(ItemVirtualizationGlitch) {
text:[[TTRS:notrans=
HIM ERROR 33: Recording inconsistency detected!%w3
Attempting autofix%w1.%w1.%w1.%w1%s0FAILED%w3
Spawning fixer bot%w1.%w1.%w1.%w1%s0FAILED%w3
Looking for last stable state%w1.%w1.%w1.%w1FOUND%w3
Rewinding%w1.%w1.%w1.%w1%e9%w9%w9%w9%w9%w9
]]
}
